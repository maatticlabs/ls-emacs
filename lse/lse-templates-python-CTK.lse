;-*- unibyte: t; coding: iso-8859-1; -*-

(lse-define-fill-in "Arc:canvas" 
  '(description           "Argument 1 of Arc")
  '(leading               ",")
;;; Arc:canvas
)

(lse-define-fill-in "Arc:args" 
  '(description           "Argument 2 of Arc")
  '(leading               ",")
  '(separator             ", ")
;;; Arc:args
)

(lse-define-fill-in "Arc(canvas,args,kw)" 
  '(description           "Create a Arc object")
  '(token                 "CTK.Arc")
  '(replacement           "CTK.Arc («Arc:canvas», ««Arc:args»»···, ««py-named-arg»»···)")
;;; Arc(canvas,args,kw)
)

(lse-define-fill-in "Balloon:master" 
  '(description           "Argument 1 of Balloon")
  '(leading               ",")
;;; Balloon:master
)

(lse-define-fill-in "Balloon:offx" 
  '(description           "Argument 2 of Balloon (default = 20)")
  '(leading               ",")
;;; Balloon:offx
)

(lse-define-fill-in "Balloon:offy" 
  '(description           "Argument 3 of Balloon (default = -5)")
  '(leading               ",")
;;; Balloon:offy
)

(lse-define-fill-in "Balloon:delay" 
  '(description           "Argument 4 of Balloon (default = 500)")
  '(leading               ",")
;;; Balloon:delay
)

(lse-define-fill-in "Balloon:name" 
  '(description           "Argument 5 of Balloon (default = None)")
  '(leading               ",")
;;; Balloon:name
)

(lse-define-fill-in "Balloon:arrow" 
  '(description           "Argument 6 of Balloon (default = 1)")
  '(leading               ",")
;;; Balloon:arrow
)

(lse-define-fill-in "Balloon(master,offx,offy,delay,name,arrow)" 
  '(description           "Create a Balloon object")
  '(token                 "CTK.Balloon")
  '(replacement           "CTK.Balloon («Balloon:master», ««Balloon:offx»», ««Balloon:offy»», ««Balloon:delay»», ««Balloon:name»», ««Balloon:arrow»»)")
;;; Balloon(master,offx,offy,delay,name,arrow)
)

(lse-define-fill-in "BaseWidget:master" 
  '(description           "Argument 1 of BaseWidget")
  '(leading               ",")
;;; BaseWidget:master
)

(lse-define-fill-in "BaseWidget:widgetName" 
  '(description           "Argument 2 of BaseWidget")
  '(leading               ",")
;;; BaseWidget:widgetName
)

(lse-define-fill-in "BaseWidget:cnf" 
  '(description           "Argument 3 of BaseWidget (default = {})")
  '(leading               ",")
;;; BaseWidget:cnf
)

(lse-define-fill-in "BaseWidget:kw" 
  '(description           "Argument 4 of BaseWidget (default = {})")
  '(leading               ",")
;;; BaseWidget:kw
)

(lse-define-fill-in "BaseWidget:extra" 
  '(description           "Argument 5 of BaseWidget (default = ())")
  '(leading               ",")
;;; BaseWidget:extra
)

(lse-define-fill-in "BaseWidget(master,widgetName,cnf,kw,extra)" 
  '(description           "Create a BaseWidget object")
  '(token                 "CTK.BaseWidget")
  '(replacement           "CTK.BaseWidget («BaseWidget:master», «BaseWidget:widgetName», ««BaseWidget:cnf»», ««BaseWidget:kw»», ««BaseWidget:extra»»)")
;;; BaseWidget(master,widgetName,cnf,kw,extra)
)

(lse-define-fill-in "Bitmap:canvas" 
  '(description           "Argument 1 of Bitmap")
  '(leading               ",")
;;; Bitmap:canvas
)

(lse-define-fill-in "Bitmap:args" 
  '(description           "Argument 2 of Bitmap")
  '(leading               ",")
  '(separator             ", ")
;;; Bitmap:args
)

(lse-define-fill-in "Bitmap(canvas,args,kw)" 
  '(description           "Create a Bitmap object")
  '(token                 "CTK.Bitmap")
  '(replacement           "CTK.Bitmap («Bitmap:canvas», ««Bitmap:args»»···, ««py-named-arg»»···)")
;;; Bitmap(canvas,args,kw)
)

(lse-define-fill-in "BitmapImage:name" 
  '(description           "Argument 1 of BitmapImage (default = None)")
  '(leading               ",")
;;; BitmapImage:name
)

(lse-define-fill-in "BitmapImage:cnf" 
  '(description           "Argument 2 of BitmapImage (default = {})")
  '(leading               ",")
;;; BitmapImage:cnf
)

(lse-define-fill-in "BitmapImage:master" 
  '(description           "Argument 3 of BitmapImage (default = None)")
  '(leading               ",")
;;; BitmapImage:master
)

(lse-define-fill-in "BitmapImage(name,cnf,master,kw)" 
  '(description           "Create a BitmapImage object")
  '(token                 "CTK.BitmapImage")
  '(replacement           "CTK.BitmapImage (««BitmapImage:name»», ««BitmapImage:cnf»», ««BitmapImage:master»», ««py-named-arg»»···)")
;;; BitmapImage(name,cnf,master,kw)
)

(lse-define-fill-in "BooleanVar:master" 
  '(description           "Argument 1 of BooleanVar (default = None)")
  '(leading               ",")
;;; BooleanVar:master
)

(lse-define-fill-in "BooleanVar(master)" 
  '(description           "Create a BooleanVar object")
  '(token                 "CTK.BooleanVar")
  '(replacement           "CTK.BooleanVar (««BooleanVar:master»»)")
;;; BooleanVar(master)
)

(lse-define-fill-in "Button:master" 
  '(description           "Argument 1 of Button (default = None)")
  '(leading               ",")
;;; Button:master
)

(lse-define-fill-in "Button:cnf" 
  '(description           "Argument 2 of Button (default = {})")
  '(leading               ",")
;;; Button:cnf
)

(lse-define-fill-in "Button(master,cnf,kw)" 
  '(description           "Create a Button object")
  '(token                 "CTK.Button")
  '(replacement           "CTK.Button (««Button:master»», ««Button:cnf»», ««py-named-arg»»···)")
;;; Button(master,cnf,kw)
)

(lse-define-fill-in "Buttonbox:master" 
  '(description           "Argument 1 of Buttonbox")
  '(leading               ",")
;;; Buttonbox:master
)

(lse-define-fill-in "Buttonbox:name" 
  '(description           "Argument 2 of Buttonbox (default = None)")
  '(leading               ",")
;;; Buttonbox:name
)

(lse-define-fill-in "Buttonbox:help" 
  '(description           "Argument 3 of Buttonbox (default = None)")
  '(leading               ",")
;;; Buttonbox:help
)

(lse-define-fill-in "Buttonbox:columns" 
  '(description           "Argument 4 of Buttonbox (default = 32)")
  '(leading               ",")
;;; Buttonbox:columns
)

(lse-define-fill-in "Buttonbox:width" 
  '(description           "Argument 5 of Buttonbox (default = None)")
  '(leading               ",")
;;; Buttonbox:width
)

(lse-define-fill-in "Buttonbox:padx" 
  '(description           "Argument 6 of Buttonbox (default = 0)")
  '(leading               ",")
;;; Buttonbox:padx
)

(lse-define-fill-in "Buttonbox:pady" 
  '(description           "Argument 7 of Buttonbox (default = 0)")
  '(leading               ",")
;;; Buttonbox:pady
)

(lse-define-fill-in "Buttonbox:sticky" 
  '(description           "Argument 8 of Buttonbox (default = )")
  '(leading               ",")
;;; Buttonbox:sticky
)

(lse-define-fill-in "Buttonbox:buttonstate" 
  '(description           "Argument 9 of Buttonbox (default = normal)")
  '(leading               ",")
;;; Buttonbox:buttonstate
)

(lse-define-fill-in "Buttonbox:bindtag" 
  '(description           "Argument 10 of Buttonbox (default = None)")
  '(leading               ",")
;;; Buttonbox:bindtag
)

(lse-define-fill-in "Buttonbox(master,name,help,columns,width,padx,pady,sticky,buttonstate,bindtag,kw)" 
  '(description           "Create a Buttonbox object")
  '(token                 "CTK.Buttonbox")
  '(replacement           "CTK.Buttonbox («Buttonbox:master», ««Buttonbox:name»», ««Buttonbox:help»», ««Buttonbox:columns»», ««Buttonbox:width»», ««Buttonbox:padx»», ««Buttonbox:pady»», ««Buttonbox:sticky»», ««Buttonbox:buttonstate»», ««Buttonbox:bindtag»», ««py-named-arg»»···)")
;;; Buttonbox(master,name,help,columns,width,padx,pady,sticky,buttonstate,bindtag,kw)
)

(lse-define-fill-in "C_Entry:master" 
  '(description           "Argument 1 of C_Entry")
  '(leading               ",")
;;; C_Entry:master
)

(lse-define-fill-in "C_Entry:name" 
  '(description           "Argument 2 of C_Entry (default = None)")
  '(leading               ",")
;;; C_Entry:name
)

(lse-define-fill-in "C_Entry:entryname" 
  '(description           "Argument 3 of C_Entry (default = entry)")
  '(leading               ",")
;;; C_Entry:entryname
)

(lse-define-fill-in "C_Entry:entryfill" 
  '(description           "Argument 4 of C_Entry (default = x)")
  '(leading               ",")
;;; C_Entry:entryfill
)

(lse-define-fill-in "C_Entry:entrypos" 
  '(description           "Argument 5 of C_Entry (default = left)")
  '(leading               ",")
;;; C_Entry:entrypos
)

(lse-define-fill-in "C_Entry:label" 
  '(description           "Argument 6 of C_Entry (default = None)")
  '(leading               ",")
;;; C_Entry:label
)

(lse-define-fill-in "C_Entry:labelpos" 
  '(description           "Argument 7 of C_Entry (default = left)")
  '(leading               ",")
;;; C_Entry:labelpos
)

(lse-define-fill-in "C_Entry:labelanchor" 
  '(description           "Argument 8 of C_Entry (default = None)")
  '(leading               ",")
;;; C_Entry:labelanchor
)

(lse-define-fill-in "C_Entry:labeljustify" 
  '(description           "Argument 9 of C_Entry (default = None)")
  '(leading               ",")
;;; C_Entry:labeljustify
)

(lse-define-fill-in "C_Entry:default" 
  '(description           "Argument 10 of C_Entry (default = None)")
  '(leading               ",")
;;; C_Entry:default
)

(lse-define-fill-in "C_Entry:state" 
  '(description           "Argument 11 of C_Entry (default = normal)")
  '(leading               ",")
;;; C_Entry:state
)

(lse-define-fill-in "C_Entry:takefocus" 
  '(description           "Argument 12 of C_Entry (default = 1)")
  '(leading               ",")
;;; C_Entry:takefocus
)

(lse-define-fill-in "C_Entry:bindtag" 
  '(description           "Argument 13 of C_Entry (default = None)")
  '(leading               ",")
;;; C_Entry:bindtag
)

(lse-define-fill-in "C_Entry(master,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag)" 
  '(description           "Create a C_Entry object")
  '(token                 "CTK.C_Entry")
  '(replacement           "CTK.C_Entry («C_Entry:master», ««C_Entry:name»», ««C_Entry:entryname»», ««C_Entry:entryfill»», ««C_Entry:entrypos»», ««C_Entry:label»», ««C_Entry:labelpos»», ««C_Entry:labelanchor»», ««C_Entry:labeljustify»», ««C_Entry:default»», ««C_Entry:state»», ««C_Entry:takefocus»», ««C_Entry:bindtag»»)")
;;; C_Entry(master,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag)
)

(lse-define-fill-in "C_Frame:master" 
  '(description           "Argument 1 of C_Frame (default = None)")
  '(leading               ",")
;;; C_Frame:master
)

(lse-define-fill-in "C_Frame:name" 
  '(description           "Argument 2 of C_Frame (default = None)")
  '(leading               ",")
;;; C_Frame:name
)

(lse-define-fill-in "C_Frame:class_" 
  '(description           "Argument 3 of C_Frame (default = Tkinter.Frame)")
  '(leading               ",")
;;; C_Frame:class_
)

(lse-define-fill-in "C_Frame(master,name,class_,kw)" 
  '(description           "Create a C_Frame object")
  '(token                 "CTK.C_Frame")
  '(replacement           "CTK.C_Frame (««C_Frame:master»», ««C_Frame:name»», ««C_Frame:class_»», ««py-named-arg»»···)")
;;; C_Frame(master,name,class_,kw)
)

(lse-define-fill-in "C_Listbox:master" 
  '(description           "Argument 1 of C_Listbox")
  '(leading               ",")
;;; C_Listbox:master
)

(lse-define-fill-in "C_Listbox:list" 
  '(description           "Argument 2 of C_Listbox (default = ())")
  '(leading               ",")
;;; C_Listbox:list
)

(lse-define-fill-in "C_Listbox:name" 
  '(description           "Argument 3 of C_Listbox (default = None)")
  '(leading               ",")
;;; C_Listbox:name
)

(lse-define-fill-in "C_Listbox:selectmode" 
  '(description           "Argument 4 of C_Listbox (default = browse)")
  '(leading               ",")
;;; C_Listbox:selectmode
)

(lse-define-fill-in "C_Listbox(master,list,name,selectmode)" 
  '(description           "Create a C_Listbox object")
  '(token                 "CTK.C_Listbox")
  '(replacement           "CTK.C_Listbox («C_Listbox:master», ««C_Listbox:list»», ««C_Listbox:name»», ««C_Listbox:selectmode»»)")
;;; C_Listbox(master,list,name,selectmode)
)

(lse-define-fill-in "C_Menu:master" 
  '(description           "Argument 1 of C_Menu (default = None)")
  '(leading               ",")
;;; C_Menu:master
)

(lse-define-fill-in "C_Menu:help" 
  '(description           "Argument 2 of C_Menu (default = None)")
  '(leading               ",")
;;; C_Menu:help
)

(lse-define-fill-in "C_Menu:balloon" 
  '(description           "Argument 3 of C_Menu (default = None)")
  '(leading               ",")
;;; C_Menu:balloon
)

(lse-define-fill-in "C_Menu(master,help,balloon,kw)" 
  '(description           "Create a C_Menu object")
  '(token                 "CTK.C_Menu")
  '(replacement           "CTK.C_Menu (««C_Menu:master»», ««C_Menu:help»», ««C_Menu:balloon»», ««py-named-arg»»···)")
;;; C_Menu(master,help,balloon,kw)
)

(lse-define-fill-in "C_Text:master" 
  '(description           "Argument 1 of C_Text")
  '(leading               ",")
;;; C_Text:master
)

(lse-define-fill-in "C_Text:name" 
  '(description           "Argument 2 of C_Text (default = None)")
  '(leading               ",")
;;; C_Text:name
)

(lse-define-fill-in "C_Text:state" 
  '(description           "Argument 3 of C_Text (default = normal)")
  '(leading               ",")
;;; C_Text:state
)

(lse-define-fill-in "C_Text(master,name,state,kw)" 
  '(description           "Create a C_Text object")
  '(token                 "CTK.C_Text")
  '(replacement           "CTK.C_Text («C_Text:master», ««C_Text:name»», ««C_Text:state»», ««py-named-arg»»···)")
;;; C_Text(master,name,state,kw)
)

(lse-define-fill-in "CallWrapper:func" 
  '(description           "Argument 1 of CallWrapper")
  '(leading               ",")
;;; CallWrapper:func
)

(lse-define-fill-in "CallWrapper:subst" 
  '(description           "Argument 2 of CallWrapper")
  '(leading               ",")
;;; CallWrapper:subst
)

(lse-define-fill-in "CallWrapper:widget" 
  '(description           "Argument 3 of CallWrapper")
  '(leading               ",")
;;; CallWrapper:widget
)

(lse-define-fill-in "CallWrapper(func,subst,widget)" 
  '(description           "Create a CallWrapper object")
  '(token                 "CTK.CallWrapper")
  '(replacement           "CTK.CallWrapper («CallWrapper:func», «CallWrapper:subst», «CallWrapper:widget»)")
;;; CallWrapper(func,subst,widget)
)

(lse-define-fill-in "Canvas:master" 
  '(description           "Argument 1 of Canvas (default = None)")
  '(leading               ",")
;;; Canvas:master
)

(lse-define-fill-in "Canvas:cnf" 
  '(description           "Argument 2 of Canvas (default = {})")
  '(leading               ",")
;;; Canvas:cnf
)

(lse-define-fill-in "Canvas(master,cnf,kw)" 
  '(description           "Create a Canvas object")
  '(token                 "CTK.Canvas")
  '(replacement           "CTK.Canvas (««Canvas:master»», ««Canvas:cnf»», ««py-named-arg»»···)")
;;; Canvas(master,cnf,kw)
)

(lse-define-fill-in "CanvasItem:canvas" 
  '(description           "Argument 1 of CanvasItem")
  '(leading               ",")
;;; CanvasItem:canvas
)

(lse-define-fill-in "CanvasItem:itemType" 
  '(description           "Argument 2 of CanvasItem")
  '(leading               ",")
;;; CanvasItem:itemType
)

(lse-define-fill-in "CanvasItem:args" 
  '(description           "Argument 3 of CanvasItem")
  '(leading               ",")
  '(separator             ", ")
;;; CanvasItem:args
)

(lse-define-fill-in "CanvasItem(canvas,itemType,args,kw)" 
  '(description           "Create a CanvasItem object")
  '(token                 "CTK.CanvasItem")
  '(replacement           "CTK.CanvasItem («CanvasItem:canvas», «CanvasItem:itemType», ««CanvasItem:args»»···, ««py-named-arg»»···)")
;;; CanvasItem(canvas,itemType,args,kw)
)

(lse-define-fill-in "CanvasText:canvas" 
  '(description           "Argument 1 of CanvasText")
  '(leading               ",")
;;; CanvasText:canvas
)

(lse-define-fill-in "CanvasText:args" 
  '(description           "Argument 2 of CanvasText")
  '(leading               ",")
  '(separator             ", ")
;;; CanvasText:args
)

(lse-define-fill-in "CanvasText(canvas,args,kw)" 
  '(description           "Create a CanvasText object")
  '(token                 "CTK.CanvasText")
  '(replacement           "CTK.CanvasText («CanvasText:canvas», ««CanvasText:args»»···, ««py-named-arg»»···)")
;;; CanvasText(canvas,args,kw)
)

(lse-define-fill-in "Checkbutton:master" 
  '(description           "Argument 1 of Checkbutton (default = None)")
  '(leading               ",")
;;; Checkbutton:master
)

(lse-define-fill-in "Checkbutton:cnf" 
  '(description           "Argument 2 of Checkbutton (default = {})")
  '(leading               ",")
;;; Checkbutton:cnf
)

(lse-define-fill-in "Checkbutton(master,cnf,kw)" 
  '(description           "Create a Checkbutton object")
  '(token                 "CTK.Checkbutton")
  '(replacement           "CTK.Checkbutton (««Checkbutton:master»», ««Checkbutton:cnf»», ««py-named-arg»»···)")
;;; Checkbutton(master,cnf,kw)
)

(lse-define-fill-in "Combo_Entry:c_listbox" 
  '(description           "Argument 1 of Combo_Entry")
  '(leading               ",")
;;; Combo_Entry:c_listbox
)

(lse-define-fill-in "Combo_Entry:entry" 
  '(description           "Argument 2 of Combo_Entry (default = None)")
  '(leading               ",")
;;; Combo_Entry:entry
)

(lse-define-fill-in "Combo_Entry:select_event" 
  '(description           "Argument 3 of Combo_Entry (default = <Double-ButtonPress-1>)")
  '(leading               ",")
;;; Combo_Entry:select_event
)

(lse-define-fill-in "Combo_Entry:bindtag" 
  '(description           "Argument 4 of Combo_Entry (default = None)")
  '(leading               ",")
;;; Combo_Entry:bindtag
)

(lse-define-fill-in "Combo_Entry:select_binding" 
  '(description           "Argument 5 of Combo_Entry (default = None)")
  '(leading               ",")
;;; Combo_Entry:select_binding
)

(lse-define-fill-in "Combo_Entry(c_listbox,entry,select_event,bindtag,select_binding)" 
  '(description           "Create a Combo_Entry object")
  '(token                 "CTK.Combo_Entry")
  '(replacement           "CTK.Combo_Entry («Combo_Entry:c_listbox», ««Combo_Entry:entry»», ««Combo_Entry:select_event»», ««Combo_Entry:bindtag»», ««Combo_Entry:select_binding»»)")
;;; Combo_Entry(c_listbox,entry,select_event,bindtag,select_binding)
)

(lse-define-fill-in "Combo_Tuple:master" 
  '(description           "Argument 1 of Combo_Tuple")
  '(leading               ",")
;;; Combo_Tuple:master
)

(lse-define-fill-in "Combo_Tuple:entry_number" 
  '(description           "Argument 2 of Combo_Tuple (default = 2)")
  '(leading               ",")
;;; Combo_Tuple:entry_number
)

(lse-define-fill-in "Combo_Tuple:name" 
  '(description           "Argument 3 of Combo_Tuple (default = None)")
  '(leading               ",")
;;; Combo_Tuple:name
)

(lse-define-fill-in "Combo_Tuple:selectmode" 
  '(description           "Argument 4 of Combo_Tuple (default = browse)")
  '(leading               ",")
;;; Combo_Tuple:selectmode
)

(lse-define-fill-in "Combo_Tuple:select_event" 
  '(description           "Argument 5 of Combo_Tuple (default = <Double-ButtonPress-1>)")
  '(leading               ",")
;;; Combo_Tuple:select_event
)

(lse-define-fill-in "Combo_Tuple:col_labels" 
  '(description           "Argument 6 of Combo_Tuple (default = ())")
  '(leading               ",")
;;; Combo_Tuple:col_labels
)

(lse-define-fill-in "Combo_Tuple:row_labels" 
  '(description           "Argument 7 of Combo_Tuple (default = ())")
  '(leading               ",")
;;; Combo_Tuple:row_labels
)

(lse-define-fill-in "Combo_Tuple:state" 
  '(description           "Argument 8 of Combo_Tuple (default = normal)")
  '(leading               ",")
;;; Combo_Tuple:state
)

(lse-define-fill-in "Combo_Tuple:takefocus" 
  '(description           "Argument 9 of Combo_Tuple (default = 1)")
  '(leading               ",")
;;; Combo_Tuple:takefocus
)

(lse-define-fill-in "Combo_Tuple:bindtag" 
  '(description           "Argument 10 of Combo_Tuple (default = None)")
  '(leading               ",")
;;; Combo_Tuple:bindtag
)

(lse-define-fill-in "Combo_Tuple:col_label_row" 
  '(description           "Argument 11 of Combo_Tuple (default = 0)")
  '(leading               ",")
;;; Combo_Tuple:col_label_row
)

(lse-define-fill-in "Combo_Tuple:listbox_row" 
  '(description           "Argument 12 of Combo_Tuple (default = 1)")
  '(leading               ",")
;;; Combo_Tuple:listbox_row
)

(lse-define-fill-in "Combo_Tuple:entry_row" 
  '(description           "Argument 13 of Combo_Tuple (default = 2)")
  '(leading               ",")
;;; Combo_Tuple:entry_row
)

(lse-define-fill-in "Combo_Tuple:padx" 
  '(description           "Argument 14 of Combo_Tuple (default = 1)")
  '(leading               ",")
;;; Combo_Tuple:padx
)

(lse-define-fill-in "Combo_Tuple:pady" 
  '(description           "Argument 15 of Combo_Tuple (default = 1)")
  '(leading               ",")
;;; Combo_Tuple:pady
)

(lse-define-fill-in "Combo_Tuple(master,entry_number,name,selectmode,select_event,col_labels,row_labels,state,takefocus,bindtag,col_label_row,listbox_row,entry_row,padx,pady)" 
  '(description           "Create a Combo_Tuple object")
  '(token                 "CTK.Combo_Tuple")
  '(replacement           "CTK.Combo_Tuple («Combo_Tuple:master», ««Combo_Tuple:entry_number»», ««Combo_Tuple:name»», ««Combo_Tuple:selectmode»», ««Combo_Tuple:select_event»», ««Combo_Tuple:col_labels»», ««Combo_Tuple:row_labels»», ««Combo_Tuple:state»», ««Combo_Tuple:takefocus»», ««Combo_Tuple:bindtag»», ««Combo_Tuple:col_label_row»», ««Combo_Tuple:listbox_row»», ««Combo_Tuple:entry_row»», ««Combo_Tuple:padx»», ««Combo_Tuple:pady»»)")
;;; Combo_Tuple(master,entry_number,name,selectmode,select_event,col_labels,row_labels,state,takefocus,bindtag,col_label_row,listbox_row,entry_row,padx,pady)
)

(lse-define-fill-in "Combo_Tuple_X:args" 
  '(description           "Argument 1 of Combo_Tuple_X")
  '(leading               ",")
  '(separator             ", ")
;;; Combo_Tuple_X:args
)

(lse-define-fill-in "Combo_Tuple_X(args,kw)" 
  '(description           "Create a Combo_Tuple_X object")
  '(token                 "CTK.Combo_Tuple_X")
  '(replacement           "CTK.Combo_Tuple_X (««Combo_Tuple_X:args»»···, ««py-named-arg»»···)")
;;; Combo_Tuple_X(args,kw)
)

(lse-define-fill-in "Combobox:master" 
  '(description           "Argument 1 of Combobox")
  '(leading               ",")
;;; Combobox:master
)

(lse-define-fill-in "Combobox:list" 
  '(description           "Argument 2 of Combobox")
  '(leading               ",")
;;; Combobox:list
)

(lse-define-fill-in "Combobox:select_event" 
  '(description           "Argument 3 of Combobox (default = <Double-ButtonPress-1>)")
  '(leading               ",")
;;; Combobox:select_event
)

(lse-define-fill-in "Combobox:name" 
  '(description           "Argument 4 of Combobox (default = None)")
  '(leading               ",")
;;; Combobox:name
)

(lse-define-fill-in "Combobox:entryname" 
  '(description           "Argument 5 of Combobox (default = None)")
  '(leading               ",")
;;; Combobox:entryname
)

(lse-define-fill-in "Combobox:entryfill" 
  '(description           "Argument 6 of Combobox (default = x)")
  '(leading               ",")
;;; Combobox:entryfill
)

(lse-define-fill-in "Combobox:entrypos" 
  '(description           "Argument 7 of Combobox (default = top)")
  '(leading               ",")
;;; Combobox:entrypos
)

(lse-define-fill-in "Combobox:label" 
  '(description           "Argument 8 of Combobox (default = None)")
  '(leading               ",")
;;; Combobox:label
)

(lse-define-fill-in "Combobox:labelpos" 
  '(description           "Argument 9 of Combobox (default = left)")
  '(leading               ",")
;;; Combobox:labelpos
)

(lse-define-fill-in "Combobox:labelanchor" 
  '(description           "Argument 10 of Combobox (default = s)")
  '(leading               ",")
;;; Combobox:labelanchor
)

(lse-define-fill-in "Combobox:labeljustify" 
  '(description           "Argument 11 of Combobox (default = None)")
  '(leading               ",")
;;; Combobox:labeljustify
)

(lse-define-fill-in "Combobox:default" 
  '(description           "Argument 12 of Combobox (default = None)")
  '(leading               ",")
;;; Combobox:default
)

(lse-define-fill-in "Combobox:state" 
  '(description           "Argument 13 of Combobox (default = normal)")
  '(leading               ",")
;;; Combobox:state
)

(lse-define-fill-in "Combobox:takefocus" 
  '(description           "Argument 14 of Combobox (default = 1)")
  '(leading               ",")
;;; Combobox:takefocus
)

(lse-define-fill-in "Combobox:bindtag" 
  '(description           "Argument 15 of Combobox (default = None)")
  '(leading               ",")
;;; Combobox:bindtag
)

(lse-define-fill-in "Combobox(master,list,select_event,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag)" 
  '(description           "Create a Combobox object")
  '(token                 "CTK.Combobox")
  '(replacement           "CTK.Combobox («Combobox:master», «Combobox:list», ««Combobox:select_event»», ««Combobox:name»», ««Combobox:entryname»», ««Combobox:entryfill»», ««Combobox:entrypos»», ««Combobox:label»», ««Combobox:labelpos»», ««Combobox:labelanchor»», ««Combobox:labeljustify»», ««Combobox:default»», ««Combobox:state»», ««Combobox:takefocus»», ««Combobox:bindtag»»)")
;;; Combobox(master,list,select_event,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag)
)

(lse-define-fill-in "DoubleVar:master" 
  '(description           "Argument 1 of DoubleVar (default = None)")
  '(leading               ",")
;;; DoubleVar:master
)

(lse-define-fill-in "DoubleVar(master)" 
  '(description           "Create a DoubleVar object")
  '(token                 "CTK.DoubleVar")
  '(replacement           "CTK.DoubleVar (««DoubleVar:master»»)")
;;; DoubleVar(master)
)

(lse-define-fill-in "Entry:master" 
  '(description           "Argument 1 of Entry (default = None)")
  '(leading               ",")
;;; Entry:master
)

(lse-define-fill-in "Entry:cnf" 
  '(description           "Argument 2 of Entry (default = {})")
  '(leading               ",")
;;; Entry:cnf
)

(lse-define-fill-in "Entry(master,cnf,kw)" 
  '(description           "Create a Entry object")
  '(token                 "CTK.Entry")
  '(replacement           "CTK.Entry (««Entry:master»», ««Entry:cnf»», ««py-named-arg»»···)")
;;; Entry(master,cnf,kw)
)

(lse-define-fill-in "Entry_Tuple()" 
  '(description           "Create a Entry_Tuple object")
  '(token                 "CTK.Entry_Tuple")
  '(replacement           "CTK.Entry_Tuple ()")
;;; Entry_Tuple()
)

(lse-define-fill-in "Entrybox:master" 
  '(description           "Argument 1 of Entrybox")
  '(leading               ",")
;;; Entrybox:master
)

(lse-define-fill-in "Entrybox:name" 
  '(description           "Argument 2 of Entrybox (default = None)")
  '(leading               ",")
;;; Entrybox:name
)

(lse-define-fill-in "Entrybox:entryfill" 
  '(description           "Argument 3 of Entrybox (default = x)")
  '(leading               ",")
;;; Entrybox:entryfill
)

(lse-define-fill-in "Entrybox:entryexpand" 
  '(description           "Argument 4 of Entrybox (default = 1)")
  '(leading               ",")
;;; Entrybox:entryexpand
)

(lse-define-fill-in "Entrybox:entrypos" 
  '(description           "Argument 5 of Entrybox (default = left)")
  '(leading               ",")
;;; Entrybox:entrypos
)

(lse-define-fill-in "Entrybox:framepos" 
  '(description           "Argument 6 of Entrybox (default = None)")
  '(leading               ",")
;;; Entrybox:framepos
)

(lse-define-fill-in "Entrybox:label" 
  '(description           "Argument 7 of Entrybox (default = None)")
  '(leading               ",")
;;; Entrybox:label
)

(lse-define-fill-in "Entrybox:labelpos" 
  '(description           "Argument 8 of Entrybox (default = left)")
  '(leading               ",")
;;; Entrybox:labelpos
)

(lse-define-fill-in "Entrybox:labelanchor" 
  '(description           "Argument 9 of Entrybox (default = s)")
  '(leading               ",")
;;; Entrybox:labelanchor
)

(lse-define-fill-in "Entrybox:labeljustify" 
  '(description           "Argument 10 of Entrybox (default = None)")
  '(leading               ",")
;;; Entrybox:labeljustify
)

(lse-define-fill-in "Entrybox:labelpadx" 
  '(description           "Argument 11 of Entrybox (default = None)")
  '(leading               ",")
;;; Entrybox:labelpadx
)

(lse-define-fill-in "Entrybox:labelpady" 
  '(description           "Argument 12 of Entrybox (default = None)")
  '(leading               ",")
;;; Entrybox:labelpady
)

(lse-define-fill-in "Entrybox(master,name,entryfill,entryexpand,entrypos,framepos,label,labelpos,labelanchor,labeljustify,labelpadx,labelpady,kw)" 
  '(description           "Create a Entrybox object")
  '(token                 "CTK.Entrybox")
  '(replacement           "CTK.Entrybox («Entrybox:master», ««Entrybox:name»», ««Entrybox:entryfill»», ««Entrybox:entryexpand»», ««Entrybox:entrypos»», ««Entrybox:framepos»», ««Entrybox:label»», ««Entrybox:labelpos»», ««Entrybox:labelanchor»», ««Entrybox:labeljustify»», ««Entrybox:labelpadx»», ««Entrybox:labelpady»», ««py-named-arg»»···)")
;;; Entrybox(master,name,entryfill,entryexpand,entrypos,framepos,label,labelpos,labelanchor,labeljustify,labelpadx,labelpady,kw)
)

(lse-define-fill-in "Filename:name" 
  '(description           "Argument 1 of Filename")
  '(leading               ",")
;;; Filename:name
)

(lse-define-fill-in "Filename:defaults" 
  '(description           "Argument 2 of Filename")
  '(leading               ",")
  '(separator             ", ")
;;; Filename:defaults
)

(lse-define-fill-in "Filename(name,defaults)" 
  '(description           "Create a Filename object")
  '(token                 "CTK.Filename")
  '(replacement           "CTK.Filename («Filename:name», ««Filename:defaults»»···)")
;;; Filename(name,defaults)
)

(lse-define-fill-in "Filename_Entry:master" 
  '(description           "Argument 1 of Filename_Entry")
  '(leading               ",")
;;; Filename_Entry:master
)

(lse-define-fill-in "Filename_Entry:name" 
  '(description           "Argument 2 of Filename_Entry (default = None)")
  '(leading               ",")
;;; Filename_Entry:name
)

(lse-define-fill-in "Filename_Entry:entryname" 
  '(description           "Argument 3 of Filename_Entry (default = entry)")
  '(leading               ",")
;;; Filename_Entry:entryname
)

(lse-define-fill-in "Filename_Entry:entryfill" 
  '(description           "Argument 4 of Filename_Entry (default = x)")
  '(leading               ",")
;;; Filename_Entry:entryfill
)

(lse-define-fill-in "Filename_Entry:entrypos" 
  '(description           "Argument 5 of Filename_Entry (default = left)")
  '(leading               ",")
;;; Filename_Entry:entrypos
)

(lse-define-fill-in "Filename_Entry:label" 
  '(description           "Argument 6 of Filename_Entry (default = None)")
  '(leading               ",")
;;; Filename_Entry:label
)

(lse-define-fill-in "Filename_Entry:labelpos" 
  '(description           "Argument 7 of Filename_Entry (default = left)")
  '(leading               ",")
;;; Filename_Entry:labelpos
)

(lse-define-fill-in "Filename_Entry:labelanchor" 
  '(description           "Argument 8 of Filename_Entry (default = None)")
  '(leading               ",")
;;; Filename_Entry:labelanchor
)

(lse-define-fill-in "Filename_Entry:labeljustify" 
  '(description           "Argument 9 of Filename_Entry (default = None)")
  '(leading               ",")
;;; Filename_Entry:labeljustify
)

(lse-define-fill-in "Filename_Entry:default" 
  '(description           "Argument 10 of Filename_Entry (default = None)")
  '(leading               ",")
;;; Filename_Entry:default
)

(lse-define-fill-in "Filename_Entry:state" 
  '(description           "Argument 11 of Filename_Entry (default = normal)")
  '(leading               ",")
;;; Filename_Entry:state
)

(lse-define-fill-in "Filename_Entry:takefocus" 
  '(description           "Argument 12 of Filename_Entry (default = 1)")
  '(leading               ",")
;;; Filename_Entry:takefocus
)

(lse-define-fill-in "Filename_Entry:bindtag" 
  '(description           "Argument 13 of Filename_Entry (default = None)")
  '(leading               ",")
;;; Filename_Entry:bindtag
)

(lse-define-fill-in "Filename_Entry:must_exist" 
  '(description           "Argument 14 of Filename_Entry (default = 0)")
  '(leading               ",")
;;; Filename_Entry:must_exist
)

(lse-define-fill-in "Filename_Entry:defaultextension" 
  '(description           "Argument 15 of Filename_Entry (default = None)")
  '(leading               ",")
;;; Filename_Entry:defaultextension
)

(lse-define-fill-in "Filename_Entry:filetypes" 
  '(description           "Argument 16 of Filename_Entry (default = None)")
  '(leading               ",")
;;; Filename_Entry:filetypes
)

(lse-define-fill-in "Filename_Entry:selector_title" 
  '(description           "Argument 17 of Filename_Entry (default = None)")
  '(leading               ",")
;;; Filename_Entry:selector_title
)

(lse-define-fill-in "Filename_Entry(master,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag,must_exist,defaultextension,filetypes,selector_title)" 
  '(description           "Create a Filename_Entry object")
  '(token                 "CTK.Filename_Entry")
  '(replacement           "CTK.Filename_Entry («Filename_Entry:master», ««Filename_Entry:name»», ««Filename_Entry:entryname»», ««Filename_Entry:entryfill»», ««Filename_Entry:entrypos»», ««Filename_Entry:label»», ««Filename_Entry:labelpos»», ««Filename_Entry:labelanchor»», ««Filename_Entry:labeljustify»», ««Filename_Entry:default»», ««Filename_Entry:state»», ««Filename_Entry:takefocus»», ««Filename_Entry:bindtag»», ««Filename_Entry:must_exist»», ««Filename_Entry:defaultextension»», ««Filename_Entry:filetypes»», ««Filename_Entry:selector_title»»)")
;;; Filename_Entry(master,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag,must_exist,defaultextension,filetypes,selector_title)
)

(lse-define-fill-in "Frame:master" 
  '(description           "Argument 1 of Frame (default = None)")
  '(leading               ",")
;;; Frame:master
)

(lse-define-fill-in "Frame:cnf" 
  '(description           "Argument 2 of Frame (default = {})")
  '(leading               ",")
;;; Frame:cnf
)

(lse-define-fill-in "Frame(master,cnf,kw)" 
  '(description           "Create a Frame object")
  '(token                 "CTK.Frame")
  '(replacement           "CTK.Frame (««Frame:master»», ««Frame:cnf»», ««py-named-arg»»···)")
;;; Frame(master,cnf,kw)
)

(lse-define-fill-in "Functor:function" 
  '(description           "Argument 1 of Functor")
  '(leading               ",")
;;; Functor:function
)

(lse-define-fill-in "Functor:tail_args" 
  '(description           "Argument 2 of Functor")
  '(leading               ",")
  '(separator             ", ")
;;; Functor:tail_args
)

(lse-define-fill-in "Functor(function,tail_args,kw)" 
  '(description           "Create a Functor object")
  '(token                 "CTK.Functor")
  '(replacement           "CTK.Functor («Functor:function», ««Functor:tail_args»»···, ««py-named-arg»»···)")
;;; Functor(function,tail_args,kw)
)

(lse-define-fill-in "Group:canvas" 
  '(description           "Argument 1 of Group")
  '(leading               ",")
;;; Group:canvas
)

(lse-define-fill-in "Group:tag" 
  '(description           "Argument 2 of Group (default = None)")
  '(leading               ",")
;;; Group:tag
)

(lse-define-fill-in "Group(canvas,tag)" 
  '(description           "Create a Group object")
  '(token                 "CTK.Group")
  '(replacement           "CTK.Group («Group:canvas», ««Group:tag»»)")
;;; Group(canvas,tag)
)

(lse-define-fill-in "H_Panedwindow:master" 
  '(description           "Argument 1 of H_Panedwindow (default = None)")
  '(leading               ",")
;;; H_Panedwindow:master
)

(lse-define-fill-in "H_Panedwindow(master,kw)" 
  '(description           "Create a H_Panedwindow object")
  '(token                 "CTK.H_Panedwindow")
  '(replacement           "CTK.H_Panedwindow (««H_Panedwindow:master»», ««py-named-arg»»···)")
;;; H_Panedwindow(master,kw)
)

(lse-define-fill-in "H_Scrollable:master" 
  '(description           "Argument 1 of H_Scrollable (default = None)")
  '(leading               ",")
;;; H_Scrollable:master
)

(lse-define-fill-in "H_Scrollable(master,kw)" 
  '(description           "Create a H_Scrollable object")
  '(token                 "CTK.H_Scrollable")
  '(replacement           "CTK.H_Scrollable (««H_Scrollable:master»», ««py-named-arg»»···)")
;;; H_Scrollable(master,kw)
)

(lse-define-fill-in "H_Strut:master" 
  '(description           "Argument 1 of H_Strut")
  '(leading               ",")
;;; H_Strut:master
)

(lse-define-fill-in "H_Strut:strut_name" 
  '(description           "Argument 2 of H_Strut (default = None)")
  '(leading               ",")
;;; H_Strut:strut_name
)

(lse-define-fill-in "H_Strut:strut_class" 
  '(description           "Argument 3 of H_Strut (default = None)")
  '(leading               ",")
;;; H_Strut:strut_class
)

(lse-define-fill-in "H_Strut:strut_width" 
  '(description           "Argument 4 of H_Strut (default = 0)")
  '(leading               ",")
;;; H_Strut:strut_width
)

(lse-define-fill-in "H_Strut(master,strut_name,strut_class,strut_width,kw)" 
  '(description           "Create a H_Strut object")
  '(token                 "CTK.H_Strut")
  '(replacement           "CTK.H_Strut («H_Strut:master», ««H_Strut:strut_name»», ««H_Strut:strut_class»», ««H_Strut:strut_width»», ««py-named-arg»»···)")
;;; H_Strut(master,strut_name,strut_class,strut_width,kw)
)

(lse-define-fill-in "Image:imgtype" 
  '(description           "Argument 1 of Image")
  '(leading               ",")
;;; Image:imgtype
)

(lse-define-fill-in "Image:name" 
  '(description           "Argument 2 of Image (default = None)")
  '(leading               ",")
;;; Image:name
)

(lse-define-fill-in "Image:cnf" 
  '(description           "Argument 3 of Image (default = {})")
  '(leading               ",")
;;; Image:cnf
)

(lse-define-fill-in "Image:master" 
  '(description           "Argument 4 of Image (default = None)")
  '(leading               ",")
;;; Image:master
)

(lse-define-fill-in "Image(imgtype,name,cnf,master,kw)" 
  '(description           "Create a Image object")
  '(token                 "CTK.Image")
  '(replacement           "CTK.Image («Image:imgtype», ««Image:name»», ««Image:cnf»», ««Image:master»», ««py-named-arg»»···)")
;;; Image(imgtype,name,cnf,master,kw)
)

(lse-define-fill-in "ImageItem:canvas" 
  '(description           "Argument 1 of ImageItem")
  '(leading               ",")
;;; ImageItem:canvas
)

(lse-define-fill-in "ImageItem:args" 
  '(description           "Argument 2 of ImageItem")
  '(leading               ",")
  '(separator             ", ")
;;; ImageItem:args
)

(lse-define-fill-in "ImageItem(canvas,args,kw)" 
  '(description           "Create a ImageItem object")
  '(token                 "CTK.ImageItem")
  '(replacement           "CTK.ImageItem («ImageItem:canvas», ««ImageItem:args»»···, ««py-named-arg»»···)")
;;; ImageItem(canvas,args,kw)
)

(lse-define-fill-in "IntVar:master" 
  '(description           "Argument 1 of IntVar (default = None)")
  '(leading               ",")
;;; IntVar:master
)

(lse-define-fill-in "IntVar(master)" 
  '(description           "Create a IntVar object")
  '(token                 "CTK.IntVar")
  '(replacement           "CTK.IntVar (««IntVar:master»»)")
;;; IntVar(master)
)

(lse-define-fill-in "Label:master" 
  '(description           "Argument 1 of Label (default = None)")
  '(leading               ",")
;;; Label:master
)

(lse-define-fill-in "Label:cnf" 
  '(description           "Argument 2 of Label (default = {})")
  '(leading               ",")
;;; Label:cnf
)

(lse-define-fill-in "Label(master,cnf,kw)" 
  '(description           "Create a Label object")
  '(token                 "CTK.Label")
  '(replacement           "CTK.Label (««Label:master»», ««Label:cnf»», ««py-named-arg»»···)")
;;; Label(master,cnf,kw)
)

(lse-define-fill-in "Line:canvas" 
  '(description           "Argument 1 of Line")
  '(leading               ",")
;;; Line:canvas
)

(lse-define-fill-in "Line:args" 
  '(description           "Argument 2 of Line")
  '(leading               ",")
  '(separator             ", ")
;;; Line:args
)

(lse-define-fill-in "Line(canvas,args,kw)" 
  '(description           "Create a Line object")
  '(token                 "CTK.Line")
  '(replacement           "CTK.Line («Line:canvas», ««Line:args»»···, ««py-named-arg»»···)")
;;; Line(canvas,args,kw)
)

(lse-define-fill-in "Listbox:master" 
  '(description           "Argument 1 of Listbox (default = None)")
  '(leading               ",")
;;; Listbox:master
)

(lse-define-fill-in "Listbox:cnf" 
  '(description           "Argument 2 of Listbox (default = {})")
  '(leading               ",")
;;; Listbox:cnf
)

(lse-define-fill-in "Listbox(master,cnf,kw)" 
  '(description           "Create a Listbox object")
  '(token                 "CTK.Listbox")
  '(replacement           "CTK.Listbox (««Listbox:master»», ««Listbox:cnf»», ««py-named-arg»»···)")
;;; Listbox(master,cnf,kw)
)

(lse-define-fill-in "Listbox_Tuple:master" 
  '(description           "Argument 1 of Listbox_Tuple")
  '(leading               ",")
;;; Listbox_Tuple:master
)

(lse-define-fill-in "Listbox_Tuple:lists" 
  '(description           "Argument 2 of Listbox_Tuple (default = 2)")
  '(leading               ",")
;;; Listbox_Tuple:lists
)

(lse-define-fill-in "Listbox_Tuple:name" 
  '(description           "Argument 3 of Listbox_Tuple (default = None)")
  '(leading               ",")
;;; Listbox_Tuple:name
)

(lse-define-fill-in "Listbox_Tuple:selectmode" 
  '(description           "Argument 4 of Listbox_Tuple (default = browse)")
  '(leading               ",")
;;; Listbox_Tuple:selectmode
)

(lse-define-fill-in "Listbox_Tuple(master,lists,name,selectmode)" 
  '(description           "Create a Listbox_Tuple object")
  '(token                 "CTK.Listbox_Tuple")
  '(replacement           "CTK.Listbox_Tuple («Listbox_Tuple:master», ««Listbox_Tuple:lists»», ««Listbox_Tuple:name»», ««Listbox_Tuple:selectmode»»)")
;;; Listbox_Tuple(master,lists,name,selectmode)
)

(lse-define-fill-in "Listdropentry:master" 
  '(description           "Argument 1 of Listdropentry")
  '(leading               ",")
;;; Listdropentry:master
)

(lse-define-fill-in "Listdropentry:list" 
  '(description           "Argument 2 of Listdropentry")
  '(leading               ",")
;;; Listdropentry:list
)

(lse-define-fill-in "Listdropentry:name" 
  '(description           "Argument 3 of Listdropentry (default = None)")
  '(leading               ",")
;;; Listdropentry:name
)

(lse-define-fill-in "Listdropentry:entryname" 
  '(description           "Argument 4 of Listdropentry (default = None)")
  '(leading               ",")
;;; Listdropentry:entryname
)

(lse-define-fill-in "Listdropentry:entryfill" 
  '(description           "Argument 5 of Listdropentry (default = x)")
  '(leading               ",")
;;; Listdropentry:entryfill
)

(lse-define-fill-in "Listdropentry:entrypos" 
  '(description           "Argument 6 of Listdropentry (default = left)")
  '(leading               ",")
;;; Listdropentry:entrypos
)

(lse-define-fill-in "Listdropentry:label" 
  '(description           "Argument 7 of Listdropentry (default = None)")
  '(leading               ",")
;;; Listdropentry:label
)

(lse-define-fill-in "Listdropentry:labelpos" 
  '(description           "Argument 8 of Listdropentry (default = left)")
  '(leading               ",")
;;; Listdropentry:labelpos
)

(lse-define-fill-in "Listdropentry:labelanchor" 
  '(description           "Argument 9 of Listdropentry (default = None)")
  '(leading               ",")
;;; Listdropentry:labelanchor
)

(lse-define-fill-in "Listdropentry:labeljustify" 
  '(description           "Argument 10 of Listdropentry (default = None)")
  '(leading               ",")
;;; Listdropentry:labeljustify
)

(lse-define-fill-in "Listdropentry:default" 
  '(description           "Argument 11 of Listdropentry (default = None)")
  '(leading               ",")
;;; Listdropentry:default
)

(lse-define-fill-in "Listdropentry:state" 
  '(description           "Argument 12 of Listdropentry (default = normal)")
  '(leading               ",")
;;; Listdropentry:state
)

(lse-define-fill-in "Listdropentry:takefocus" 
  '(description           "Argument 13 of Listdropentry (default = 1)")
  '(leading               ",")
;;; Listdropentry:takefocus
)

(lse-define-fill-in "Listdropentry:bindtag" 
  '(description           "Argument 14 of Listdropentry (default = None)")
  '(leading               ",")
;;; Listdropentry:bindtag
)

(lse-define-fill-in "Listdropentry:editable" 
  '(description           "Argument 15 of Listdropentry (default = None)")
  '(leading               ",")
;;; Listdropentry:editable
)

(lse-define-fill-in "Listdropentry(master,list,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag,editable)" 
  '(description           "Create a Listdropentry object")
  '(token                 "CTK.Listdropentry")
  '(replacement           "CTK.Listdropentry («Listdropentry:master», «Listdropentry:list», ««Listdropentry:name»», ««Listdropentry:entryname»», ««Listdropentry:entryfill»», ««Listdropentry:entrypos»», ««Listdropentry:label»», ««Listdropentry:labelpos»», ««Listdropentry:labelanchor»», ««Listdropentry:labeljustify»», ««Listdropentry:default»», ««Listdropentry:state»», ««Listdropentry:takefocus»», ««Listdropentry:bindtag»», ««Listdropentry:editable»»)")
;;; Listdropentry(master,list,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag,editable)
)

(lse-define-fill-in "Listdropspinner:master" 
  '(description           "Argument 1 of Listdropspinner")
  '(leading               ",")
;;; Listdropspinner:master
)

(lse-define-fill-in "Listdropspinner:list" 
  '(description           "Argument 2 of Listdropspinner")
  '(leading               ",")
;;; Listdropspinner:list
)

(lse-define-fill-in "Listdropspinner:name" 
  '(description           "Argument 3 of Listdropspinner (default = None)")
  '(leading               ",")
;;; Listdropspinner:name
)

(lse-define-fill-in "Listdropspinner:entryname" 
  '(description           "Argument 4 of Listdropspinner (default = None)")
  '(leading               ",")
;;; Listdropspinner:entryname
)

(lse-define-fill-in "Listdropspinner:entryfill" 
  '(description           "Argument 5 of Listdropspinner (default = x)")
  '(leading               ",")
;;; Listdropspinner:entryfill
)

(lse-define-fill-in "Listdropspinner:entrypos" 
  '(description           "Argument 6 of Listdropspinner (default = right)")
  '(leading               ",")
;;; Listdropspinner:entrypos
)

(lse-define-fill-in "Listdropspinner:label" 
  '(description           "Argument 7 of Listdropspinner (default = None)")
  '(leading               ",")
;;; Listdropspinner:label
)

(lse-define-fill-in "Listdropspinner:labelpos" 
  '(description           "Argument 8 of Listdropspinner (default = left)")
  '(leading               ",")
;;; Listdropspinner:labelpos
)

(lse-define-fill-in "Listdropspinner:labelanchor" 
  '(description           "Argument 9 of Listdropspinner (default = None)")
  '(leading               ",")
;;; Listdropspinner:labelanchor
)

(lse-define-fill-in "Listdropspinner:labeljustify" 
  '(description           "Argument 10 of Listdropspinner (default = None)")
  '(leading               ",")
;;; Listdropspinner:labeljustify
)

(lse-define-fill-in "Listdropspinner:default" 
  '(description           "Argument 11 of Listdropspinner (default = None)")
  '(leading               ",")
;;; Listdropspinner:default
)

(lse-define-fill-in "Listdropspinner:state" 
  '(description           "Argument 12 of Listdropspinner (default = normal)")
  '(leading               ",")
;;; Listdropspinner:state
)

(lse-define-fill-in "Listdropspinner:takefocus" 
  '(description           "Argument 13 of Listdropspinner (default = 1)")
  '(leading               ",")
;;; Listdropspinner:takefocus
)

(lse-define-fill-in "Listdropspinner:bindtag" 
  '(description           "Argument 14 of Listdropspinner (default = None)")
  '(leading               ",")
;;; Listdropspinner:bindtag
)

(lse-define-fill-in "Listdropspinner:editable" 
  '(description           "Argument 15 of Listdropspinner (default = None)")
  '(leading               ",")
;;; Listdropspinner:editable
)

(lse-define-fill-in "Listdropspinner(master,list,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag,editable)" 
  '(description           "Create a Listdropspinner object")
  '(token                 "CTK.Listdropspinner")
  '(replacement           "CTK.Listdropspinner («Listdropspinner:master», «Listdropspinner:list», ««Listdropspinner:name»», ««Listdropspinner:entryname»», ««Listdropspinner:entryfill»», ««Listdropspinner:entrypos»», ««Listdropspinner:label»», ««Listdropspinner:labelpos»», ««Listdropspinner:labelanchor»», ««Listdropspinner:labeljustify»», ««Listdropspinner:default»», ««Listdropspinner:state»», ««Listdropspinner:takefocus»», ««Listdropspinner:bindtag»», ««Listdropspinner:editable»»)")
;;; Listdropspinner(master,list,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag,editable)
)

(lse-define-fill-in "Listspinner:master" 
  '(description           "Argument 1 of Listspinner")
  '(leading               ",")
;;; Listspinner:master
)

(lse-define-fill-in "Listspinner:list" 
  '(description           "Argument 2 of Listspinner")
  '(leading               ",")
;;; Listspinner:list
)

(lse-define-fill-in "Listspinner:name" 
  '(description           "Argument 3 of Listspinner (default = None)")
  '(leading               ",")
;;; Listspinner:name
)

(lse-define-fill-in "Listspinner:entryname" 
  '(description           "Argument 4 of Listspinner (default = None)")
  '(leading               ",")
;;; Listspinner:entryname
)

(lse-define-fill-in "Listspinner:entryfill" 
  '(description           "Argument 5 of Listspinner (default = x)")
  '(leading               ",")
;;; Listspinner:entryfill
)

(lse-define-fill-in "Listspinner:entrypos" 
  '(description           "Argument 6 of Listspinner (default = left)")
  '(leading               ",")
;;; Listspinner:entrypos
)

(lse-define-fill-in "Listspinner:label" 
  '(description           "Argument 7 of Listspinner (default = None)")
  '(leading               ",")
;;; Listspinner:label
)

(lse-define-fill-in "Listspinner:labelpos" 
  '(description           "Argument 8 of Listspinner (default = left)")
  '(leading               ",")
;;; Listspinner:labelpos
)

(lse-define-fill-in "Listspinner:labelanchor" 
  '(description           "Argument 9 of Listspinner (default = e)")
  '(leading               ",")
;;; Listspinner:labelanchor
)

(lse-define-fill-in "Listspinner:labeljustify" 
  '(description           "Argument 10 of Listspinner (default = None)")
  '(leading               ",")
;;; Listspinner:labeljustify
)

(lse-define-fill-in "Listspinner:default" 
  '(description           "Argument 11 of Listspinner (default = None)")
  '(leading               ",")
;;; Listspinner:default
)

(lse-define-fill-in "Listspinner:state" 
  '(description           "Argument 12 of Listspinner (default = normal)")
  '(leading               ",")
;;; Listspinner:state
)

(lse-define-fill-in "Listspinner:takefocus" 
  '(description           "Argument 13 of Listspinner (default = 1)")
  '(leading               ",")
;;; Listspinner:takefocus
)

(lse-define-fill-in "Listspinner:bindtag" 
  '(description           "Argument 14 of Listspinner (default = None)")
  '(leading               ",")
;;; Listspinner:bindtag
)

(lse-define-fill-in "Listspinner(master,list,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag)" 
  '(description           "Create a Listspinner object")
  '(token                 "CTK.Listspinner")
  '(replacement           "CTK.Listspinner («Listspinner:master», «Listspinner:list», ««Listspinner:name»», ««Listspinner:entryname»», ««Listspinner:entryfill»», ««Listspinner:entrypos»», ««Listspinner:label»», ««Listspinner:labelpos»», ««Listspinner:labelanchor»», ««Listspinner:labeljustify»», ««Listspinner:default»», ««Listspinner:state»», ««Listspinner:takefocus»», ««Listspinner:bindtag»»)")
;;; Listspinner(master,list,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag)
)

(lse-define-fill-in "Menu:master" 
  '(description           "Argument 1 of Menu (default = None)")
  '(leading               ",")
;;; Menu:master
)

(lse-define-fill-in "Menu:cnf" 
  '(description           "Argument 2 of Menu (default = {})")
  '(leading               ",")
;;; Menu:cnf
)

(lse-define-fill-in "Menu(master,cnf,kw)" 
  '(description           "Create a Menu object")
  '(token                 "CTK.Menu")
  '(replacement           "CTK.Menu (««Menu:master»», ««Menu:cnf»», ««py-named-arg»»···)")
;;; Menu(master,cnf,kw)
)

(lse-define-fill-in "Menubutton:master" 
  '(description           "Argument 1 of Menubutton (default = None)")
  '(leading               ",")
;;; Menubutton:master
)

(lse-define-fill-in "Menubutton:cnf" 
  '(description           "Argument 2 of Menubutton (default = {})")
  '(leading               ",")
;;; Menubutton:cnf
)

(lse-define-fill-in "Menubutton(master,cnf,kw)" 
  '(description           "Create a Menubutton object")
  '(token                 "CTK.Menubutton")
  '(replacement           "CTK.Menubutton (««Menubutton:master»», ««Menubutton:cnf»», ««py-named-arg»»···)")
;;; Menubutton(master,cnf,kw)
)

(lse-define-fill-in "Message:master" 
  '(description           "Argument 1 of Message (default = None)")
  '(leading               ",")
;;; Message:master
)

(lse-define-fill-in "Message:cnf" 
  '(description           "Argument 2 of Message (default = {})")
  '(leading               ",")
;;; Message:cnf
)

(lse-define-fill-in "Message(master,cnf,kw)" 
  '(description           "Create a Message object")
  '(token                 "CTK.Message")
  '(replacement           "CTK.Message (««Message:master»», ««Message:cnf»», ««py-named-arg»»···)")
;;; Message(master,cnf,kw)
)

(lse-define-fill-in "Message_Window:master" 
  '(description           "Argument 1 of Message_Window")
  '(leading               ",")
;;; Message_Window:master
)

(lse-define-fill-in "Message_Window:name" 
  '(description           "Argument 2 of Message_Window (default = None)")
  '(leading               ",")
;;; Message_Window:name
)

(lse-define-fill-in "Message_Window:state" 
  '(description           "Argument 3 of Message_Window (default = normal)")
  '(leading               ",")
;;; Message_Window:state
)

(lse-define-fill-in "Message_Window:width" 
  '(description           "Argument 4 of Message_Window (default = 0)")
  '(leading               ",")
;;; Message_Window:width
)

(lse-define-fill-in "Message_Window:fill" 
  '(description           "Argument 5 of Message_Window (default = x)")
  '(leading               ",")
;;; Message_Window:fill
)

(lse-define-fill-in "Message_Window(master,name,state,width,fill)" 
  '(description           "Create a Message_Window object")
  '(token                 "CTK.Message_Window")
  '(replacement           "CTK.Message_Window («Message_Window:master», ««Message_Window:name»», ««Message_Window:state»», ««Message_Window:width»», ««Message_Window:fill»»)")
;;; Message_Window(master,name,state,width,fill)
)

(lse-define-fill-in "Multicombobox:master" 
  '(description           "Argument 1 of Multicombobox")
  '(leading               ",")
;;; Multicombobox:master
)

(lse-define-fill-in "Multicombobox:list" 
  '(description           "Argument 2 of Multicombobox")
  '(leading               ",")
;;; Multicombobox:list
)

(lse-define-fill-in "Multicombobox:select_event" 
  '(description           "Argument 3 of Multicombobox (default = <Double-ButtonPress-1>)")
  '(leading               ",")
;;; Multicombobox:select_event
)

(lse-define-fill-in "Multicombobox:name" 
  '(description           "Argument 4 of Multicombobox (default = None)")
  '(leading               ",")
;;; Multicombobox:name
)

(lse-define-fill-in "Multicombobox:entryname" 
  '(description           "Argument 5 of Multicombobox (default = None)")
  '(leading               ",")
;;; Multicombobox:entryname
)

(lse-define-fill-in "Multicombobox:entryfill" 
  '(description           "Argument 6 of Multicombobox (default = x)")
  '(leading               ",")
;;; Multicombobox:entryfill
)

(lse-define-fill-in "Multicombobox:entrypos" 
  '(description           "Argument 7 of Multicombobox (default = top)")
  '(leading               ",")
;;; Multicombobox:entrypos
)

(lse-define-fill-in "Multicombobox:listboxpos" 
  '(description           "Argument 8 of Multicombobox (default = top)")
  '(leading               ",")
;;; Multicombobox:listboxpos
)

(lse-define-fill-in "Multicombobox:label" 
  '(description           "Argument 9 of Multicombobox (default = None)")
  '(leading               ",")
;;; Multicombobox:label
)

(lse-define-fill-in "Multicombobox:labelpos" 
  '(description           "Argument 10 of Multicombobox (default = left)")
  '(leading               ",")
;;; Multicombobox:labelpos
)

(lse-define-fill-in "Multicombobox:labelanchor" 
  '(description           "Argument 11 of Multicombobox (default = s)")
  '(leading               ",")
;;; Multicombobox:labelanchor
)

(lse-define-fill-in "Multicombobox:labeljustify" 
  '(description           "Argument 12 of Multicombobox (default = None)")
  '(leading               ",")
;;; Multicombobox:labeljustify
)

(lse-define-fill-in "Multicombobox:labelpadx" 
  '(description           "Argument 13 of Multicombobox (default = None)")
  '(leading               ",")
;;; Multicombobox:labelpadx
)

(lse-define-fill-in "Multicombobox:labelpady" 
  '(description           "Argument 14 of Multicombobox (default = None)")
  '(leading               ",")
;;; Multicombobox:labelpady
)

(lse-define-fill-in "Multicombobox:bindtag" 
  '(description           "Argument 15 of Multicombobox (default = None)")
  '(leading               ",")
;;; Multicombobox:bindtag
)

(lse-define-fill-in "Multicombobox:entry_sep" 
  '(description           "Argument 16 of Multicombobox (default = None)")
  '(leading               ",")
;;; Multicombobox:entry_sep
)

(lse-define-fill-in "Multicombobox(master,list,select_event,name,entryname,entryfill,entrypos,listboxpos,label,labelpos,labelanchor,labeljustify,labelpadx,labelpady,bindtag,entry_sep)" 
  '(description           "Create a Multicombobox object")
  '(token                 "CTK.Multicombobox")
  '(replacement           "CTK.Multicombobox («Multicombobox:master», «Multicombobox:list», ««Multicombobox:select_event»», ««Multicombobox:name»», ««Multicombobox:entryname»», ««Multicombobox:entryfill»», ««Multicombobox:entrypos»», ««Multicombobox:listboxpos»», ««Multicombobox:label»», ««Multicombobox:labelpos»», ««Multicombobox:labelanchor»», ««Multicombobox:labeljustify»», ««Multicombobox:labelpadx»», ««Multicombobox:labelpady»», ««Multicombobox:bindtag»», ««Multicombobox:entry_sep»»)")
;;; Multicombobox(master,list,select_event,name,entryname,entryfill,entrypos,listboxpos,label,labelpos,labelanchor,labeljustify,labelpadx,labelpady,bindtag,entry_sep)
)

(lse-define-fill-in "Multicombobox_X:master" 
  '(description           "Argument 1 of Multicombobox_X")
  '(leading               ",")
;;; Multicombobox_X:master
)

(lse-define-fill-in "Multicombobox_X:list" 
  '(description           "Argument 2 of Multicombobox_X")
  '(leading               ",")
;;; Multicombobox_X:list
)

(lse-define-fill-in "Multicombobox_X:select_event" 
  '(description           "Argument 3 of Multicombobox_X (default = <Double-ButtonPress-1>)")
  '(leading               ",")
;;; Multicombobox_X:select_event
)

(lse-define-fill-in "Multicombobox_X:name" 
  '(description           "Argument 4 of Multicombobox_X (default = None)")
  '(leading               ",")
;;; Multicombobox_X:name
)

(lse-define-fill-in "Multicombobox_X:entryname" 
  '(description           "Argument 5 of Multicombobox_X (default = None)")
  '(leading               ",")
;;; Multicombobox_X:entryname
)

(lse-define-fill-in "Multicombobox_X:entryfill" 
  '(description           "Argument 6 of Multicombobox_X (default = x)")
  '(leading               ",")
;;; Multicombobox_X:entryfill
)

(lse-define-fill-in "Multicombobox_X:entrypos" 
  '(description           "Argument 7 of Multicombobox_X (default = top)")
  '(leading               ",")
;;; Multicombobox_X:entrypos
)

(lse-define-fill-in "Multicombobox_X:listboxpos" 
  '(description           "Argument 8 of Multicombobox_X (default = top)")
  '(leading               ",")
;;; Multicombobox_X:listboxpos
)

(lse-define-fill-in "Multicombobox_X:label" 
  '(description           "Argument 9 of Multicombobox_X (default = None)")
  '(leading               ",")
;;; Multicombobox_X:label
)

(lse-define-fill-in "Multicombobox_X:labelpos" 
  '(description           "Argument 10 of Multicombobox_X (default = left)")
  '(leading               ",")
;;; Multicombobox_X:labelpos
)

(lse-define-fill-in "Multicombobox_X:labelanchor" 
  '(description           "Argument 11 of Multicombobox_X (default = s)")
  '(leading               ",")
;;; Multicombobox_X:labelanchor
)

(lse-define-fill-in "Multicombobox_X:labeljustify" 
  '(description           "Argument 12 of Multicombobox_X (default = None)")
  '(leading               ",")
;;; Multicombobox_X:labeljustify
)

(lse-define-fill-in "Multicombobox_X:labelpadx" 
  '(description           "Argument 13 of Multicombobox_X (default = None)")
  '(leading               ",")
;;; Multicombobox_X:labelpadx
)

(lse-define-fill-in "Multicombobox_X:labelpady" 
  '(description           "Argument 14 of Multicombobox_X (default = None)")
  '(leading               ",")
;;; Multicombobox_X:labelpady
)

(lse-define-fill-in "Multicombobox_X:bindtag" 
  '(description           "Argument 15 of Multicombobox_X (default = None)")
  '(leading               ",")
;;; Multicombobox_X:bindtag
)

(lse-define-fill-in "Multicombobox_X:entry_sep" 
  '(description           "Argument 16 of Multicombobox_X (default = None)")
  '(leading               ",")
;;; Multicombobox_X:entry_sep
)

(lse-define-fill-in "Multicombobox_X:targetlabel" 
  '(description           "Argument 17 of Multicombobox_X (default = None)")
  '(leading               ",")
;;; Multicombobox_X:targetlabel
)

(lse-define-fill-in "Multicombobox_X(master,list,select_event,name,entryname,entryfill,entrypos,listboxpos,label,labelpos,labelanchor,labeljustify,labelpadx,labelpady,bindtag,entry_sep,targetlabel)" 
  '(description           "Create a Multicombobox_X object")
  '(token                 "CTK.Multicombobox_X")
  '(replacement           "CTK.Multicombobox_X («Multicombobox_X:master», «Multicombobox_X:list», ««Multicombobox_X:select_event»», ««Multicombobox_X:name»», ««Multicombobox_X:entryname»», ««Multicombobox_X:entryfill»», ««Multicombobox_X:entrypos»», ««Multicombobox_X:listboxpos»», ««Multicombobox_X:label»», ««Multicombobox_X:labelpos»», ««Multicombobox_X:labelanchor»», ««Multicombobox_X:labeljustify»», ««Multicombobox_X:labelpadx»», ««Multicombobox_X:labelpady»», ««Multicombobox_X:bindtag»», ««Multicombobox_X:entry_sep»», ««Multicombobox_X:targetlabel»»)")
;;; Multicombobox_X(master,list,select_event,name,entryname,entryfill,entrypos,listboxpos,label,labelpos,labelanchor,labeljustify,labelpadx,labelpady,bindtag,entry_sep,targetlabel)
)

(lse-define-fill-in "Notebook:master" 
  '(description           "Argument 1 of Notebook (default = None)")
  '(leading               ",")
;;; Notebook:master
)

(lse-define-fill-in "Notebook:name" 
  '(description           "Argument 2 of Notebook (default = None)")
  '(leading               ",")
;;; Notebook:name
)

(lse-define-fill-in "Notebook(master,name)" 
  '(description           "Create a Notebook object")
  '(token                 "CTK.Notebook")
  '(replacement           "CTK.Notebook (««Notebook:master»», ««Notebook:name»»)")
;;; Notebook(master,name)
)

(lse-define-fill-in "Num_Spinner:master" 
  '(description           "Argument 1 of Num_Spinner")
  '(leading               ",")
;;; Num_Spinner:master
)

(lse-define-fill-in "Num_Spinner:lo_bound" 
  '(description           "Argument 2 of Num_Spinner (default = None)")
  '(leading               ",")
;;; Num_Spinner:lo_bound
)

(lse-define-fill-in "Num_Spinner:hi_bound" 
  '(description           "Argument 3 of Num_Spinner (default = None)")
  '(leading               ",")
;;; Num_Spinner:hi_bound
)

(lse-define-fill-in "Num_Spinner:inc" 
  '(description           "Argument 4 of Num_Spinner (default = None)")
  '(leading               ",")
;;; Num_Spinner:inc
)

(lse-define-fill-in "Num_Spinner:wrap" 
  '(description           "Argument 5 of Num_Spinner (default = 1)")
  '(leading               ",")
;;; Num_Spinner:wrap
)

(lse-define-fill-in "Num_Spinner:name" 
  '(description           "Argument 6 of Num_Spinner (default = None)")
  '(leading               ",")
;;; Num_Spinner:name
)

(lse-define-fill-in "Num_Spinner:entryname" 
  '(description           "Argument 7 of Num_Spinner (default = None)")
  '(leading               ",")
;;; Num_Spinner:entryname
)

(lse-define-fill-in "Num_Spinner:entryfill" 
  '(description           "Argument 8 of Num_Spinner (default = x)")
  '(leading               ",")
;;; Num_Spinner:entryfill
)

(lse-define-fill-in "Num_Spinner:entrypos" 
  '(description           "Argument 9 of Num_Spinner (default = left)")
  '(leading               ",")
;;; Num_Spinner:entrypos
)

(lse-define-fill-in "Num_Spinner:label" 
  '(description           "Argument 10 of Num_Spinner (default = None)")
  '(leading               ",")
;;; Num_Spinner:label
)

(lse-define-fill-in "Num_Spinner:labelpos" 
  '(description           "Argument 11 of Num_Spinner (default = left)")
  '(leading               ",")
;;; Num_Spinner:labelpos
)

(lse-define-fill-in "Num_Spinner:labelanchor" 
  '(description           "Argument 12 of Num_Spinner (default = e)")
  '(leading               ",")
;;; Num_Spinner:labelanchor
)

(lse-define-fill-in "Num_Spinner:labeljustify" 
  '(description           "Argument 13 of Num_Spinner (default = None)")
  '(leading               ",")
;;; Num_Spinner:labeljustify
)

(lse-define-fill-in "Num_Spinner:default" 
  '(description           "Argument 14 of Num_Spinner (default = None)")
  '(leading               ",")
;;; Num_Spinner:default
)

(lse-define-fill-in "Num_Spinner:state" 
  '(description           "Argument 15 of Num_Spinner (default = normal)")
  '(leading               ",")
;;; Num_Spinner:state
)

(lse-define-fill-in "Num_Spinner:takefocus" 
  '(description           "Argument 16 of Num_Spinner (default = 1)")
  '(leading               ",")
;;; Num_Spinner:takefocus
)

(lse-define-fill-in "Num_Spinner:bindtag" 
  '(description           "Argument 17 of Num_Spinner (default = None)")
  '(leading               ",")
;;; Num_Spinner:bindtag
)

(lse-define-fill-in "Num_Spinner(master,lo_bound,hi_bound,inc,wrap,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag)" 
  '(description           "Create a Num_Spinner object")
  '(token                 "CTK.Num_Spinner")
  '(replacement           "CTK.Num_Spinner («Num_Spinner:master», ««Num_Spinner:lo_bound»», ««Num_Spinner:hi_bound»», ««Num_Spinner:inc»», ««Num_Spinner:wrap»», ««Num_Spinner:name»», ««Num_Spinner:entryname»», ««Num_Spinner:entryfill»», ««Num_Spinner:entrypos»», ««Num_Spinner:label»», ««Num_Spinner:labelpos»», ««Num_Spinner:labelanchor»», ««Num_Spinner:labeljustify»», ««Num_Spinner:default»», ««Num_Spinner:state»», ««Num_Spinner:takefocus»», ««Num_Spinner:bindtag»»)")
;;; Num_Spinner(master,lo_bound,hi_bound,inc,wrap,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag)
)

(lse-define-fill-in "OptionMenu:master" 
  '(description           "Argument 1 of OptionMenu")
  '(leading               ",")
;;; OptionMenu:master
)

(lse-define-fill-in "OptionMenu:variable" 
  '(description           "Argument 2 of OptionMenu")
  '(leading               ",")
;;; OptionMenu:variable
)

(lse-define-fill-in "OptionMenu:value" 
  '(description           "Argument 3 of OptionMenu")
  '(leading               ",")
;;; OptionMenu:value
)

(lse-define-fill-in "OptionMenu:values" 
  '(description           "Argument 4 of OptionMenu")
  '(leading               ",")
  '(separator             ", ")
;;; OptionMenu:values
)

(lse-define-fill-in "OptionMenu(master,variable,value,values)" 
  '(description           "Create a OptionMenu object")
  '(token                 "CTK.OptionMenu")
  '(replacement           "CTK.OptionMenu («OptionMenu:master», «OptionMenu:variable», «OptionMenu:value», ««OptionMenu:values»»···)")
;;; OptionMenu(master,variable,value,values)
)

(lse-define-fill-in "Oval:canvas" 
  '(description           "Argument 1 of Oval")
  '(leading               ",")
;;; Oval:canvas
)

(lse-define-fill-in "Oval:args" 
  '(description           "Argument 2 of Oval")
  '(leading               ",")
  '(separator             ", ")
;;; Oval:args
)

(lse-define-fill-in "Oval(canvas,args,kw)" 
  '(description           "Create a Oval object")
  '(token                 "CTK.Oval")
  '(replacement           "CTK.Oval («Oval:canvas», ««Oval:args»»···, ««py-named-arg»»···)")
;;; Oval(canvas,args,kw)
)

(lse-define-fill-in "PhotoImage:name" 
  '(description           "Argument 1 of PhotoImage (default = None)")
  '(leading               ",")
;;; PhotoImage:name
)

(lse-define-fill-in "PhotoImage:cnf" 
  '(description           "Argument 2 of PhotoImage (default = {})")
  '(leading               ",")
;;; PhotoImage:cnf
)

(lse-define-fill-in "PhotoImage:master" 
  '(description           "Argument 3 of PhotoImage (default = None)")
  '(leading               ",")
;;; PhotoImage:master
)

(lse-define-fill-in "PhotoImage(name,cnf,master,kw)" 
  '(description           "Create a PhotoImage object")
  '(token                 "CTK.PhotoImage")
  '(replacement           "CTK.PhotoImage (««PhotoImage:name»», ««PhotoImage:cnf»», ««PhotoImage:master»», ««py-named-arg»»···)")
;;; PhotoImage(name,cnf,master,kw)
)

(lse-define-fill-in "Polygon:canvas" 
  '(description           "Argument 1 of Polygon")
  '(leading               ",")
;;; Polygon:canvas
)

(lse-define-fill-in "Polygon:args" 
  '(description           "Argument 2 of Polygon")
  '(leading               ",")
  '(separator             ", ")
;;; Polygon:args
)

(lse-define-fill-in "Polygon(canvas,args,kw)" 
  '(description           "Create a Polygon object")
  '(token                 "CTK.Polygon")
  '(replacement           "CTK.Polygon («Polygon:canvas», ««Polygon:args»»···, ««py-named-arg»»···)")
;;; Polygon(canvas,args,kw)
)

(lse-define-fill-in "Progress_Gauge:master" 
  '(description           "Argument 1 of Progress_Gauge")
  '(leading               ",")
;;; Progress_Gauge:master
)

(lse-define-fill-in "Progress_Gauge:name" 
  '(description           "Argument 2 of Progress_Gauge (default = None)")
  '(leading               ",")
;;; Progress_Gauge:name
)

(lse-define-fill-in "Progress_Gauge:label" 
  '(description           "Argument 3 of Progress_Gauge (default = )")
  '(leading               ",")
;;; Progress_Gauge:label
)

(lse-define-fill-in "Progress_Gauge:active" 
  '(description           "Argument 4 of Progress_Gauge (default = 0)")
  '(leading               ",")
;;; Progress_Gauge:active
)

(lse-define-fill-in "Progress_Gauge:cursor" 
  '(description           "Argument 5 of Progress_Gauge (default = watch)")
  '(leading               ",")
;;; Progress_Gauge:cursor
)

(lse-define-fill-in "Progress_Gauge(master,name,label,active,cursor)" 
  '(description           "Create a Progress_Gauge object")
  '(token                 "CTK.Progress_Gauge")
  '(replacement           "CTK.Progress_Gauge («Progress_Gauge:master», ««Progress_Gauge:name»», ««Progress_Gauge:label»», ««Progress_Gauge:active»», ««Progress_Gauge:cursor»»)")
;;; Progress_Gauge(master,name,label,active,cursor)
)

(lse-define-fill-in "Progress_Gauge_T:master" 
  '(description           "Argument 1 of Progress_Gauge_T")
  '(leading               ",")
;;; Progress_Gauge_T:master
)

(lse-define-fill-in "Progress_Gauge_T:name" 
  '(description           "Argument 2 of Progress_Gauge_T (default = None)")
  '(leading               ",")
;;; Progress_Gauge_T:name
)

(lse-define-fill-in "Progress_Gauge_T:label" 
  '(description           "Argument 3 of Progress_Gauge_T (default = )")
  '(leading               ",")
;;; Progress_Gauge_T:label
)

(lse-define-fill-in "Progress_Gauge_T:active" 
  '(description           "Argument 4 of Progress_Gauge_T (default = 0)")
  '(leading               ",")
;;; Progress_Gauge_T:active
)

(lse-define-fill-in "Progress_Gauge_T:cursor" 
  '(description           "Argument 5 of Progress_Gauge_T (default = watch)")
  '(leading               ",")
;;; Progress_Gauge_T:cursor
)

(lse-define-fill-in "Progress_Gauge_T:title" 
  '(description           "Argument 6 of Progress_Gauge_T (default = )")
  '(leading               ",")
;;; Progress_Gauge_T:title
)

(lse-define-fill-in "Progress_Gauge_T(master,name,label,active,cursor,title)" 
  '(description           "Create a Progress_Gauge_T object")
  '(token                 "CTK.Progress_Gauge_T")
  '(replacement           "CTK.Progress_Gauge_T («Progress_Gauge_T:master», ««Progress_Gauge_T:name»», ««Progress_Gauge_T:label»», ««Progress_Gauge_T:active»», ««Progress_Gauge_T:cursor»», ««Progress_Gauge_T:title»»)")
;;; Progress_Gauge_T(master,name,label,active,cursor,title)
)

(lse-define-fill-in "Radiobutton:master" 
  '(description           "Argument 1 of Radiobutton (default = None)")
  '(leading               ",")
;;; Radiobutton:master
)

(lse-define-fill-in "Radiobutton:cnf" 
  '(description           "Argument 2 of Radiobutton (default = {})")
  '(leading               ",")
;;; Radiobutton:cnf
)

(lse-define-fill-in "Radiobutton(master,cnf,kw)" 
  '(description           "Create a Radiobutton object")
  '(token                 "CTK.Radiobutton")
  '(replacement           "CTK.Radiobutton (««Radiobutton:master»», ««Radiobutton:cnf»», ««py-named-arg»»···)")
;;; Radiobutton(master,cnf,kw)
)

(lse-define-fill-in "Rectangle:canvas" 
  '(description           "Argument 1 of Rectangle")
  '(leading               ",")
;;; Rectangle:canvas
)

(lse-define-fill-in "Rectangle:args" 
  '(description           "Argument 2 of Rectangle")
  '(leading               ",")
  '(separator             ", ")
;;; Rectangle:args
)

(lse-define-fill-in "Rectangle(canvas,args,kw)" 
  '(description           "Create a Rectangle object")
  '(token                 "CTK.Rectangle")
  '(replacement           "CTK.Rectangle («Rectangle:canvas», ««Rectangle:args»»···, ««py-named-arg»»···)")
;;; Rectangle(canvas,args,kw)
)

(lse-define-fill-in "Scale:master" 
  '(description           "Argument 1 of Scale (default = None)")
  '(leading               ",")
;;; Scale:master
)

(lse-define-fill-in "Scale:cnf" 
  '(description           "Argument 2 of Scale (default = {})")
  '(leading               ",")
;;; Scale:cnf
)

(lse-define-fill-in "Scale(master,cnf,kw)" 
  '(description           "Create a Scale object")
  '(token                 "CTK.Scale")
  '(replacement           "CTK.Scale (««Scale:master»», ««Scale:cnf»», ««py-named-arg»»···)")
;;; Scale(master,cnf,kw)
)

(lse-define-fill-in "Scrollbar:master" 
  '(description           "Argument 1 of Scrollbar (default = None)")
  '(leading               ",")
;;; Scrollbar:master
)

(lse-define-fill-in "Scrollbar:cnf" 
  '(description           "Argument 2 of Scrollbar (default = {})")
  '(leading               ",")
;;; Scrollbar:cnf
)

(lse-define-fill-in "Scrollbar(master,cnf,kw)" 
  '(description           "Create a Scrollbar object")
  '(token                 "CTK.Scrollbar")
  '(replacement           "CTK.Scrollbar (««Scrollbar:master»», ««Scrollbar:cnf»», ««py-named-arg»»···)")
;;; Scrollbar(master,cnf,kw)
)

(lse-define-fill-in "Scrolled_Listbox:master" 
  '(description           "Argument 1 of Scrolled_Listbox")
  '(leading               ",")
;;; Scrolled_Listbox:master
)

(lse-define-fill-in "Scrolled_Listbox:list" 
  '(description           "Argument 2 of Scrolled_Listbox (default = ())")
  '(leading               ",")
;;; Scrolled_Listbox:list
)

(lse-define-fill-in "Scrolled_Listbox:name" 
  '(description           "Argument 3 of Scrolled_Listbox (default = None)")
  '(leading               ",")
;;; Scrolled_Listbox:name
)

(lse-define-fill-in "Scrolled_Listbox:selectmode" 
  '(description           "Argument 4 of Scrolled_Listbox (default = browse)")
  '(leading               ",")
;;; Scrolled_Listbox:selectmode
)

(lse-define-fill-in "Scrolled_Listbox(master,list,name,selectmode)" 
  '(description           "Create a Scrolled_Listbox object")
  '(token                 "CTK.Scrolled_Listbox")
  '(replacement           "CTK.Scrolled_Listbox («Scrolled_Listbox:master», ««Scrolled_Listbox:list»», ««Scrolled_Listbox:name»», ««Scrolled_Listbox:selectmode»»)")
;;; Scrolled_Listbox(master,list,name,selectmode)
)

(lse-define-fill-in "Scrolled_Text:master" 
  '(description           "Argument 1 of Scrolled_Text")
  '(leading               ",")
;;; Scrolled_Text:master
)

(lse-define-fill-in "Scrolled_Text:name" 
  '(description           "Argument 2 of Scrolled_Text (default = None)")
  '(leading               ",")
;;; Scrolled_Text:name
)

(lse-define-fill-in "Scrolled_Text:state" 
  '(description           "Argument 3 of Scrolled_Text (default = normal)")
  '(leading               ",")
;;; Scrolled_Text:state
)

(lse-define-fill-in "Scrolled_Text(master,name,state,kw)" 
  '(description           "Create a Scrolled_Text object")
  '(token                 "CTK.Scrolled_Text")
  '(replacement           "CTK.Scrolled_Text («Scrolled_Text:master», ««Scrolled_Text:name»», ««Scrolled_Text:state»», ««py-named-arg»»···)")
;;; Scrolled_Text(master,name,state,kw)
)

(lse-define-fill-in "Slide:widget" 
  '(description           "Argument 1 of Slide")
  '(leading               ",")
;;; Slide:widget
)

(lse-define-fill-in "Slide:action" 
  '(description           "Argument 2 of Slide (default = None)")
  '(leading               ",")
;;; Slide:action
)

(lse-define-fill-in "Slide:action_name" 
  '(description           "Argument 3 of Slide (default = None)")
  '(leading               ",")
;;; Slide:action_name
)

(lse-define-fill-in "Slide(widget,action,action_name)" 
  '(description           "Create a Slide object")
  '(token                 "CTK.Slide")
  '(replacement           "CTK.Slide («Slide:widget», ««Slide:action»», ««Slide:action_name»»)")
;;; Slide(widget,action,action_name)
)

(lse-define-fill-in "Slide_Show:master" 
  '(description           "Argument 1 of Slide_Show")
  '(leading               ",")
;;; Slide_Show:master
)

(lse-define-fill-in "Slide_Show:name" 
  '(description           "Argument 2 of Slide_Show (default = None)")
  '(leading               ",")
;;; Slide_Show:name
)

(lse-define-fill-in "Slide_Show:help" 
  '(description           "Argument 3 of Slide_Show (default = None)")
  '(leading               ",")
;;; Slide_Show:help
)

(lse-define-fill-in "Slide_Show(master,name,help)" 
  '(description           "Create a Slide_Show object")
  '(token                 "CTK.Slide_Show")
  '(replacement           "CTK.Slide_Show («Slide_Show:master», ««Slide_Show:name»», ««Slide_Show:help»»)")
;;; Slide_Show(master,name,help)
)

(lse-define-fill-in "Statuslabel:master" 
  '(description           "Argument 1 of Statuslabel")
  '(leading               ",")
;;; Statuslabel:master
)

(lse-define-fill-in "Statuslabel:name" 
  '(description           "Argument 2 of Statuslabel (default = None)")
  '(leading               ",")
;;; Statuslabel:name
)

(lse-define-fill-in "Statuslabel(master,name)" 
  '(description           "Create a Statuslabel object")
  '(token                 "CTK.Statuslabel")
  '(replacement           "CTK.Statuslabel («Statuslabel:master», ««Statuslabel:name»»)")
;;; Statuslabel(master,name)
)

(lse-define-fill-in "Statuslabel.Label:master" 
  '(description           "Argument 1 of Statuslabel.Label (default = None)")
  '(leading               ",")
;;; Statuslabel.Label:master
)

(lse-define-fill-in "Statuslabel.Label:cnf" 
  '(description           "Argument 2 of Statuslabel.Label (default = {})")
  '(leading               ",")
;;; Statuslabel.Label:cnf
)

(lse-define-fill-in "Statuslabel.Label(master,cnf,kw)" 
  '(description           "Create a Statuslabel.Label object")
  '(token                 "Statuslabel.Statuslabel.Label")
  '(replacement           "Statuslabel.Statuslabel.Label (««Statuslabel.Label:master»», ««Statuslabel.Label:cnf»», ««py-named-arg»»···)")
;;; Statuslabel.Label(master,cnf,kw)
)

(lse-define-fill-in "Statustext:master" 
  '(description           "Argument 1 of Statustext")
  '(leading               ",")
;;; Statustext:master
)

(lse-define-fill-in "Statustext:name" 
  '(description           "Argument 2 of Statustext (default = None)")
  '(leading               ",")
;;; Statustext:name
)

(lse-define-fill-in "Statustext(master,name)" 
  '(description           "Create a Statustext object")
  '(token                 "CTK.Statustext")
  '(replacement           "CTK.Statustext («Statustext:master», ««Statustext:name»»)")
;;; Statustext(master,name)
)

(lse-define-fill-in "Statustext.Text:master" 
  '(description           "Argument 1 of Statustext.Text (default = None)")
  '(leading               ",")
;;; Statustext.Text:master
)

(lse-define-fill-in "Statustext.Text:cnf" 
  '(description           "Argument 2 of Statustext.Text (default = {})")
  '(leading               ",")
;;; Statustext.Text:cnf
)

(lse-define-fill-in "Statustext.Text(master,cnf,kw)" 
  '(description           "Create a Statustext.Text object")
  '(token                 "Statustext.Statustext.Text")
  '(replacement           "Statustext.Statustext.Text (««Statustext.Text:master»», ««Statustext.Text:cnf»», ««py-named-arg»»···)")
;;; Statustext.Text(master,cnf,kw)
)

(lse-define-fill-in "StringVar:master" 
  '(description           "Argument 1 of StringVar (default = None)")
  '(leading               ",")
;;; StringVar:master
)

(lse-define-fill-in "StringVar(master)" 
  '(description           "Create a StringVar object")
  '(token                 "CTK.StringVar")
  '(replacement           "CTK.StringVar (««StringVar:master»»)")
;;; StringVar(master)
)

(lse-define-fill-in "Studbutton:master" 
  '(description           "Argument 1 of Studbutton (default = None)")
  '(leading               ",")
;;; Studbutton:master
)

(lse-define-fill-in "Studbutton:cnf" 
  '(description           "Argument 2 of Studbutton (default = {})")
  '(leading               ",")
;;; Studbutton:cnf
)

(lse-define-fill-in "Studbutton(master,cnf,kw)" 
  '(description           "Create a Studbutton object")
  '(token                 "CTK.Studbutton")
  '(replacement           "CTK.Studbutton (««Studbutton:master»», ««Studbutton:cnf»», ««py-named-arg»»···)")
;;; Studbutton(master,cnf,kw)
)

(lse-define-fill-in "Tabbed_Notebook:master" 
  '(description           "Argument 1 of Tabbed_Notebook (default = None)")
  '(leading               ",")
;;; Tabbed_Notebook:master
)

(lse-define-fill-in "Tabbed_Notebook:name" 
  '(description           "Argument 2 of Tabbed_Notebook (default = None)")
  '(leading               ",")
;;; Tabbed_Notebook:name
)

(lse-define-fill-in "Tabbed_Notebook(master,name)" 
  '(description           "Create a Tabbed_Notebook object")
  '(token                 "CTK.Tabbed_Notebook")
  '(replacement           "CTK.Tabbed_Notebook (««Tabbed_Notebook:master»», ««Tabbed_Notebook:name»»)")
;;; Tabbed_Notebook(master,name)
)

(lse-define-fill-in "Text:master" 
  '(description           "Argument 1 of Text (default = None)")
  '(leading               ",")
;;; Text:master
)

(lse-define-fill-in "Text:cnf" 
  '(description           "Argument 2 of Text (default = {})")
  '(leading               ",")
;;; Text:cnf
)

(lse-define-fill-in "Text(master,cnf,kw)" 
  '(description           "Create a Text object")
  '(token                 "CTK.Text")
  '(replacement           "CTK.Text (««Text:master»», ««Text:cnf»», ««py-named-arg»»···)")
;;; Text(master,cnf,kw)
)

(lse-define-fill-in "Tk:screenName" 
  '(description           "Argument 1 of Tk (default = None)")
  '(leading               ",")
;;; Tk:screenName
)

(lse-define-fill-in "Tk:baseName" 
  '(description           "Argument 2 of Tk (default = None)")
  '(leading               ",")
;;; Tk:baseName
)

(lse-define-fill-in "Tk:className" 
  '(description           "Argument 3 of Tk (default = Tk)")
  '(leading               ",")
;;; Tk:className
)

(lse-define-fill-in "Tk(screenName,baseName,className)" 
  '(description           "Create a Tk object")
  '(token                 "CTK.Tk")
  '(replacement           "CTK.Tk (««Tk:screenName»», ««Tk:baseName»», ««Tk:className»»)")
;;; Tk(screenName,baseName,className)
)

(lse-define-fill-in "Toplevel:master" 
  '(description           "Argument 1 of Toplevel (default = None)")
  '(leading               ",")
;;; Toplevel:master
)

(lse-define-fill-in "Toplevel:cnf" 
  '(description           "Argument 2 of Toplevel (default = {})")
  '(leading               ",")
;;; Toplevel:cnf
)

(lse-define-fill-in "Toplevel(master,cnf,kw)" 
  '(description           "Create a Toplevel object")
  '(token                 "CTK.Toplevel")
  '(replacement           "CTK.Toplevel (««Toplevel:master»», ««Toplevel:cnf»», ««py-named-arg»»···)")
;;; Toplevel(master,cnf,kw)
)

(lse-define-fill-in "Tributton:master" 
  '(description           "Argument 1 of Tributton (default = None)")
  '(leading               ",")
;;; Tributton:master
)

(lse-define-fill-in "Tributton:cnf" 
  '(description           "Argument 2 of Tributton (default = {})")
  '(leading               ",")
;;; Tributton:cnf
)

(lse-define-fill-in "Tributton(master,cnf,kw)" 
  '(description           "Create a Tributton object")
  '(token                 "CTK.Tributton")
  '(replacement           "CTK.Tributton (««Tributton:master»», ««Tributton:cnf»», ««py-named-arg»»···)")
;;; Tributton(master,cnf,kw)
)

(lse-define-fill-in "Up_Down_Button:master" 
  '(description           "Argument 1 of Up_Down_Button")
  '(leading               ",")
;;; Up_Down_Button:master
)

(lse-define-fill-in "Up_Down_Button:entry" 
  '(description
    "If `up_command' (`down_command') is not given, `entry.next'"
           "(`entry.prev') is used as command for the buttons."
        ""
   )
  '(leading               ",")
;;; Up_Down_Button:entry
)

(lse-define-fill-in "Up_Down_Button:name" 
  '(description           "Argument 3 of Up_Down_Button (default = None)")
  '(leading               ",")
;;; Up_Down_Button:name
)

(lse-define-fill-in "Up_Down_Button:up_command" 
  '(description
    "If `up_command' (`down_command') is not given, `entry.next'"
           "(`entry.prev') is used as command for the buttons."
         "(default = None)"
   )
  '(leading               ",")
;;; Up_Down_Button:up_command
)

(lse-define-fill-in "Up_Down_Button:down_command" 
  '(description
    "If `up_command' (`down_command') is not given, `entry.next'"
           "(`entry.prev') is used as command for the buttons."
         "(default = None)"
   )
  '(leading               ",")
;;; Up_Down_Button:down_command
)

(lse-define-fill-in "Up_Down_Button:state" 
  '(description           "Argument 6 of Up_Down_Button (default = normal)")
  '(leading               ",")
;;; Up_Down_Button:state
)

(lse-define-fill-in "Up_Down_Button(master,entry,name,up_command,down_command,state)" 
  '(description
    "If `up_command' (`down_command') is not given, `entry.next'"
           "(`entry.prev') is used as command for the buttons."
        ""
   )
  '(token                 "CTK.Up_Down_Button")
  '(replacement           "CTK.Up_Down_Button («Up_Down_Button:master», «Up_Down_Button:entry», ««Up_Down_Button:name»», ««Up_Down_Button:up_command»», ««Up_Down_Button:down_command»», ««Up_Down_Button:state»»)")
;;; Up_Down_Button(master,entry,name,up_command,down_command,state)
)

(lse-define-fill-in "V_Panedwindow:master" 
  '(description           "Argument 1 of V_Panedwindow (default = None)")
  '(leading               ",")
;;; V_Panedwindow:master
)

(lse-define-fill-in "V_Panedwindow(master,kw)" 
  '(description           "Create a V_Panedwindow object")
  '(token                 "CTK.V_Panedwindow")
  '(replacement           "CTK.V_Panedwindow (««V_Panedwindow:master»», ««py-named-arg»»···)")
;;; V_Panedwindow(master,kw)
)

(lse-define-fill-in "V_Scrollable:master" 
  '(description           "Argument 1 of V_Scrollable (default = None)")
  '(leading               ",")
;;; V_Scrollable:master
)

(lse-define-fill-in "V_Scrollable:fixed_width" 
  '(description           "Argument 2 of V_Scrollable (default = None)")
  '(leading               ",")
;;; V_Scrollable:fixed_width
)

(lse-define-fill-in "V_Scrollable:static_scroll_bar" 
  '(description           "Argument 3 of V_Scrollable (default = None)")
  '(leading               ",")
;;; V_Scrollable:static_scroll_bar
)

(lse-define-fill-in "V_Scrollable(master,fixed_width,static_scroll_bar,kw)" 
  '(description           "Create a V_Scrollable object")
  '(token                 "CTK.V_Scrollable")
  '(replacement           "CTK.V_Scrollable (««V_Scrollable:master»», ««V_Scrollable:fixed_width»», ««V_Scrollable:static_scroll_bar»», ««py-named-arg»»···)")
;;; V_Scrollable(master,fixed_width,static_scroll_bar,kw)
)

(lse-define-fill-in "V_Strut:master" 
  '(description           "Argument 1 of V_Strut")
  '(leading               ",")
;;; V_Strut:master
)

(lse-define-fill-in "V_Strut:strut_name" 
  '(description           "Argument 2 of V_Strut (default = None)")
  '(leading               ",")
;;; V_Strut:strut_name
)

(lse-define-fill-in "V_Strut:strut_class" 
  '(description           "Argument 3 of V_Strut (default = None)")
  '(leading               ",")
;;; V_Strut:strut_class
)

(lse-define-fill-in "V_Strut:strut_height" 
  '(description           "Argument 4 of V_Strut (default = 0)")
  '(leading               ",")
;;; V_Strut:strut_height
)

(lse-define-fill-in "V_Strut(master,strut_name,strut_class,strut_height,kw)" 
  '(description           "Create a V_Strut object")
  '(token                 "CTK.V_Strut")
  '(replacement           "CTK.V_Strut («V_Strut:master», ««V_Strut:strut_name»», ««V_Strut:strut_class»», ««V_Strut:strut_height»», ««py-named-arg»»···)")
;;; V_Strut(master,strut_name,strut_class,strut_height,kw)
)

(lse-define-fill-in "Variable:master" 
  '(description           "Argument 1 of Variable (default = None)")
  '(leading               ",")
;;; Variable:master
)

(lse-define-fill-in "Variable(master)" 
  '(description           "Create a Variable object")
  '(token                 "CTK.Variable")
  '(replacement           "CTK.Variable (««Variable:master»»)")
;;; Variable(master)
)

(lse-define-fill-in "Window:canvas" 
  '(description           "Argument 1 of Window")
  '(leading               ",")
;;; Window:canvas
)

(lse-define-fill-in "Window:args" 
  '(description           "Argument 2 of Window")
  '(leading               ",")
  '(separator             ", ")
;;; Window:args
)

(lse-define-fill-in "Window(canvas,args,kw)" 
  '(description           "Create a Window object")
  '(token                 "CTK.Window")
  '(replacement           "CTK.Window («Window:canvas», ««Window:args»»···, ««py-named-arg»»···)")
;;; Window(canvas,args,kw)
)

(lse-define-fill-in "_C_Frame:master" 
  '(description           "Argument 1 of _C_Frame (default = None)")
  '(leading               ",")
;;; _C_Frame:master
)

(lse-define-fill-in "_C_Frame:name" 
  '(description           "Argument 2 of _C_Frame (default = None)")
  '(leading               ",")
;;; _C_Frame:name
)

(lse-define-fill-in "_C_Frame:class_" 
  '(description           "Argument 3 of _C_Frame (default = Tkinter.Frame)")
  '(leading               ",")
;;; _C_Frame:class_
)

(lse-define-fill-in "_C_Frame(master,name,class_,kw)" 
  '(description           "Create a _C_Frame object")
  '(token                 "CTK._C_Frame")
  '(replacement           "CTK._C_Frame (««_C_Frame:master»», ««_C_Frame:name»», ««_C_Frame:class_»», ««py-named-arg»»···)")
;;; _C_Frame(master,name,class_,kw)
)

(lse-define-fill-in "_Combobox:master" 
  '(description           "Argument 1 of _Combobox")
  '(leading               ",")
;;; _Combobox:master
)

(lse-define-fill-in "_Combobox:list" 
  '(description           "Argument 2 of _Combobox")
  '(leading               ",")
;;; _Combobox:list
)

(lse-define-fill-in "_Combobox:side" 
  '(description           "Argument 3 of _Combobox")
  '(leading               ",")
;;; _Combobox:side
)

(lse-define-fill-in "_Combobox:select_event" 
  '(description           "Argument 4 of _Combobox")
  '(leading               ",")
;;; _Combobox:select_event
)

(lse-define-fill-in "_Combobox:before" 
  '(description           "Argument 5 of _Combobox (default = None)")
  '(leading               ",")
;;; _Combobox:before
)

(lse-define-fill-in "_Combobox:bindtag" 
  '(description           "Argument 6 of _Combobox (default = None)")
  '(leading               ",")
;;; _Combobox:bindtag
)

(lse-define-fill-in "_Combobox(master,list,side,select_event,before,bindtag)" 
  '(description           "Create a _Combobox object")
  '(token                 "CTK._Combobox")
  '(replacement           "CTK._Combobox («_Combobox:master», «_Combobox:list», «_Combobox:side», «_Combobox:select_event», ««_Combobox:before»», ««_Combobox:bindtag»»)")
;;; _Combobox(master,list,side,select_event,before,bindtag)
)

(lse-define-fill-in "_Combobox.Scrolled_Listbox:master" 
  '(description           "Argument 1 of _Combobox.Scrolled_Listbox")
  '(leading               ",")
;;; _Combobox.Scrolled_Listbox:master
)

(lse-define-fill-in "_Combobox.Scrolled_Listbox:list" 
  '(description           "Argument 2 of _Combobox.Scrolled_Listbox (default = ())")
  '(leading               ",")
;;; _Combobox.Scrolled_Listbox:list
)

(lse-define-fill-in "_Combobox.Scrolled_Listbox:name" 
  '(description           "Argument 3 of _Combobox.Scrolled_Listbox (default = None)")
  '(leading               ",")
;;; _Combobox.Scrolled_Listbox:name
)

(lse-define-fill-in "_Combobox.Scrolled_Listbox:selectmode" 
  '(description           "Argument 4 of _Combobox.Scrolled_Listbox (default = browse)")
  '(leading               ",")
;;; _Combobox.Scrolled_Listbox:selectmode
)

(lse-define-fill-in "_Combobox.Scrolled_Listbox(master,list,name,selectmode)" 
  '(description           "Create a _Combobox.Scrolled_Listbox object")
  '(token                 "_Combobox._Combobox.Scrolled_Listbox")
  '(replacement           "_Combobox._Combobox.Scrolled_Listbox («_Combobox.Scrolled_Listbox:master», ««_Combobox.Scrolled_Listbox:list»», ««_Combobox.Scrolled_Listbox:name»», ««_Combobox.Scrolled_Listbox:selectmode»»)")
;;; _Combobox.Scrolled_Listbox(master,list,name,selectmode)
)

(lse-define-fill-in "_Listbox_Tuple:selectmode" 
  '(description           "Argument 1 of _Listbox_Tuple (default = browse)")
  '(leading               ",")
;;; _Listbox_Tuple:selectmode
)

(lse-define-fill-in "_Listbox_Tuple(selectmode)" 
  '(description           "Create a _Listbox_Tuple object")
  '(token                 "CTK._Listbox_Tuple")
  '(replacement           "CTK._Listbox_Tuple (««_Listbox_Tuple:selectmode»»)")
;;; _Listbox_Tuple(selectmode)
)

(lse-define-fill-in "_Listdrop:master" 
  '(description           "Argument 1 of _Listdrop")
  '(leading               ",")
;;; _Listdrop:master
)

(lse-define-fill-in "_Listdrop:list" 
  '(description           "Argument 2 of _Listdrop")
  '(leading               ",")
;;; _Listdrop:list
)

(lse-define-fill-in "_Listdrop:side" 
  '(description           "Argument 3 of _Listdrop")
  '(leading               ",")
;;; _Listdrop:side
)

(lse-define-fill-in "_Listdrop:state" 
  '(description           "Argument 4 of _Listdrop (default = normal)")
  '(leading               ",")
;;; _Listdrop:state
)

(lse-define-fill-in "_Listdrop(master,list,side,state)" 
  '(description           "Create a _Listdrop object")
  '(token                 "CTK._Listdrop")
  '(replacement           "CTK._Listdrop («_Listdrop:master», «_Listdrop:list», «_Listdrop:side», ««_Listdrop:state»»)")
;;; _Listdrop(master,list,side,state)
)

(lse-define-fill-in "_Listspinner:list" 
  '(description           "Argument 1 of _Listspinner")
  '(leading               ",")
;;; _Listspinner:list
)

(lse-define-fill-in "_Listspinner:default" 
  '(description           "Argument 2 of _Listspinner")
  '(leading               ",")
;;; _Listspinner:default
)

(lse-define-fill-in "_Listspinner(list,default)" 
  '(description           "Create a _Listspinner object")
  '(token                 "CTK._Listspinner")
  '(replacement           "CTK._Listspinner («_Listspinner:list», «_Listspinner:default»)")
;;; _Listspinner(list,default)
)

(lse-define-fill-in "_Panedwindow:master" 
  '(description           "Argument 1 of _Panedwindow (default = None)")
  '(leading               ",")
;;; _Panedwindow:master
)

(lse-define-fill-in "_Panedwindow:name" 
  '(description           "Argument 2 of _Panedwindow (default = None)")
  '(leading               ",")
;;; _Panedwindow:name
)

(lse-define-fill-in "_Panedwindow(master,name,kw)" 
  '(description           "Create a _Panedwindow object")
  '(token                 "CTK._Panedwindow")
  '(replacement           "CTK._Panedwindow (««_Panedwindow:master»», ««_Panedwindow:name»», ««py-named-arg»»···)")
;;; _Panedwindow(master,name,kw)
)

(lse-define-fill-in "_Scrollable:master" 
  '(description           "Argument 1 of _Scrollable (default = None)")
  '(leading               ",")
;;; _Scrollable:master
)

(lse-define-fill-in "_Scrollable:name" 
  '(description           "Argument 2 of _Scrollable (default = None)")
  '(leading               ",")
;;; _Scrollable:name
)

(lse-define-fill-in "_Scrollable:width" 
  '(description           "Argument 3 of _Scrollable (default = 0)")
  '(leading               ",")
;;; _Scrollable:width
)

(lse-define-fill-in "_Scrollable:height" 
  '(description           "Argument 4 of _Scrollable (default = 0)")
  '(leading               ",")
;;; _Scrollable:height
)

(lse-define-fill-in "_Scrollable(master,name,width,height,kw)" 
  '(description           "Create a _Scrollable object")
  '(token                 "CTK._Scrollable")
  '(replacement           "CTK._Scrollable (««_Scrollable:master»», ««_Scrollable:name»», ««_Scrollable:width»», ««_Scrollable:height»», ««py-named-arg»»···)")
;;; _Scrollable(master,name,width,height,kw)
)

(lse-define-fill-in "_Scrolled_Listbox()" 
  '(description           "Create a _Scrolled_Listbox object")
  '(token                 "CTK._Scrolled_Listbox")
  '(replacement           "CTK._Scrolled_Listbox ()")
;;; _Scrolled_Listbox()
)

(lse-define-fill-in "_Separator:master" 
  '(description           "Argument 1 of _Separator")
  '(leading               ",")
;;; _Separator:master
)

(lse-define-fill-in "_Separator:name" 
  '(description           "Argument 2 of _Separator (default = None)")
  '(leading               ",")
;;; _Separator:name
)

(lse-define-fill-in "_Separator(master,name,kw)" 
  '(description           "Create a _Separator object")
  '(token                 "H_Panedwindow._Separator")
  '(replacement           "H_Panedwindow._Separator («_Separator:master», ««_Separator:name»», ««py-named-arg»»···)")
;;; _Separator(master,name,kw)
)

(lse-define-fill-in "_Spinner:master" 
  '(description           "Argument 1 of _Spinner")
  '(leading               ",")
;;; _Spinner:master
)

(lse-define-fill-in "_Spinner:side" 
  '(description           "Argument 2 of _Spinner (default = right)")
  '(leading               ",")
;;; _Spinner:side
)

(lse-define-fill-in "_Spinner:before" 
  '(description           "Argument 3 of _Spinner (default = None)")
  '(leading               ",")
;;; _Spinner:before
)

(lse-define-fill-in "_Spinner:state" 
  '(description           "Argument 4 of _Spinner (default = normal)")
  '(leading               ",")
;;; _Spinner:state
)

(lse-define-fill-in "_Spinner(master,side,before,state)" 
  '(description           "Create a _Spinner object")
  '(token                 "CTK._Spinner")
  '(replacement           "CTK._Spinner («_Spinner:master», ««_Spinner:side»», ««_Spinner:before»», ««_Spinner:state»»)")
;;; _Spinner(master,side,before,state)
)

(lse-define-fill-in "_Spinnerentry:master" 
  '(description           "Argument 1 of _Spinnerentry")
  '(leading               ",")
;;; _Spinnerentry:master
)

(lse-define-fill-in "_Spinnerentry:name" 
  '(description           "Argument 2 of _Spinnerentry (default = None)")
  '(leading               ",")
;;; _Spinnerentry:name
)

(lse-define-fill-in "_Spinnerentry:entryname" 
  '(description           "Argument 3 of _Spinnerentry (default = None)")
  '(leading               ",")
;;; _Spinnerentry:entryname
)

(lse-define-fill-in "_Spinnerentry:entryfill" 
  '(description           "Argument 4 of _Spinnerentry (default = x)")
  '(leading               ",")
;;; _Spinnerentry:entryfill
)

(lse-define-fill-in "_Spinnerentry:entrypos" 
  '(description           "Argument 5 of _Spinnerentry (default = left)")
  '(leading               ",")
;;; _Spinnerentry:entrypos
)

(lse-define-fill-in "_Spinnerentry:label" 
  '(description           "Argument 6 of _Spinnerentry (default = None)")
  '(leading               ",")
;;; _Spinnerentry:label
)

(lse-define-fill-in "_Spinnerentry:labelpos" 
  '(description           "Argument 7 of _Spinnerentry (default = left)")
  '(leading               ",")
;;; _Spinnerentry:labelpos
)

(lse-define-fill-in "_Spinnerentry:labelanchor" 
  '(description           "Argument 8 of _Spinnerentry (default = e)")
  '(leading               ",")
;;; _Spinnerentry:labelanchor
)

(lse-define-fill-in "_Spinnerentry:labeljustify" 
  '(description           "Argument 9 of _Spinnerentry (default = None)")
  '(leading               ",")
;;; _Spinnerentry:labeljustify
)

(lse-define-fill-in "_Spinnerentry:default" 
  '(description           "Argument 10 of _Spinnerentry (default = None)")
  '(leading               ",")
;;; _Spinnerentry:default
)

(lse-define-fill-in "_Spinnerentry:state" 
  '(description           "Argument 11 of _Spinnerentry (default = normal)")
  '(leading               ",")
;;; _Spinnerentry:state
)

(lse-define-fill-in "_Spinnerentry:takefocus" 
  '(description           "Argument 12 of _Spinnerentry (default = 1)")
  '(leading               ",")
;;; _Spinnerentry:takefocus
)

(lse-define-fill-in "_Spinnerentry:bindtag" 
  '(description           "Argument 13 of _Spinnerentry (default = None)")
  '(leading               ",")
;;; _Spinnerentry:bindtag
)

(lse-define-fill-in "_Spinnerentry(master,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag)" 
  '(description           "Create a _Spinnerentry object")
  '(token                 "CTK._Spinnerentry")
  '(replacement           "CTK._Spinnerentry («_Spinnerentry:master», ««_Spinnerentry:name»», ««_Spinnerentry:entryname»», ««_Spinnerentry:entryfill»», ««_Spinnerentry:entrypos»», ««_Spinnerentry:label»», ««_Spinnerentry:labelpos»», ««_Spinnerentry:labelanchor»», ««_Spinnerentry:labeljustify»», ««_Spinnerentry:default»», ««_Spinnerentry:state»», ««_Spinnerentry:takefocus»», ««_Spinnerentry:bindtag»»)")
;;; _Spinnerentry(master,name,entryname,entryfill,entrypos,label,labelpos,labelanchor,labeljustify,default,state,takefocus,bindtag)
)

(lse-define-fill-in "_Statusframe:master" 
  '(description           "Argument 1 of _Statusframe")
  '(leading               ",")
;;; _Statusframe:master
)

(lse-define-fill-in "_Statusframe:name" 
  '(description           "Argument 2 of _Statusframe (default = None)")
  '(leading               ",")
;;; _Statusframe:name
)

(lse-define-fill-in "_Statusframe(master,name)" 
  '(description           "Create a _Statusframe object")
  '(token                 "CTK._Statusframe")
  '(replacement           "CTK._Statusframe («_Statusframe:master», ««_Statusframe:name»»)")
;;; _Statusframe(master,name)
)

(lse-define-fill-in "_V_Scrolled_Tuple()" 
  '(description           "Create a _V_Scrolled_Tuple object")
  '(token                 "CTK._V_Scrolled_Tuple")
  '(replacement           "CTK._V_Scrolled_Tuple ()")
;;; _V_Scrolled_Tuple()
)

(lse-define-fill-in "Slide_Show.act:event" 
  '(description           "Argument 1 of Slide_Show.act (default = None)")
  '(leading               ",")
;;; Slide_Show.act:event
)

(lse-define-fill-in "act(event)" 
  '(description           "Execute action related to this page.")
  '(token)
  '(token                 "Slide_Show.act")
  '(replacement           "act (««Slide_Show.act:event»»)")
;;; act(event)
)

(lse-define-fill-in "activate()" 
  '(description           "Activates all buttons of button box.")
  '(token)
  '(token                 "Buttonbox.activate")
  '(token                 "Progress_Gauge.activate")
  '(replacement           "activate ()")
;;; activate()
)

(lse-define-fill-in "Balloon.activate:attachmnt" 
  '(description           "Argument 1 of Balloon.activate")
  '(leading               ",")
;;; Balloon.activate:attachmnt
)

(lse-define-fill-in "Balloon.activate:txt" 
  '(description           "Argument 2 of Balloon.activate")
  '(leading               ",")
;;; Balloon.activate:txt
)

(lse-define-fill-in "Balloon.activate:x" 
  '(description           "Argument 3 of Balloon.activate (default = None)")
  '(leading               ",")
;;; Balloon.activate:x
)

(lse-define-fill-in "Balloon.activate:y" 
  '(description           "Argument 4 of Balloon.activate (default = None)")
  '(leading               ",")
;;; Balloon.activate:y
)

(lse-define-fill-in "Balloon.activate:delay" 
  '(description           "Argument 5 of Balloon.activate (default = None)")
  '(leading               ",")
;;; Balloon.activate:delay
)

(lse-define-fill-in "activate(attachmnt,txt,x,y,delay)" 
  '(token)
  '(token                 "Balloon.activate")
  '(replacement           "activate («Balloon.activate:attachmnt», «Balloon.activate:txt», ««Balloon.activate:x»», ««Balloon.activate:y»», ««Balloon.activate:delay»»)")
;;; activate(attachmnt,txt,x,y,delay)
)

(lse-define-fill-in "Menu.activate:index" 
  '(description           "Argument 1 of Menu.activate")
  '(leading               ",")
;;; Menu.activate:index
)

(lse-define-fill-in "activate(index)" 
  '(token)
  '(token                 "C_Menu.activate")
  '(token                 "Listbox.activate")
  '(token                 "Menu.activate")
  '(token                 "Scrollbar.activate")
  '(replacement           "activate («Menu.activate:index»)")
;;; activate(index)
)

(lse-define-fill-in "Progress_Gauge_T.activate:title" 
  '(description           "Argument 1 of Progress_Gauge_T.activate (default = )")
  '(leading               ",")
;;; Progress_Gauge_T.activate:title
)

(lse-define-fill-in "activate(title)" 
  '(token)
  '(token                 "Progress_Gauge_T.activate")
  '(replacement           "activate (««Progress_Gauge_T.activate:title»»)")
;;; activate(title)
)

(lse-define-fill-in "Buttonbox.add:button_name" 
  '(description           "Add a button with name `button_name'")
  '(leading               ",")
;;; Buttonbox.add:button_name
)

(lse-define-fill-in "Buttonbox.add:before" 
  '(description           "Argument 2 of Buttonbox.add (default = None)")
  '(leading               ",")
;;; Buttonbox.add:before
)

(lse-define-fill-in "Buttonbox.add:columnspan" 
  '(description           "Argument 3 of Buttonbox.add (default = 1)")
  '(leading               ",")
;;; Buttonbox.add:columnspan
)

(lse-define-fill-in "Buttonbox.add:default" 
  '(description           "Argument 4 of Buttonbox.add (default = normal)")
  '(leading               ",")
;;; Buttonbox.add:default
)

(lse-define-fill-in "add(button_name,before,columnspan,default,kw)" 
  '(description           "Add a button with name `button_name'")
  '(token)
  '(token                 "Buttonbox.add")
  '(replacement           "add («Buttonbox.add:button_name», ««Buttonbox.add:before»», ««Buttonbox.add:columnspan»», ««Buttonbox.add:default»», ««py-named-arg»»···)")
;;; add(button_name,before,columnspan,default,kw)
)

(lse-define-fill-in "Entry_Tuple.add:entry" 
  '(description           "Argument 1 of Entry_Tuple.add")
  '(leading               ",")
;;; Entry_Tuple.add:entry
)

(lse-define-fill-in "add(entry)" 
  '(token)
  '(token                 "Combo_Tuple.add")
  '(token                 "Combo_Tuple_X.add")
  '(token                 "Entry_Tuple.add")
  '(token                 "Entrybox.add")
  '(token                 "Multicombobox.add")
  '(token                 "Multicombobox_X.add")
  '(replacement           "add («Entry_Tuple.add:entry»)")
;;; add(entry)
)

(lse-define-fill-in "Entrybox.add:entry" 
  '(description           "Argument 1 of Entrybox.add")
  '(leading               ",")
;;; Entrybox.add:entry
)

(lse-define-fill-in "add(entry,pack_kw)" 
  '(token)
  '(token                 "Entrybox.add")
  '(token                 "Multicombobox.add")
  '(token                 "Multicombobox_X.add")
  '(replacement           "add («Entrybox.add:entry», ««py-named-arg»»···)")
;;; add(entry,pack_kw)
)

(lse-define-fill-in "Menu.add:itemType" 
  '(description           "Argument 1 of Menu.add")
  '(leading               ",")
;;; Menu.add:itemType
)

(lse-define-fill-in "Menu.add:cnf" 
  '(description           "Argument 2 of Menu.add (default = {})")
  '(leading               ",")
;;; Menu.add:cnf
)

(lse-define-fill-in "add(itemType,cnf,kw)" 
  '(token)
  '(token                 "C_Menu.add")
  '(token                 "Menu.add")
  '(replacement           "add («Menu.add:itemType», ««Menu.add:cnf»», ««py-named-arg»»···)")
;;; add(itemType,cnf,kw)
)

(lse-define-fill-in "CTK.add_bindtag:widget" 
  '(description           "Argument 1 of CTK.add_bindtag")
  '(leading               ",")
;;; CTK.add_bindtag:widget
)

(lse-define-fill-in "CTK.add_bindtag:bindtag" 
  '(description           "Argument 2 of CTK.add_bindtag")
  '(leading               ",")
;;; CTK.add_bindtag:bindtag
)

(lse-define-fill-in "CTK.add_bindtag:before" 
  '(description           "Argument 3 of CTK.add_bindtag (default = 0)")
  '(leading               ",")
;;; CTK.add_bindtag:before
)

(lse-define-fill-in "CTK.add_bindtag" 
  '(token)
  '(replacement           "CTK.add_bindtag («CTK.add_bindtag:widget», «CTK.add_bindtag:bindtag», ««CTK.add_bindtag:before»»)")
;;; CTK.add_bindtag
)

(lse-define-fill-in "Menu.add_cascade:cnf" 
  '(description           "Argument 1 of Menu.add_cascade (default = {})")
  '(leading               ",")
;;; Menu.add_cascade:cnf
)

(lse-define-fill-in "add_cascade(cnf,kw)" 
  '(token)
  '(token                 "C_Menu.add_cascade")
  '(token                 "Menu.add_cascade")
  '(replacement           "add_cascade (««Menu.add_cascade:cnf»», ««py-named-arg»»···)")
;;; add_cascade(cnf,kw)
)

(lse-define-fill-in "Menu.add_checkbutton:cnf" 
  '(description           "Argument 1 of Menu.add_checkbutton (default = {})")
  '(leading               ",")
;;; Menu.add_checkbutton:cnf
)

(lse-define-fill-in "add_checkbutton(cnf,kw)" 
  '(token)
  '(token                 "C_Menu.add_checkbutton")
  '(token                 "Menu.add_checkbutton")
  '(replacement           "add_checkbutton (««Menu.add_checkbutton:cnf»», ««py-named-arg»»···)")
;;; add_checkbutton(cnf,kw)
)

(lse-define-fill-in "Menu.add_command:cnf" 
  '(description           "Argument 1 of Menu.add_command (default = {})")
  '(leading               ",")
;;; Menu.add_command:cnf
)

(lse-define-fill-in "add_command(cnf,kw)" 
  '(token)
  '(token                 "C_Menu.add_command")
  '(token                 "Menu.add_command")
  '(replacement           "add_command (««Menu.add_command:cnf»», ««py-named-arg»»···)")
;;; add_command(cnf,kw)
)

(lse-define-fill-in "Combo_Tuple.add_entry:Entry_class" 
  '(description           "Add an entry of type `Entry_class' to `Combo_Tuple'.")
  '(leading               ",")
;;; Combo_Tuple.add_entry:Entry_class
)

(lse-define-fill-in "Combo_Tuple.add_entry:args" 
  '(description           "Argument 2 of Combo_Tuple.add_entry")
  '(leading               ",")
  '(separator             ", ")
;;; Combo_Tuple.add_entry:args
)

(lse-define-fill-in "add_entry(Entry_class,args,kw)" 
  '(description           "Add an entry of type `Entry_class' to `Combo_Tuple'.")
  '(token)
  '(token                 "Combo_Tuple.add_entry")
  '(token                 "Combo_Tuple_X.add_entry")
  '(replacement           "add_entry («Combo_Tuple.add_entry:Entry_class», ««Combo_Tuple.add_entry:args»»···, ««py-named-arg»»···)")
;;; add_entry(Entry_class,args,kw)
)

(lse-define-fill-in "Combo_Tuple.add_listbox:LB_class" 
  '(description           "Add a listbox of type `LB_class' to `Combo_Tuple'.")
  '(leading               ",")
;;; Combo_Tuple.add_listbox:LB_class
)

(lse-define-fill-in "Combo_Tuple.add_listbox:args" 
  '(description           "Argument 2 of Combo_Tuple.add_listbox")
  '(leading               ",")
  '(separator             ", ")
;;; Combo_Tuple.add_listbox:args
)

(lse-define-fill-in "add_listbox(LB_class,args,kw)" 
  '(description           "Add a listbox of type `LB_class' to `Combo_Tuple'.")
  '(token)
  '(token                 "Combo_Tuple.add_listbox")
  '(token                 "Combo_Tuple_X.add_listbox")
  '(replacement           "add_listbox («Combo_Tuple.add_listbox:LB_class», ««Combo_Tuple.add_listbox:args»»···, ««py-named-arg»»···)")
;;; add_listbox(LB_class,args,kw)
)

(lse-define-fill-in "_Listbox_Tuple.add_listbox:w" 
  '(description           "Argument 1 of _Listbox_Tuple.add_listbox")
  '(leading               ",")
;;; _Listbox_Tuple.add_listbox:w
)

(lse-define-fill-in "add_listbox(w)" 
  '(description           "Add a new listbox to `self'.")
  '(token)
  '(token                 "Combo_Tuple.add_listbox")
  '(token                 "Combo_Tuple_X.add_listbox")
  '(token                 "Listbox_Tuple.add_listbox")
  '(token                 "_Listbox_Tuple.add_listbox")
  '(replacement           "add_listbox («_Listbox_Tuple.add_listbox:w»)")
;;; add_listbox(w)
)

(lse-define-fill-in "Menu.add_radiobutton:cnf" 
  '(description           "Argument 1 of Menu.add_radiobutton (default = {})")
  '(leading               ",")
;;; Menu.add_radiobutton:cnf
)

(lse-define-fill-in "add_radiobutton(cnf,kw)" 
  '(token)
  '(token                 "C_Menu.add_radiobutton")
  '(token                 "Menu.add_radiobutton")
  '(replacement           "add_radiobutton (««Menu.add_radiobutton:cnf»», ««py-named-arg»»···)")
;;; add_radiobutton(cnf,kw)
)

(lse-define-fill-in "Menu.add_separator:cnf" 
  '(description           "Argument 1 of Menu.add_separator (default = {})")
  '(leading               ",")
;;; Menu.add_separator:cnf
)

(lse-define-fill-in "add_separator(cnf,kw)" 
  '(token)
  '(token                 "C_Menu.add_separator")
  '(token                 "Menu.add_separator")
  '(replacement           "add_separator (««Menu.add_separator:cnf»», ««py-named-arg»»···)")
;;; add_separator(cnf,kw)
)

(lse-define-fill-in "Slide_Show.add_slide:Widget_Class" 
  '(description
    "Adds a slide to slide_show in front of slide with index `before'"
           "(the new slide is appended if `before' is not specified)."
           "The slide is a widget of type Widget_Class which is created by"
           "`add_slide' with the call:"
               "apply (Widget_Class, (self.hull, ) + args, kw)"
        ""
   )
  '(leading               ",")
;;; Slide_Show.add_slide:Widget_Class
)

(lse-define-fill-in "Slide_Show.add_slide:action" 
  '(description           "Argument 2 of Slide_Show.add_slide (default = None)")
  '(leading               ",")
;;; Slide_Show.add_slide:action
)

(lse-define-fill-in "Slide_Show.add_slide:action_name" 
  '(description           "Argument 3 of Slide_Show.add_slide (default = None)")
  '(leading               ",")
;;; Slide_Show.add_slide:action_name
)

(lse-define-fill-in "Slide_Show.add_slide:before" 
  '(description
    "Adds a slide to slide_show in front of slide with index `before'"
           "(the new slide is appended if `before' is not specified)."
           "The slide is a widget of type Widget_Class which is created by"
           "`add_slide' with the call:"
               "apply (Widget_Class, (self.hull, ) + args, kw)"
         "(default = None)"
   )
  '(leading               ",")
;;; Slide_Show.add_slide:before
)

(lse-define-fill-in "Slide_Show.add_slide:args" 
  '(description
    "Adds a slide to slide_show in front of slide with index `before'"
           "(the new slide is appended if `before' is not specified)."
           "The slide is a widget of type Widget_Class which is created by"
           "`add_slide' with the call:"
               "apply (Widget_Class, (self.hull, ) + args, kw)"
        ""
   )
  '(leading               ",")
  '(separator             ", ")
;;; Slide_Show.add_slide:args
)

(lse-define-fill-in "add_slide(Widget_Class,action,action_name,before,args,kw)" 
  '(description
    "Adds a slide to slide_show in front of slide with index `before'"
           "(the new slide is appended if `before' is not specified)."
           "The slide is a widget of type Widget_Class which is created by"
           "`add_slide' with the call:"
               "apply (Widget_Class, (self.hull, ) + args, kw)"
        ""
   )
  '(token)
  '(token                 "Slide_Show.add_slide")
  '(replacement           "add_slide («Slide_Show.add_slide:Widget_Class», ««Slide_Show.add_slide:action»», ««Slide_Show.add_slide:action_name»», ««Slide_Show.add_slide:before»», ««Slide_Show.add_slide:args»»···, ««py-named-arg»»···)")
;;; add_slide(Widget_Class,action,action_name,before,args,kw)
)

(lse-define-fill-in "Combo_Tuple_X.add_target_entry:Entry_class" 
  '(description           "Add an entry of type `Entry_class' to `self.target'.")
  '(leading               ",")
;;; Combo_Tuple_X.add_target_entry:Entry_class
)

(lse-define-fill-in "Combo_Tuple_X.add_target_entry:args" 
  '(description           "Argument 2 of Combo_Tuple_X.add_target_entry")
  '(leading               ",")
  '(separator             ", ")
;;; Combo_Tuple_X.add_target_entry:args
)

(lse-define-fill-in "add_target_entry(Entry_class,args,kw)" 
  '(description           "Add an entry of type `Entry_class' to `self.target'.")
  '(token)
  '(token                 "Combo_Tuple_X.add_target_entry")
  '(replacement           "add_target_entry («Combo_Tuple_X.add_target_entry:Entry_class», ««Combo_Tuple_X.add_target_entry:args»»···, ««py-named-arg»»···)")
;;; add_target_entry(Entry_class,args,kw)
)

(lse-define-fill-in "_V_Scrolled_Tuple.add_v_scrolled:widgets" 
  '(description           "Adds all `widgets' to set of widgets scrolled as a unit.")
  '(leading               ",")
  '(separator             ", ")
;;; _V_Scrolled_Tuple.add_v_scrolled:widgets
)

(lse-define-fill-in "add_v_scrolled(widgets)" 
  '(description           "Adds all `widgets' to set of widgets scrolled as a unit.")
  '(token)
  '(token                 "Combo_Tuple.add_v_scrolled")
  '(token                 "Combo_Tuple_X.add_v_scrolled")
  '(token                 "Listbox_Tuple.add_v_scrolled")
  '(token                 "_Listbox_Tuple.add_v_scrolled")
  '(token                 "_V_Scrolled_Tuple.add_v_scrolled")
  '(replacement           "add_v_scrolled (««_V_Scrolled_Tuple.add_v_scrolled:widgets»»···)")
;;; add_v_scrolled(widgets)
)

(lse-define-fill-in "Canvas.addtag:args" 
  '(description           "Argument 1 of Canvas.addtag")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.addtag:args
)

(lse-define-fill-in "addtag(args)" 
  '(token)
  '(token                 "Canvas.addtag")
  '(replacement           "addtag (««Canvas.addtag:args»»···)")
;;; addtag(args)
)

(lse-define-fill-in "CanvasItem.addtag:tag" 
  '(description           "Argument 1 of CanvasItem.addtag")
  '(leading               ",")
;;; CanvasItem.addtag:tag
)

(lse-define-fill-in "CanvasItem.addtag:option" 
  '(description           "Argument 2 of CanvasItem.addtag (default = withtag)")
  '(leading               ",")
;;; CanvasItem.addtag:option
)

(lse-define-fill-in "addtag(tag,option)" 
  '(token)
  '(token                 "Arc.addtag")
  '(token                 "Bitmap.addtag")
  '(token                 "CanvasItem.addtag")
  '(token                 "CanvasText.addtag")
  '(token                 "ImageItem.addtag")
  '(token                 "Line.addtag")
  '(token                 "Oval.addtag")
  '(token                 "Polygon.addtag")
  '(token                 "Rectangle.addtag")
  '(token                 "Window.addtag")
  '(replacement           "addtag («CanvasItem.addtag:tag», ««CanvasItem.addtag:option»»)")
;;; addtag(tag,option)
)

(lse-define-fill-in "Canvas.addtag_above:newtag" 
  '(description           "Argument 1 of Canvas.addtag_above")
  '(leading               ",")
;;; Canvas.addtag_above:newtag
)

(lse-define-fill-in "Canvas.addtag_above:tagOrId" 
  '(description           "Argument 2 of Canvas.addtag_above")
  '(leading               ",")
;;; Canvas.addtag_above:tagOrId
)

(lse-define-fill-in "addtag_above(newtag,tagOrId)" 
  '(token)
  '(token                 "Canvas.addtag_above")
  '(replacement           "addtag_above («Canvas.addtag_above:newtag», «Canvas.addtag_above:tagOrId»)")
;;; addtag_above(newtag,tagOrId)
)

(lse-define-fill-in "Group.addtag_above:tagOrId" 
  '(description           "Argument 1 of Group.addtag_above")
  '(leading               ",")
;;; Group.addtag_above:tagOrId
)

(lse-define-fill-in "addtag_above(tagOrId)" 
  '(token)
  '(token                 "Group.addtag_above")
  '(replacement           "addtag_above («Group.addtag_above:tagOrId»)")
;;; addtag_above(tagOrId)
)

(lse-define-fill-in "addtag_all()" 
  '(token)
  '(token                 "Group.addtag_all")
  '(replacement           "addtag_all ()")
;;; addtag_all()
)

(lse-define-fill-in "Canvas.addtag_all:newtag" 
  '(description           "Argument 1 of Canvas.addtag_all")
  '(leading               ",")
;;; Canvas.addtag_all:newtag
)

(lse-define-fill-in "addtag_all(newtag)" 
  '(token)
  '(token                 "Canvas.addtag_all")
  '(replacement           "addtag_all («Canvas.addtag_all:newtag»)")
;;; addtag_all(newtag)
)

(lse-define-fill-in "Canvas.addtag_below:newtag" 
  '(description           "Argument 1 of Canvas.addtag_below")
  '(leading               ",")
;;; Canvas.addtag_below:newtag
)

(lse-define-fill-in "Canvas.addtag_below:tagOrId" 
  '(description           "Argument 2 of Canvas.addtag_below")
  '(leading               ",")
;;; Canvas.addtag_below:tagOrId
)

(lse-define-fill-in "addtag_below(newtag,tagOrId)" 
  '(token)
  '(token                 "Canvas.addtag_below")
  '(replacement           "addtag_below («Canvas.addtag_below:newtag», «Canvas.addtag_below:tagOrId»)")
;;; addtag_below(newtag,tagOrId)
)

(lse-define-fill-in "Group.addtag_below:tagOrId" 
  '(description           "Argument 1 of Group.addtag_below")
  '(leading               ",")
;;; Group.addtag_below:tagOrId
)

(lse-define-fill-in "addtag_below(tagOrId)" 
  '(token)
  '(token                 "Group.addtag_below")
  '(replacement           "addtag_below («Group.addtag_below:tagOrId»)")
;;; addtag_below(tagOrId)
)

(lse-define-fill-in "Canvas.addtag_closest:newtag" 
  '(description           "Argument 1 of Canvas.addtag_closest")
  '(leading               ",")
;;; Canvas.addtag_closest:newtag
)

(lse-define-fill-in "Canvas.addtag_closest:x" 
  '(description           "Argument 2 of Canvas.addtag_closest")
  '(leading               ",")
;;; Canvas.addtag_closest:x
)

(lse-define-fill-in "Canvas.addtag_closest:y" 
  '(description           "Argument 3 of Canvas.addtag_closest")
  '(leading               ",")
;;; Canvas.addtag_closest:y
)

(lse-define-fill-in "Canvas.addtag_closest:halo" 
  '(description           "Argument 4 of Canvas.addtag_closest (default = None)")
  '(leading               ",")
;;; Canvas.addtag_closest:halo
)

(lse-define-fill-in "Canvas.addtag_closest:start" 
  '(description           "Argument 5 of Canvas.addtag_closest (default = None)")
  '(leading               ",")
;;; Canvas.addtag_closest:start
)

(lse-define-fill-in "addtag_closest(newtag,x,y,halo,start)" 
  '(token)
  '(token                 "Canvas.addtag_closest")
  '(replacement           "addtag_closest («Canvas.addtag_closest:newtag», «Canvas.addtag_closest:x», «Canvas.addtag_closest:y», ««Canvas.addtag_closest:halo»», ««Canvas.addtag_closest:start»»)")
;;; addtag_closest(newtag,x,y,halo,start)
)

(lse-define-fill-in "Group.addtag_closest:x" 
  '(description           "Argument 1 of Group.addtag_closest")
  '(leading               ",")
;;; Group.addtag_closest:x
)

(lse-define-fill-in "Group.addtag_closest:y" 
  '(description           "Argument 2 of Group.addtag_closest")
  '(leading               ",")
;;; Group.addtag_closest:y
)

(lse-define-fill-in "Group.addtag_closest:halo" 
  '(description           "Argument 3 of Group.addtag_closest (default = None)")
  '(leading               ",")
;;; Group.addtag_closest:halo
)

(lse-define-fill-in "Group.addtag_closest:start" 
  '(description           "Argument 4 of Group.addtag_closest (default = None)")
  '(leading               ",")
;;; Group.addtag_closest:start
)

(lse-define-fill-in "addtag_closest(x,y,halo,start)" 
  '(token)
  '(token                 "Group.addtag_closest")
  '(replacement           "addtag_closest («Group.addtag_closest:x», «Group.addtag_closest:y», ««Group.addtag_closest:halo»», ««Group.addtag_closest:start»»)")
;;; addtag_closest(x,y,halo,start)
)

(lse-define-fill-in "Canvas.addtag_enclosed:newtag" 
  '(description           "Argument 1 of Canvas.addtag_enclosed")
  '(leading               ",")
;;; Canvas.addtag_enclosed:newtag
)

(lse-define-fill-in "Canvas.addtag_enclosed:x1" 
  '(description           "Argument 2 of Canvas.addtag_enclosed")
  '(leading               ",")
;;; Canvas.addtag_enclosed:x1
)

(lse-define-fill-in "Canvas.addtag_enclosed:y1" 
  '(description           "Argument 3 of Canvas.addtag_enclosed")
  '(leading               ",")
;;; Canvas.addtag_enclosed:y1
)

(lse-define-fill-in "Canvas.addtag_enclosed:x2" 
  '(description           "Argument 4 of Canvas.addtag_enclosed")
  '(leading               ",")
;;; Canvas.addtag_enclosed:x2
)

(lse-define-fill-in "Canvas.addtag_enclosed:y2" 
  '(description           "Argument 5 of Canvas.addtag_enclosed")
  '(leading               ",")
;;; Canvas.addtag_enclosed:y2
)

(lse-define-fill-in "addtag_enclosed(newtag,x1,y1,x2,y2)" 
  '(token)
  '(token                 "Canvas.addtag_enclosed")
  '(replacement           "addtag_enclosed («Canvas.addtag_enclosed:newtag», «Canvas.addtag_enclosed:x1», «Canvas.addtag_enclosed:y1», «Canvas.addtag_enclosed:x2», «Canvas.addtag_enclosed:y2»)")
;;; addtag_enclosed(newtag,x1,y1,x2,y2)
)

(lse-define-fill-in "Group.addtag_enclosed:x1" 
  '(description           "Argument 1 of Group.addtag_enclosed")
  '(leading               ",")
;;; Group.addtag_enclosed:x1
)

(lse-define-fill-in "Group.addtag_enclosed:y1" 
  '(description           "Argument 2 of Group.addtag_enclosed")
  '(leading               ",")
;;; Group.addtag_enclosed:y1
)

(lse-define-fill-in "Group.addtag_enclosed:x2" 
  '(description           "Argument 3 of Group.addtag_enclosed")
  '(leading               ",")
;;; Group.addtag_enclosed:x2
)

(lse-define-fill-in "Group.addtag_enclosed:y2" 
  '(description           "Argument 4 of Group.addtag_enclosed")
  '(leading               ",")
;;; Group.addtag_enclosed:y2
)

(lse-define-fill-in "addtag_enclosed(x1,y1,x2,y2)" 
  '(token)
  '(token                 "Group.addtag_enclosed")
  '(replacement           "addtag_enclosed («Group.addtag_enclosed:x1», «Group.addtag_enclosed:y1», «Group.addtag_enclosed:x2», «Group.addtag_enclosed:y2»)")
;;; addtag_enclosed(x1,y1,x2,y2)
)

(lse-define-fill-in "Canvas.addtag_overlapping:newtag" 
  '(description           "Argument 1 of Canvas.addtag_overlapping")
  '(leading               ",")
;;; Canvas.addtag_overlapping:newtag
)

(lse-define-fill-in "Canvas.addtag_overlapping:x1" 
  '(description           "Argument 2 of Canvas.addtag_overlapping")
  '(leading               ",")
;;; Canvas.addtag_overlapping:x1
)

(lse-define-fill-in "Canvas.addtag_overlapping:y1" 
  '(description           "Argument 3 of Canvas.addtag_overlapping")
  '(leading               ",")
;;; Canvas.addtag_overlapping:y1
)

(lse-define-fill-in "Canvas.addtag_overlapping:x2" 
  '(description           "Argument 4 of Canvas.addtag_overlapping")
  '(leading               ",")
;;; Canvas.addtag_overlapping:x2
)

(lse-define-fill-in "Canvas.addtag_overlapping:y2" 
  '(description           "Argument 5 of Canvas.addtag_overlapping")
  '(leading               ",")
;;; Canvas.addtag_overlapping:y2
)

(lse-define-fill-in "addtag_overlapping(newtag,x1,y1,x2,y2)" 
  '(token)
  '(token                 "Canvas.addtag_overlapping")
  '(replacement           "addtag_overlapping («Canvas.addtag_overlapping:newtag», «Canvas.addtag_overlapping:x1», «Canvas.addtag_overlapping:y1», «Canvas.addtag_overlapping:x2», «Canvas.addtag_overlapping:y2»)")
;;; addtag_overlapping(newtag,x1,y1,x2,y2)
)

(lse-define-fill-in "Group.addtag_overlapping:x1" 
  '(description           "Argument 1 of Group.addtag_overlapping")
  '(leading               ",")
;;; Group.addtag_overlapping:x1
)

(lse-define-fill-in "Group.addtag_overlapping:y1" 
  '(description           "Argument 2 of Group.addtag_overlapping")
  '(leading               ",")
;;; Group.addtag_overlapping:y1
)

(lse-define-fill-in "Group.addtag_overlapping:x2" 
  '(description           "Argument 3 of Group.addtag_overlapping")
  '(leading               ",")
;;; Group.addtag_overlapping:x2
)

(lse-define-fill-in "Group.addtag_overlapping:y2" 
  '(description           "Argument 4 of Group.addtag_overlapping")
  '(leading               ",")
;;; Group.addtag_overlapping:y2
)

(lse-define-fill-in "addtag_overlapping(x1,y1,x2,y2)" 
  '(token)
  '(token                 "Group.addtag_overlapping")
  '(replacement           "addtag_overlapping («Group.addtag_overlapping:x1», «Group.addtag_overlapping:y1», «Group.addtag_overlapping:x2», «Group.addtag_overlapping:y2»)")
;;; addtag_overlapping(x1,y1,x2,y2)
)

(lse-define-fill-in "Canvas.addtag_withtag:newtag" 
  '(description           "Argument 1 of Canvas.addtag_withtag")
  '(leading               ",")
;;; Canvas.addtag_withtag:newtag
)

(lse-define-fill-in "Canvas.addtag_withtag:tagOrId" 
  '(description           "Argument 2 of Canvas.addtag_withtag")
  '(leading               ",")
;;; Canvas.addtag_withtag:tagOrId
)

(lse-define-fill-in "addtag_withtag(newtag,tagOrId)" 
  '(token)
  '(token                 "Canvas.addtag_withtag")
  '(replacement           "addtag_withtag («Canvas.addtag_withtag:newtag», «Canvas.addtag_withtag:tagOrId»)")
;;; addtag_withtag(newtag,tagOrId)
)

(lse-define-fill-in "Group.addtag_withtag:tagOrId" 
  '(description           "Argument 1 of Group.addtag_withtag")
  '(leading               ",")
;;; Group.addtag_withtag:tagOrId
)

(lse-define-fill-in "addtag_withtag(tagOrId)" 
  '(token)
  '(token                 "Group.addtag_withtag")
  '(replacement           "addtag_withtag («Group.addtag_withtag:tagOrId»)")
;;; addtag_withtag(tagOrId)
)

(lse-define-fill-in "Misc.after:ms" 
  '(description           "Argument 1 of Misc.after")
  '(leading               ",")
;;; Misc.after:ms
)

(lse-define-fill-in "Misc.after:func" 
  '(description           "Argument 2 of Misc.after (default = None)")
  '(leading               ",")
;;; Misc.after:func
)

(lse-define-fill-in "Misc.after:args" 
  '(description           "Argument 3 of Misc.after")
  '(leading               ",")
  '(separator             ", ")
;;; Misc.after:args
)

(lse-define-fill-in "after(ms,func,args)" 
  '(token)
  '(token                 "Balloon.after")
  '(token                 "BaseWidget.after")
  '(token                 "Button.after")
  '(token                 "Buttonbox.after")
  '(token                 "C_Entry.after")
  '(token                 "C_Frame.after")
  '(token                 "C_Listbox.after")
  '(token                 "C_Menu.after")
  '(token                 "C_Text.after")
  '(token                 "Canvas.after")
  '(token                 "Checkbutton.after")
  '(token                 "Combo_Tuple.after")
  '(token                 "Combo_Tuple_X.after")
  '(token                 "Combobox.after")
  '(token                 "Entry.after")
  '(token                 "Entrybox.after")
  '(token                 "Filename_Entry.after")
  '(token                 "Frame.after")
  '(token                 "H_Panedwindow.after")
  '(token                 "H_Panedwindow.V_Separator.after")
  '(token                 "H_Scrollable.after")
  '(token                 "H_Separator.after")
  '(token                 "H_Strut.after")
  '(token                 "Label.after")
  '(token                 "Listbox.after")
  '(token                 "Listbox_Tuple.after")
  '(token                 "Listdropentry.after")
  '(token                 "Listdropspinner.after")
  '(token                 "Listspinner.after")
  '(token                 "Menu.after")
  '(token                 "Menubutton.after")
  '(token                 "Message.after")
  '(token                 "Message_Window.after")
  '(token                 "Misc.after")
  '(token                 "Multicombobox.after")
  '(token                 "Multicombobox_X.after")
  '(token                 "Notebook.after")
  '(token                 "Num_Spinner.after")
  '(token                 "OptionMenu.after")
  '(token                 "Progress_Gauge.after")
  '(token                 "Progress_Gauge_T.after")
  '(token                 "Radiobutton.after")
  '(token                 "Scale.after")
  '(token                 "Scrollbar.after")
  '(token                 "Scrolled_Listbox.after")
  '(token                 "Scrolled_Text.after")
  '(token                 "Slide_Show.after")
  '(token                 "Statuslabel.after")
  '(token                 "Statuslabel.Label.after")
  '(token                 "Statustext.after")
  '(token                 "Statustext.Text.after")
  '(token                 "Studbutton.after")
  '(token                 "Tabbed_Notebook.after")
  '(token                 "Text.after")
  '(token                 "Tk.after")
  '(token                 "Toplevel.after")
  '(token                 "Tributton.after")
  '(token                 "Up_Down_Button.after")
  '(token                 "V_Panedwindow.after")
  '(token                 "V_Panedwindow.H_Separator.after")
  '(token                 "V_Scrollable.after")
  '(token                 "V_Separator.after")
  '(token                 "V_Strut.after")
  '(token                 "Widget.after")
  '(token                 "_C_Frame.after")
  '(token                 "_Combobox.Scrolled_Listbox.after")
  '(token                 "_Panedwindow.after")
  '(token                 "_Scrollable.after")
  '(token                 "_Separator.after")
  '(token                 "_Spinnerentry.after")
  '(token                 "_Statusframe.after")
  '(replacement           "after («Misc.after:ms», ««Misc.after:func»», ««Misc.after:args»»···)")
;;; after(ms,func,args)
)

(lse-define-fill-in "Misc.after_cancel:id" 
  '(description           "Argument 1 of Misc.after_cancel")
  '(leading               ",")
;;; Misc.after_cancel:id
)

(lse-define-fill-in "after_cancel(id)" 
  '(token)
  '(token                 "Balloon.after_cancel")
  '(token                 "BaseWidget.after_cancel")
  '(token                 "Button.after_cancel")
  '(token                 "Buttonbox.after_cancel")
  '(token                 "C_Entry.after_cancel")
  '(token                 "C_Frame.after_cancel")
  '(token                 "C_Listbox.after_cancel")
  '(token                 "C_Menu.after_cancel")
  '(token                 "C_Text.after_cancel")
  '(token                 "Canvas.after_cancel")
  '(token                 "Checkbutton.after_cancel")
  '(token                 "Combo_Tuple.after_cancel")
  '(token                 "Combo_Tuple_X.after_cancel")
  '(token                 "Combobox.after_cancel")
  '(token                 "Entry.after_cancel")
  '(token                 "Entrybox.after_cancel")
  '(token                 "Filename_Entry.after_cancel")
  '(token                 "Frame.after_cancel")
  '(token                 "H_Panedwindow.after_cancel")
  '(token                 "H_Panedwindow.V_Separator.after_cancel")
  '(token                 "H_Scrollable.after_cancel")
  '(token                 "H_Separator.after_cancel")
  '(token                 "H_Strut.after_cancel")
  '(token                 "Label.after_cancel")
  '(token                 "Listbox.after_cancel")
  '(token                 "Listbox_Tuple.after_cancel")
  '(token                 "Listdropentry.after_cancel")
  '(token                 "Listdropspinner.after_cancel")
  '(token                 "Listspinner.after_cancel")
  '(token                 "Menu.after_cancel")
  '(token                 "Menubutton.after_cancel")
  '(token                 "Message.after_cancel")
  '(token                 "Message_Window.after_cancel")
  '(token                 "Misc.after_cancel")
  '(token                 "Multicombobox.after_cancel")
  '(token                 "Multicombobox_X.after_cancel")
  '(token                 "Notebook.after_cancel")
  '(token                 "Num_Spinner.after_cancel")
  '(token                 "OptionMenu.after_cancel")
  '(token                 "Progress_Gauge.after_cancel")
  '(token                 "Progress_Gauge_T.after_cancel")
  '(token                 "Radiobutton.after_cancel")
  '(token                 "Scale.after_cancel")
  '(token                 "Scrollbar.after_cancel")
  '(token                 "Scrolled_Listbox.after_cancel")
  '(token                 "Scrolled_Text.after_cancel")
  '(token                 "Slide_Show.after_cancel")
  '(token                 "Statuslabel.after_cancel")
  '(token                 "Statuslabel.Label.after_cancel")
  '(token                 "Statustext.after_cancel")
  '(token                 "Statustext.Text.after_cancel")
  '(token                 "Studbutton.after_cancel")
  '(token                 "Tabbed_Notebook.after_cancel")
  '(token                 "Text.after_cancel")
  '(token                 "Tk.after_cancel")
  '(token                 "Toplevel.after_cancel")
  '(token                 "Tributton.after_cancel")
  '(token                 "Up_Down_Button.after_cancel")
  '(token                 "V_Panedwindow.after_cancel")
  '(token                 "V_Panedwindow.H_Separator.after_cancel")
  '(token                 "V_Scrollable.after_cancel")
  '(token                 "V_Separator.after_cancel")
  '(token                 "V_Strut.after_cancel")
  '(token                 "Widget.after_cancel")
  '(token                 "_C_Frame.after_cancel")
  '(token                 "_Combobox.Scrolled_Listbox.after_cancel")
  '(token                 "_Panedwindow.after_cancel")
  '(token                 "_Scrollable.after_cancel")
  '(token                 "_Separator.after_cancel")
  '(token                 "_Spinnerentry.after_cancel")
  '(token                 "_Statusframe.after_cancel")
  '(replacement           "after_cancel («Misc.after_cancel:id»)")
;;; after_cancel(id)
)

(lse-define-fill-in "Misc.after_idle:func" 
  '(description           "Argument 1 of Misc.after_idle")
  '(leading               ",")
;;; Misc.after_idle:func
)

(lse-define-fill-in "Misc.after_idle:args" 
  '(description           "Argument 2 of Misc.after_idle")
  '(leading               ",")
  '(separator             ", ")
;;; Misc.after_idle:args
)

(lse-define-fill-in "after_idle(func,args)" 
  '(token)
  '(token                 "Balloon.after_idle")
  '(token                 "BaseWidget.after_idle")
  '(token                 "Button.after_idle")
  '(token                 "Buttonbox.after_idle")
  '(token                 "C_Entry.after_idle")
  '(token                 "C_Frame.after_idle")
  '(token                 "C_Listbox.after_idle")
  '(token                 "C_Menu.after_idle")
  '(token                 "C_Text.after_idle")
  '(token                 "Canvas.after_idle")
  '(token                 "Checkbutton.after_idle")
  '(token                 "Combo_Tuple.after_idle")
  '(token                 "Combo_Tuple_X.after_idle")
  '(token                 "Combobox.after_idle")
  '(token                 "Entry.after_idle")
  '(token                 "Entrybox.after_idle")
  '(token                 "Filename_Entry.after_idle")
  '(token                 "Frame.after_idle")
  '(token                 "H_Panedwindow.after_idle")
  '(token                 "H_Panedwindow.V_Separator.after_idle")
  '(token                 "H_Scrollable.after_idle")
  '(token                 "H_Separator.after_idle")
  '(token                 "H_Strut.after_idle")
  '(token                 "Label.after_idle")
  '(token                 "Listbox.after_idle")
  '(token                 "Listbox_Tuple.after_idle")
  '(token                 "Listdropentry.after_idle")
  '(token                 "Listdropspinner.after_idle")
  '(token                 "Listspinner.after_idle")
  '(token                 "Menu.after_idle")
  '(token                 "Menubutton.after_idle")
  '(token                 "Message.after_idle")
  '(token                 "Message_Window.after_idle")
  '(token                 "Misc.after_idle")
  '(token                 "Multicombobox.after_idle")
  '(token                 "Multicombobox_X.after_idle")
  '(token                 "Notebook.after_idle")
  '(token                 "Num_Spinner.after_idle")
  '(token                 "OptionMenu.after_idle")
  '(token                 "Progress_Gauge.after_idle")
  '(token                 "Progress_Gauge_T.after_idle")
  '(token                 "Radiobutton.after_idle")
  '(token                 "Scale.after_idle")
  '(token                 "Scrollbar.after_idle")
  '(token                 "Scrolled_Listbox.after_idle")
  '(token                 "Scrolled_Text.after_idle")
  '(token                 "Slide_Show.after_idle")
  '(token                 "Statuslabel.after_idle")
  '(token                 "Statuslabel.Label.after_idle")
  '(token                 "Statustext.after_idle")
  '(token                 "Statustext.Text.after_idle")
  '(token                 "Studbutton.after_idle")
  '(token                 "Tabbed_Notebook.after_idle")
  '(token                 "Text.after_idle")
  '(token                 "Tk.after_idle")
  '(token                 "Toplevel.after_idle")
  '(token                 "Tributton.after_idle")
  '(token                 "Up_Down_Button.after_idle")
  '(token                 "V_Panedwindow.after_idle")
  '(token                 "V_Panedwindow.H_Separator.after_idle")
  '(token                 "V_Scrollable.after_idle")
  '(token                 "V_Separator.after_idle")
  '(token                 "V_Strut.after_idle")
  '(token                 "Widget.after_idle")
  '(token                 "_C_Frame.after_idle")
  '(token                 "_Combobox.Scrolled_Listbox.after_idle")
  '(token                 "_Panedwindow.after_idle")
  '(token                 "_Scrollable.after_idle")
  '(token                 "_Separator.after_idle")
  '(token                 "_Spinnerentry.after_idle")
  '(token                 "_Statusframe.after_idle")
  '(replacement           "after_idle («Misc.after_idle:func», ««Misc.after_idle:args»»···)")
;;; after_idle(func,args)
)

(lse-define-fill-in "CT_TK_mixin.ask_ok_cancel:args" 
  '(description           "Argument 1 of CT_TK_mixin.ask_ok_cancel")
  '(leading               ",")
  '(separator             ", ")
;;; CT_TK_mixin.ask_ok_cancel:args
)

(lse-define-fill-in "ask_ok_cancel(args,kw)" 
  '(description           "Display a confirmation window (ok/cancel) using `tk_messageBox'.")
  '(token)
  '(token                 "Balloon.ask_ok_cancel")
  '(token                 "Buttonbox.ask_ok_cancel")
  '(token                 "CT_TK_mixin.ask_ok_cancel")
  '(token                 "C_Entry.ask_ok_cancel")
  '(token                 "C_Frame.ask_ok_cancel")
  '(token                 "C_Listbox.ask_ok_cancel")
  '(token                 "C_Menu.ask_ok_cancel")
  '(token                 "C_Text.ask_ok_cancel")
  '(token                 "Combo_Tuple.ask_ok_cancel")
  '(token                 "Combo_Tuple_X.ask_ok_cancel")
  '(token                 "Combobox.ask_ok_cancel")
  '(token                 "Entrybox.ask_ok_cancel")
  '(token                 "Filename_Entry.ask_ok_cancel")
  '(token                 "H_Panedwindow.ask_ok_cancel")
  '(token                 "H_Panedwindow.V_Separator.ask_ok_cancel")
  '(token                 "H_Scrollable.ask_ok_cancel")
  '(token                 "H_Separator.ask_ok_cancel")
  '(token                 "H_Strut.ask_ok_cancel")
  '(token                 "Listbox_Tuple.ask_ok_cancel")
  '(token                 "Listdropentry.ask_ok_cancel")
  '(token                 "Listdropspinner.ask_ok_cancel")
  '(token                 "Listspinner.ask_ok_cancel")
  '(token                 "Message_Window.ask_ok_cancel")
  '(token                 "Multicombobox.ask_ok_cancel")
  '(token                 "Multicombobox_X.ask_ok_cancel")
  '(token                 "Notebook.ask_ok_cancel")
  '(token                 "Num_Spinner.ask_ok_cancel")
  '(token                 "Progress_Gauge.ask_ok_cancel")
  '(token                 "Progress_Gauge_T.ask_ok_cancel")
  '(token                 "Scrolled_Listbox.ask_ok_cancel")
  '(token                 "Scrolled_Text.ask_ok_cancel")
  '(token                 "Slide_Show.ask_ok_cancel")
  '(token                 "Statuslabel.ask_ok_cancel")
  '(token                 "Statustext.ask_ok_cancel")
  '(token                 "Tabbed_Notebook.ask_ok_cancel")
  '(token                 "Up_Down_Button.ask_ok_cancel")
  '(token                 "V_Panedwindow.ask_ok_cancel")
  '(token                 "V_Panedwindow.H_Separator.ask_ok_cancel")
  '(token                 "V_Scrollable.ask_ok_cancel")
  '(token                 "V_Separator.ask_ok_cancel")
  '(token                 "V_Strut.ask_ok_cancel")
  '(token                 "_C_Frame.ask_ok_cancel")
  '(token                 "_Combobox.ask_ok_cancel")
  '(token                 "_Combobox.Scrolled_Listbox.ask_ok_cancel")
  '(token                 "_Listdrop.ask_ok_cancel")
  '(token                 "_Listspinner.ask_ok_cancel")
  '(token                 "_Panedwindow.ask_ok_cancel")
  '(token                 "_Scrollable.ask_ok_cancel")
  '(token                 "_Separator.ask_ok_cancel")
  '(token                 "_Spinner.ask_ok_cancel")
  '(token                 "_Spinnerentry.ask_ok_cancel")
  '(token                 "_Statusframe.ask_ok_cancel")
  '(replacement           "ask_ok_cancel (««CT_TK_mixin.ask_ok_cancel:args»»···, ««py-named-arg»»···)")
;;; ask_ok_cancel(args,kw)
)

(lse-define-fill-in "CT_TK_mixin.ask_open_file_name:args" 
  '(description           "Argument 1 of CT_TK_mixin.ask_open_file_name")
  '(leading               ",")
  '(separator             ", ")
;;; CT_TK_mixin.ask_open_file_name:args
)

(lse-define-fill-in "ask_open_file_name(args,kw)" 
  '(token)
  '(token                 "Balloon.ask_open_file_name")
  '(token                 "Buttonbox.ask_open_file_name")
  '(token                 "CT_TK_mixin.ask_open_file_name")
  '(token                 "C_Entry.ask_open_file_name")
  '(token                 "C_Frame.ask_open_file_name")
  '(token                 "C_Listbox.ask_open_file_name")
  '(token                 "C_Menu.ask_open_file_name")
  '(token                 "C_Text.ask_open_file_name")
  '(token                 "Combo_Tuple.ask_open_file_name")
  '(token                 "Combo_Tuple_X.ask_open_file_name")
  '(token                 "Combobox.ask_open_file_name")
  '(token                 "Entrybox.ask_open_file_name")
  '(token                 "Filename_Entry.ask_open_file_name")
  '(token                 "H_Panedwindow.ask_open_file_name")
  '(token                 "H_Panedwindow.V_Separator.ask_open_file_name")
  '(token                 "H_Scrollable.ask_open_file_name")
  '(token                 "H_Separator.ask_open_file_name")
  '(token                 "H_Strut.ask_open_file_name")
  '(token                 "Listbox_Tuple.ask_open_file_name")
  '(token                 "Listdropentry.ask_open_file_name")
  '(token                 "Listdropspinner.ask_open_file_name")
  '(token                 "Listspinner.ask_open_file_name")
  '(token                 "Message_Window.ask_open_file_name")
  '(token                 "Multicombobox.ask_open_file_name")
  '(token                 "Multicombobox_X.ask_open_file_name")
  '(token                 "Notebook.ask_open_file_name")
  '(token                 "Num_Spinner.ask_open_file_name")
  '(token                 "Progress_Gauge.ask_open_file_name")
  '(token                 "Progress_Gauge_T.ask_open_file_name")
  '(token                 "Scrolled_Listbox.ask_open_file_name")
  '(token                 "Scrolled_Text.ask_open_file_name")
  '(token                 "Slide_Show.ask_open_file_name")
  '(token                 "Statuslabel.ask_open_file_name")
  '(token                 "Statustext.ask_open_file_name")
  '(token                 "Tabbed_Notebook.ask_open_file_name")
  '(token                 "Up_Down_Button.ask_open_file_name")
  '(token                 "V_Panedwindow.ask_open_file_name")
  '(token                 "V_Panedwindow.H_Separator.ask_open_file_name")
  '(token                 "V_Scrollable.ask_open_file_name")
  '(token                 "V_Separator.ask_open_file_name")
  '(token                 "V_Strut.ask_open_file_name")
  '(token                 "_C_Frame.ask_open_file_name")
  '(token                 "_Combobox.ask_open_file_name")
  '(token                 "_Combobox.Scrolled_Listbox.ask_open_file_name")
  '(token                 "_Listdrop.ask_open_file_name")
  '(token                 "_Listspinner.ask_open_file_name")
  '(token                 "_Panedwindow.ask_open_file_name")
  '(token                 "_Scrollable.ask_open_file_name")
  '(token                 "_Separator.ask_open_file_name")
  '(token                 "_Spinner.ask_open_file_name")
  '(token                 "_Spinnerentry.ask_open_file_name")
  '(token                 "_Statusframe.ask_open_file_name")
  '(replacement           "ask_open_file_name (««CT_TK_mixin.ask_open_file_name:args»»···, ««py-named-arg»»···)")
;;; ask_open_file_name(args,kw)
)

(lse-define-fill-in "CT_TK_mixin.ask_question:args" 
  '(description           "Argument 1 of CT_TK_mixin.ask_question")
  '(leading               ",")
  '(separator             ", ")
;;; CT_TK_mixin.ask_question:args
)

(lse-define-fill-in "ask_question(args,kw)" 
  '(description           "Display a confirmation window (yes/no) using `tk_messageBox'.")
  '(token)
  '(token                 "Balloon.ask_question")
  '(token                 "Buttonbox.ask_question")
  '(token                 "CT_TK_mixin.ask_question")
  '(token                 "C_Entry.ask_question")
  '(token                 "C_Frame.ask_question")
  '(token                 "C_Listbox.ask_question")
  '(token                 "C_Menu.ask_question")
  '(token                 "C_Text.ask_question")
  '(token                 "Combo_Tuple.ask_question")
  '(token                 "Combo_Tuple_X.ask_question")
  '(token                 "Combobox.ask_question")
  '(token                 "Entrybox.ask_question")
  '(token                 "Filename_Entry.ask_question")
  '(token                 "H_Panedwindow.ask_question")
  '(token                 "H_Panedwindow.V_Separator.ask_question")
  '(token                 "H_Scrollable.ask_question")
  '(token                 "H_Separator.ask_question")
  '(token                 "H_Strut.ask_question")
  '(token                 "Listbox_Tuple.ask_question")
  '(token                 "Listdropentry.ask_question")
  '(token                 "Listdropspinner.ask_question")
  '(token                 "Listspinner.ask_question")
  '(token                 "Message_Window.ask_question")
  '(token                 "Multicombobox.ask_question")
  '(token                 "Multicombobox_X.ask_question")
  '(token                 "Notebook.ask_question")
  '(token                 "Num_Spinner.ask_question")
  '(token                 "Progress_Gauge.ask_question")
  '(token                 "Progress_Gauge_T.ask_question")
  '(token                 "Scrolled_Listbox.ask_question")
  '(token                 "Scrolled_Text.ask_question")
  '(token                 "Slide_Show.ask_question")
  '(token                 "Statuslabel.ask_question")
  '(token                 "Statustext.ask_question")
  '(token                 "Tabbed_Notebook.ask_question")
  '(token                 "Up_Down_Button.ask_question")
  '(token                 "V_Panedwindow.ask_question")
  '(token                 "V_Panedwindow.H_Separator.ask_question")
  '(token                 "V_Scrollable.ask_question")
  '(token                 "V_Separator.ask_question")
  '(token                 "V_Strut.ask_question")
  '(token                 "_C_Frame.ask_question")
  '(token                 "_Combobox.ask_question")
  '(token                 "_Combobox.Scrolled_Listbox.ask_question")
  '(token                 "_Listdrop.ask_question")
  '(token                 "_Listspinner.ask_question")
  '(token                 "_Panedwindow.ask_question")
  '(token                 "_Scrollable.ask_question")
  '(token                 "_Separator.ask_question")
  '(token                 "_Spinner.ask_question")
  '(token                 "_Spinnerentry.ask_question")
  '(token                 "_Statusframe.ask_question")
  '(replacement           "ask_question (««CT_TK_mixin.ask_question:args»»···, ««py-named-arg»»···)")
;;; ask_question(args,kw)
)

(lse-define-fill-in "CT_TK_mixin.ask_retry_cancel:args" 
  '(description           "Argument 1 of CT_TK_mixin.ask_retry_cancel")
  '(leading               ",")
  '(separator             ", ")
;;; CT_TK_mixin.ask_retry_cancel:args
)

(lse-define-fill-in "ask_retry_cancel(args,kw)" 
  '(description           "Display a confirmation window (retry/cancel) using `tk_messageBox'.")
  '(token)
  '(token                 "Balloon.ask_retry_cancel")
  '(token                 "Buttonbox.ask_retry_cancel")
  '(token                 "CT_TK_mixin.ask_retry_cancel")
  '(token                 "C_Entry.ask_retry_cancel")
  '(token                 "C_Frame.ask_retry_cancel")
  '(token                 "C_Listbox.ask_retry_cancel")
  '(token                 "C_Menu.ask_retry_cancel")
  '(token                 "C_Text.ask_retry_cancel")
  '(token                 "Combo_Tuple.ask_retry_cancel")
  '(token                 "Combo_Tuple_X.ask_retry_cancel")
  '(token                 "Combobox.ask_retry_cancel")
  '(token                 "Entrybox.ask_retry_cancel")
  '(token                 "Filename_Entry.ask_retry_cancel")
  '(token                 "H_Panedwindow.ask_retry_cancel")
  '(token                 "H_Panedwindow.V_Separator.ask_retry_cancel")
  '(token                 "H_Scrollable.ask_retry_cancel")
  '(token                 "H_Separator.ask_retry_cancel")
  '(token                 "H_Strut.ask_retry_cancel")
  '(token                 "Listbox_Tuple.ask_retry_cancel")
  '(token                 "Listdropentry.ask_retry_cancel")
  '(token                 "Listdropspinner.ask_retry_cancel")
  '(token                 "Listspinner.ask_retry_cancel")
  '(token                 "Message_Window.ask_retry_cancel")
  '(token                 "Multicombobox.ask_retry_cancel")
  '(token                 "Multicombobox_X.ask_retry_cancel")
  '(token                 "Notebook.ask_retry_cancel")
  '(token                 "Num_Spinner.ask_retry_cancel")
  '(token                 "Progress_Gauge.ask_retry_cancel")
  '(token                 "Progress_Gauge_T.ask_retry_cancel")
  '(token                 "Scrolled_Listbox.ask_retry_cancel")
  '(token                 "Scrolled_Text.ask_retry_cancel")
  '(token                 "Slide_Show.ask_retry_cancel")
  '(token                 "Statuslabel.ask_retry_cancel")
  '(token                 "Statustext.ask_retry_cancel")
  '(token                 "Tabbed_Notebook.ask_retry_cancel")
  '(token                 "Up_Down_Button.ask_retry_cancel")
  '(token                 "V_Panedwindow.ask_retry_cancel")
  '(token                 "V_Panedwindow.H_Separator.ask_retry_cancel")
  '(token                 "V_Scrollable.ask_retry_cancel")
  '(token                 "V_Separator.ask_retry_cancel")
  '(token                 "V_Strut.ask_retry_cancel")
  '(token                 "_C_Frame.ask_retry_cancel")
  '(token                 "_Combobox.ask_retry_cancel")
  '(token                 "_Combobox.Scrolled_Listbox.ask_retry_cancel")
  '(token                 "_Listdrop.ask_retry_cancel")
  '(token                 "_Listspinner.ask_retry_cancel")
  '(token                 "_Panedwindow.ask_retry_cancel")
  '(token                 "_Scrollable.ask_retry_cancel")
  '(token                 "_Separator.ask_retry_cancel")
  '(token                 "_Spinner.ask_retry_cancel")
  '(token                 "_Spinnerentry.ask_retry_cancel")
  '(token                 "_Statusframe.ask_retry_cancel")
  '(replacement           "ask_retry_cancel (««CT_TK_mixin.ask_retry_cancel:args»»···, ««py-named-arg»»···)")
;;; ask_retry_cancel(args,kw)
)

(lse-define-fill-in "CT_TK_mixin.ask_save_file_name:args" 
  '(description           "Argument 1 of CT_TK_mixin.ask_save_file_name")
  '(leading               ",")
  '(separator             ", ")
;;; CT_TK_mixin.ask_save_file_name:args
)

(lse-define-fill-in "ask_save_file_name(args,kw)" 
  '(token)
  '(token                 "Balloon.ask_save_file_name")
  '(token                 "Buttonbox.ask_save_file_name")
  '(token                 "CT_TK_mixin.ask_save_file_name")
  '(token                 "C_Entry.ask_save_file_name")
  '(token                 "C_Frame.ask_save_file_name")
  '(token                 "C_Listbox.ask_save_file_name")
  '(token                 "C_Menu.ask_save_file_name")
  '(token                 "C_Text.ask_save_file_name")
  '(token                 "Combo_Tuple.ask_save_file_name")
  '(token                 "Combo_Tuple_X.ask_save_file_name")
  '(token                 "Combobox.ask_save_file_name")
  '(token                 "Entrybox.ask_save_file_name")
  '(token                 "Filename_Entry.ask_save_file_name")
  '(token                 "H_Panedwindow.ask_save_file_name")
  '(token                 "H_Panedwindow.V_Separator.ask_save_file_name")
  '(token                 "H_Scrollable.ask_save_file_name")
  '(token                 "H_Separator.ask_save_file_name")
  '(token                 "H_Strut.ask_save_file_name")
  '(token                 "Listbox_Tuple.ask_save_file_name")
  '(token                 "Listdropentry.ask_save_file_name")
  '(token                 "Listdropspinner.ask_save_file_name")
  '(token                 "Listspinner.ask_save_file_name")
  '(token                 "Message_Window.ask_save_file_name")
  '(token                 "Multicombobox.ask_save_file_name")
  '(token                 "Multicombobox_X.ask_save_file_name")
  '(token                 "Notebook.ask_save_file_name")
  '(token                 "Num_Spinner.ask_save_file_name")
  '(token                 "Progress_Gauge.ask_save_file_name")
  '(token                 "Progress_Gauge_T.ask_save_file_name")
  '(token                 "Scrolled_Listbox.ask_save_file_name")
  '(token                 "Scrolled_Text.ask_save_file_name")
  '(token                 "Slide_Show.ask_save_file_name")
  '(token                 "Statuslabel.ask_save_file_name")
  '(token                 "Statustext.ask_save_file_name")
  '(token                 "Tabbed_Notebook.ask_save_file_name")
  '(token                 "Up_Down_Button.ask_save_file_name")
  '(token                 "V_Panedwindow.ask_save_file_name")
  '(token                 "V_Panedwindow.H_Separator.ask_save_file_name")
  '(token                 "V_Scrollable.ask_save_file_name")
  '(token                 "V_Separator.ask_save_file_name")
  '(token                 "V_Strut.ask_save_file_name")
  '(token                 "_C_Frame.ask_save_file_name")
  '(token                 "_Combobox.ask_save_file_name")
  '(token                 "_Combobox.Scrolled_Listbox.ask_save_file_name")
  '(token                 "_Listdrop.ask_save_file_name")
  '(token                 "_Listspinner.ask_save_file_name")
  '(token                 "_Panedwindow.ask_save_file_name")
  '(token                 "_Scrollable.ask_save_file_name")
  '(token                 "_Separator.ask_save_file_name")
  '(token                 "_Spinner.ask_save_file_name")
  '(token                 "_Spinnerentry.ask_save_file_name")
  '(token                 "_Statusframe.ask_save_file_name")
  '(replacement           "ask_save_file_name (««CT_TK_mixin.ask_save_file_name:args»»···, ««py-named-arg»»···)")
;;; ask_save_file_name(args,kw)
)

(lse-define-fill-in "CT_TK_mixin.ask_yes_no:args" 
  '(description           "Argument 1 of CT_TK_mixin.ask_yes_no")
  '(leading               ",")
  '(separator             ", ")
;;; CT_TK_mixin.ask_yes_no:args
)

(lse-define-fill-in "ask_yes_no(args,kw)" 
  '(description           "Display a confirmation window (yes/no) using `tk_messageBox'.")
  '(token)
  '(token                 "Balloon.ask_yes_no")
  '(token                 "Buttonbox.ask_yes_no")
  '(token                 "CT_TK_mixin.ask_yes_no")
  '(token                 "C_Entry.ask_yes_no")
  '(token                 "C_Frame.ask_yes_no")
  '(token                 "C_Listbox.ask_yes_no")
  '(token                 "C_Menu.ask_yes_no")
  '(token                 "C_Text.ask_yes_no")
  '(token                 "Combo_Tuple.ask_yes_no")
  '(token                 "Combo_Tuple_X.ask_yes_no")
  '(token                 "Combobox.ask_yes_no")
  '(token                 "Entrybox.ask_yes_no")
  '(token                 "Filename_Entry.ask_yes_no")
  '(token                 "H_Panedwindow.ask_yes_no")
  '(token                 "H_Panedwindow.V_Separator.ask_yes_no")
  '(token                 "H_Scrollable.ask_yes_no")
  '(token                 "H_Separator.ask_yes_no")
  '(token                 "H_Strut.ask_yes_no")
  '(token                 "Listbox_Tuple.ask_yes_no")
  '(token                 "Listdropentry.ask_yes_no")
  '(token                 "Listdropspinner.ask_yes_no")
  '(token                 "Listspinner.ask_yes_no")
  '(token                 "Message_Window.ask_yes_no")
  '(token                 "Multicombobox.ask_yes_no")
  '(token                 "Multicombobox_X.ask_yes_no")
  '(token                 "Notebook.ask_yes_no")
  '(token                 "Num_Spinner.ask_yes_no")
  '(token                 "Progress_Gauge.ask_yes_no")
  '(token                 "Progress_Gauge_T.ask_yes_no")
  '(token                 "Scrolled_Listbox.ask_yes_no")
  '(token                 "Scrolled_Text.ask_yes_no")
  '(token                 "Slide_Show.ask_yes_no")
  '(token                 "Statuslabel.ask_yes_no")
  '(token                 "Statustext.ask_yes_no")
  '(token                 "Tabbed_Notebook.ask_yes_no")
  '(token                 "Up_Down_Button.ask_yes_no")
  '(token                 "V_Panedwindow.ask_yes_no")
  '(token                 "V_Panedwindow.H_Separator.ask_yes_no")
  '(token                 "V_Scrollable.ask_yes_no")
  '(token                 "V_Separator.ask_yes_no")
  '(token                 "V_Strut.ask_yes_no")
  '(token                 "_C_Frame.ask_yes_no")
  '(token                 "_Combobox.ask_yes_no")
  '(token                 "_Combobox.Scrolled_Listbox.ask_yes_no")
  '(token                 "_Listdrop.ask_yes_no")
  '(token                 "_Listspinner.ask_yes_no")
  '(token                 "_Panedwindow.ask_yes_no")
  '(token                 "_Scrollable.ask_yes_no")
  '(token                 "_Separator.ask_yes_no")
  '(token                 "_Spinner.ask_yes_no")
  '(token                 "_Spinnerentry.ask_yes_no")
  '(token                 "_Statusframe.ask_yes_no")
  '(replacement           "ask_yes_no (««CT_TK_mixin.ask_yes_no:args»»···, ««py-named-arg»»···)")
;;; ask_yes_no(args,kw)
)

(lse-define-fill-in "CT_TK_mixin.ask_yes_no_cancel:args" 
  '(description           "Argument 1 of CT_TK_mixin.ask_yes_no_cancel")
  '(leading               ",")
  '(separator             ", ")
;;; CT_TK_mixin.ask_yes_no_cancel:args
)

(lse-define-fill-in "ask_yes_no_cancel(args,kw)" 
  '(description           "Display a confirmation window (yes/no/cancel) using `tk_messageBox'.")
  '(token)
  '(token                 "Balloon.ask_yes_no_cancel")
  '(token                 "Buttonbox.ask_yes_no_cancel")
  '(token                 "CT_TK_mixin.ask_yes_no_cancel")
  '(token                 "C_Entry.ask_yes_no_cancel")
  '(token                 "C_Frame.ask_yes_no_cancel")
  '(token                 "C_Listbox.ask_yes_no_cancel")
  '(token                 "C_Menu.ask_yes_no_cancel")
  '(token                 "C_Text.ask_yes_no_cancel")
  '(token                 "Combo_Tuple.ask_yes_no_cancel")
  '(token                 "Combo_Tuple_X.ask_yes_no_cancel")
  '(token                 "Combobox.ask_yes_no_cancel")
  '(token                 "Entrybox.ask_yes_no_cancel")
  '(token                 "Filename_Entry.ask_yes_no_cancel")
  '(token                 "H_Panedwindow.ask_yes_no_cancel")
  '(token                 "H_Panedwindow.V_Separator.ask_yes_no_cancel")
  '(token                 "H_Scrollable.ask_yes_no_cancel")
  '(token                 "H_Separator.ask_yes_no_cancel")
  '(token                 "H_Strut.ask_yes_no_cancel")
  '(token                 "Listbox_Tuple.ask_yes_no_cancel")
  '(token                 "Listdropentry.ask_yes_no_cancel")
  '(token                 "Listdropspinner.ask_yes_no_cancel")
  '(token                 "Listspinner.ask_yes_no_cancel")
  '(token                 "Message_Window.ask_yes_no_cancel")
  '(token                 "Multicombobox.ask_yes_no_cancel")
  '(token                 "Multicombobox_X.ask_yes_no_cancel")
  '(token                 "Notebook.ask_yes_no_cancel")
  '(token                 "Num_Spinner.ask_yes_no_cancel")
  '(token                 "Progress_Gauge.ask_yes_no_cancel")
  '(token                 "Progress_Gauge_T.ask_yes_no_cancel")
  '(token                 "Scrolled_Listbox.ask_yes_no_cancel")
  '(token                 "Scrolled_Text.ask_yes_no_cancel")
  '(token                 "Slide_Show.ask_yes_no_cancel")
  '(token                 "Statuslabel.ask_yes_no_cancel")
  '(token                 "Statustext.ask_yes_no_cancel")
  '(token                 "Tabbed_Notebook.ask_yes_no_cancel")
  '(token                 "Up_Down_Button.ask_yes_no_cancel")
  '(token                 "V_Panedwindow.ask_yes_no_cancel")
  '(token                 "V_Panedwindow.H_Separator.ask_yes_no_cancel")
  '(token                 "V_Scrollable.ask_yes_no_cancel")
  '(token                 "V_Separator.ask_yes_no_cancel")
  '(token                 "V_Strut.ask_yes_no_cancel")
  '(token                 "_C_Frame.ask_yes_no_cancel")
  '(token                 "_Combobox.ask_yes_no_cancel")
  '(token                 "_Combobox.Scrolled_Listbox.ask_yes_no_cancel")
  '(token                 "_Listdrop.ask_yes_no_cancel")
  '(token                 "_Listspinner.ask_yes_no_cancel")
  '(token                 "_Panedwindow.ask_yes_no_cancel")
  '(token                 "_Scrollable.ask_yes_no_cancel")
  '(token                 "_Separator.ask_yes_no_cancel")
  '(token                 "_Spinner.ask_yes_no_cancel")
  '(token                 "_Spinnerentry.ask_yes_no_cancel")
  '(token                 "_Statusframe.ask_yes_no_cancel")
  '(replacement           "ask_yes_no_cancel (««CT_TK_mixin.ask_yes_no_cancel:args»»···, ««py-named-arg»»···)")
;;; ask_yes_no_cancel(args,kw)
)

(lse-define-fill-in "Wm.aspect:minNumer" 
  '(description           "Argument 1 of Wm.aspect (default = None)")
  '(leading               ",")
;;; Wm.aspect:minNumer
)

(lse-define-fill-in "Wm.aspect:minDenom" 
  '(description           "Argument 2 of Wm.aspect (default = None)")
  '(leading               ",")
;;; Wm.aspect:minDenom
)

(lse-define-fill-in "Wm.aspect:maxNumer" 
  '(description           "Argument 3 of Wm.aspect (default = None)")
  '(leading               ",")
;;; Wm.aspect:maxNumer
)

(lse-define-fill-in "Wm.aspect:maxDenom" 
  '(description           "Argument 4 of Wm.aspect (default = None)")
  '(leading               ",")
;;; Wm.aspect:maxDenom
)

(lse-define-fill-in "aspect(minNumer,minDenom,maxNumer,maxDenom)" 
  '(token)
  '(token                 "Balloon.aspect")
  '(token                 "Progress_Gauge_T.aspect")
  '(token                 "Tk.aspect")
  '(token                 "Toplevel.aspect")
  '(token                 "Wm.aspect")
  '(replacement           "aspect (««Wm.aspect:minNumer»», ««Wm.aspect:minDenom»», ««Wm.aspect:maxNumer»», ««Wm.aspect:maxDenom»»)")
;;; aspect(minNumer,minDenom,maxNumer,maxDenom)
)

(lse-define-fill-in "bbox()" 
  '(token)
  '(token                 "Arc.bbox")
  '(token                 "Bitmap.bbox")
  '(token                 "CanvasItem.bbox")
  '(token                 "CanvasText.bbox")
  '(token                 "Group.bbox")
  '(token                 "ImageItem.bbox")
  '(token                 "Line.bbox")
  '(token                 "Oval.bbox")
  '(token                 "Polygon.bbox")
  '(token                 "Rectangle.bbox")
  '(token                 "Window.bbox")
  '(replacement           "bbox ()")
;;; bbox()
)

(lse-define-fill-in "Canvas.bbox:args" 
  '(description           "Argument 1 of Canvas.bbox")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.bbox:args
)

(lse-define-fill-in "bbox(args)" 
  '(token)
  '(token                 "Canvas.bbox")
  '(token                 "Listbox.bbox")
  '(token                 "Statustext.Text.bbox")
  '(token                 "Text.bbox")
  '(replacement           "bbox (««Canvas.bbox:args»»···)")
;;; bbox(args)
)

(lse-define-fill-in "Misc.bbox:column" 
  '(description           "Argument 1 of Misc.bbox")
  '(leading               ",")
;;; Misc.bbox:column
)

(lse-define-fill-in "Misc.bbox:row" 
  '(description           "Argument 2 of Misc.bbox")
  '(leading               ",")
;;; Misc.bbox:row
)

(lse-define-fill-in "bbox(column,row)" 
  '(token)
  '(token                 "Balloon.bbox")
  '(token                 "BaseWidget.bbox")
  '(token                 "Button.bbox")
  '(token                 "Buttonbox.bbox")
  '(token                 "C_Entry.bbox")
  '(token                 "C_Frame.bbox")
  '(token                 "C_Listbox.bbox")
  '(token                 "C_Menu.bbox")
  '(token                 "C_Text.bbox")
  '(token                 "Canvas.bbox")
  '(token                 "Checkbutton.bbox")
  '(token                 "Combo_Tuple.bbox")
  '(token                 "Combo_Tuple_X.bbox")
  '(token                 "Combobox.bbox")
  '(token                 "Entry.bbox")
  '(token                 "Entrybox.bbox")
  '(token                 "Filename_Entry.bbox")
  '(token                 "Frame.bbox")
  '(token                 "Grid.bbox")
  '(token                 "H_Panedwindow.bbox")
  '(token                 "H_Panedwindow.V_Separator.bbox")
  '(token                 "H_Scrollable.bbox")
  '(token                 "H_Separator.bbox")
  '(token                 "H_Strut.bbox")
  '(token                 "Label.bbox")
  '(token                 "Listbox.bbox")
  '(token                 "Listbox_Tuple.bbox")
  '(token                 "Listdropentry.bbox")
  '(token                 "Listdropspinner.bbox")
  '(token                 "Listspinner.bbox")
  '(token                 "Menu.bbox")
  '(token                 "Menubutton.bbox")
  '(token                 "Message.bbox")
  '(token                 "Message_Window.bbox")
  '(token                 "Misc.bbox")
  '(token                 "Multicombobox.bbox")
  '(token                 "Multicombobox_X.bbox")
  '(token                 "Notebook.bbox")
  '(token                 "Num_Spinner.bbox")
  '(token                 "OptionMenu.bbox")
  '(token                 "Progress_Gauge.bbox")
  '(token                 "Progress_Gauge_T.bbox")
  '(token                 "Radiobutton.bbox")
  '(token                 "Scale.bbox")
  '(token                 "Scrollbar.bbox")
  '(token                 "Scrolled_Listbox.bbox")
  '(token                 "Scrolled_Text.bbox")
  '(token                 "Slide_Show.bbox")
  '(token                 "Statuslabel.bbox")
  '(token                 "Statuslabel.Label.bbox")
  '(token                 "Statustext.bbox")
  '(token                 "Statustext.Text.bbox")
  '(token                 "Studbutton.bbox")
  '(token                 "Tabbed_Notebook.bbox")
  '(token                 "Text.bbox")
  '(token                 "Tk.bbox")
  '(token                 "Toplevel.bbox")
  '(token                 "Tributton.bbox")
  '(token                 "Up_Down_Button.bbox")
  '(token                 "V_Panedwindow.bbox")
  '(token                 "V_Panedwindow.H_Separator.bbox")
  '(token                 "V_Scrollable.bbox")
  '(token                 "V_Separator.bbox")
  '(token                 "V_Strut.bbox")
  '(token                 "Widget.bbox")
  '(token                 "_C_Frame.bbox")
  '(token                 "_Combobox.Scrolled_Listbox.bbox")
  '(token                 "_Panedwindow.bbox")
  '(token                 "_Scrollable.bbox")
  '(token                 "_Separator.bbox")
  '(token                 "_Spinnerentry.bbox")
  '(token                 "_Statusframe.bbox")
  '(replacement           "bbox («Misc.bbox:column», «Misc.bbox:row»)")
;;; bbox(column,row)
)

(lse-define-fill-in "Misc.bell:displayof" 
  '(description           "Argument 1 of Misc.bell (default = 0)")
  '(leading               ",")
;;; Misc.bell:displayof
)

(lse-define-fill-in "bell(displayof)" 
  '(token)
  '(token                 "Balloon.bell")
  '(token                 "BaseWidget.bell")
  '(token                 "Button.bell")
  '(token                 "Buttonbox.bell")
  '(token                 "C_Entry.bell")
  '(token                 "C_Frame.bell")
  '(token                 "C_Listbox.bell")
  '(token                 "C_Menu.bell")
  '(token                 "C_Text.bell")
  '(token                 "Canvas.bell")
  '(token                 "Checkbutton.bell")
  '(token                 "Combo_Tuple.bell")
  '(token                 "Combo_Tuple_X.bell")
  '(token                 "Combobox.bell")
  '(token                 "Entry.bell")
  '(token                 "Entrybox.bell")
  '(token                 "Filename_Entry.bell")
  '(token                 "Frame.bell")
  '(token                 "H_Panedwindow.bell")
  '(token                 "H_Panedwindow.V_Separator.bell")
  '(token                 "H_Scrollable.bell")
  '(token                 "H_Separator.bell")
  '(token                 "H_Strut.bell")
  '(token                 "Label.bell")
  '(token                 "Listbox.bell")
  '(token                 "Listbox_Tuple.bell")
  '(token                 "Listdropentry.bell")
  '(token                 "Listdropspinner.bell")
  '(token                 "Listspinner.bell")
  '(token                 "Menu.bell")
  '(token                 "Menubutton.bell")
  '(token                 "Message.bell")
  '(token                 "Message_Window.bell")
  '(token                 "Misc.bell")
  '(token                 "Multicombobox.bell")
  '(token                 "Multicombobox_X.bell")
  '(token                 "Notebook.bell")
  '(token                 "Num_Spinner.bell")
  '(token                 "OptionMenu.bell")
  '(token                 "Progress_Gauge.bell")
  '(token                 "Progress_Gauge_T.bell")
  '(token                 "Radiobutton.bell")
  '(token                 "Scale.bell")
  '(token                 "Scrollbar.bell")
  '(token                 "Scrolled_Listbox.bell")
  '(token                 "Scrolled_Text.bell")
  '(token                 "Slide_Show.bell")
  '(token                 "Statuslabel.bell")
  '(token                 "Statuslabel.Label.bell")
  '(token                 "Statustext.bell")
  '(token                 "Statustext.Text.bell")
  '(token                 "Studbutton.bell")
  '(token                 "Tabbed_Notebook.bell")
  '(token                 "Text.bell")
  '(token                 "Tk.bell")
  '(token                 "Toplevel.bell")
  '(token                 "Tributton.bell")
  '(token                 "Up_Down_Button.bell")
  '(token                 "V_Panedwindow.bell")
  '(token                 "V_Panedwindow.H_Separator.bell")
  '(token                 "V_Scrollable.bell")
  '(token                 "V_Separator.bell")
  '(token                 "V_Strut.bell")
  '(token                 "Widget.bell")
  '(token                 "_C_Frame.bell")
  '(token                 "_Combobox.Scrolled_Listbox.bell")
  '(token                 "_Panedwindow.bell")
  '(token                 "_Scrollable.bell")
  '(token                 "_Separator.bell")
  '(token                 "_Spinnerentry.bell")
  '(token                 "_Statusframe.bell")
  '(replacement           "bell (««Misc.bell:displayof»»)")
;;; bell(displayof)
)

(lse-define-fill-in "CanvasItem.bind:sequence" 
  '(description           "Argument 1 of CanvasItem.bind (default = None)")
  '(leading               ",")
;;; CanvasItem.bind:sequence
)

(lse-define-fill-in "CanvasItem.bind:command" 
  '(description           "Argument 2 of CanvasItem.bind (default = None)")
  '(leading               ",")
;;; CanvasItem.bind:command
)

(lse-define-fill-in "bind(sequence,command)" 
  '(token)
  '(token                 "Arc.bind")
  '(token                 "Bitmap.bind")
  '(token                 "CanvasItem.bind")
  '(token                 "CanvasText.bind")
  '(token                 "Group.bind")
  '(token                 "ImageItem.bind")
  '(token                 "Line.bind")
  '(token                 "Oval.bind")
  '(token                 "Polygon.bind")
  '(token                 "Rectangle.bind")
  '(token                 "Window.bind")
  '(replacement           "bind (««CanvasItem.bind:sequence»», ««CanvasItem.bind:command»»)")
;;; bind(sequence,command)
)

(lse-define-fill-in "Misc.bind:sequence" 
  '(description           "Argument 1 of Misc.bind (default = None)")
  '(leading               ",")
;;; Misc.bind:sequence
)

(lse-define-fill-in "Misc.bind:func" 
  '(description           "Argument 2 of Misc.bind (default = None)")
  '(leading               ",")
;;; Misc.bind:func
)

(lse-define-fill-in "Misc.bind:add" 
  '(description           "Argument 3 of Misc.bind (default = None)")
  '(leading               ",")
;;; Misc.bind:add
)

(lse-define-fill-in "bind(sequence,func,add)" 
  '(token)
  '(token                 "Balloon.bind")
  '(token                 "BaseWidget.bind")
  '(token                 "Button.bind")
  '(token                 "Buttonbox.bind")
  '(token                 "C_Entry.bind")
  '(token                 "C_Frame.bind")
  '(token                 "C_Listbox.bind")
  '(token                 "C_Menu.bind")
  '(token                 "C_Text.bind")
  '(token                 "Canvas.bind")
  '(token                 "Checkbutton.bind")
  '(token                 "Combo_Tuple.bind")
  '(token                 "Combo_Tuple_X.bind")
  '(token                 "Combobox.bind")
  '(token                 "Entry.bind")
  '(token                 "Entrybox.bind")
  '(token                 "Filename_Entry.bind")
  '(token                 "Frame.bind")
  '(token                 "H_Panedwindow.bind")
  '(token                 "H_Panedwindow.V_Separator.bind")
  '(token                 "H_Scrollable.bind")
  '(token                 "H_Separator.bind")
  '(token                 "H_Strut.bind")
  '(token                 "Label.bind")
  '(token                 "Listbox.bind")
  '(token                 "Listbox_Tuple.bind")
  '(token                 "Listdropentry.bind")
  '(token                 "Listdropspinner.bind")
  '(token                 "Listspinner.bind")
  '(token                 "Menu.bind")
  '(token                 "Menubutton.bind")
  '(token                 "Message.bind")
  '(token                 "Message_Window.bind")
  '(token                 "Misc.bind")
  '(token                 "Multicombobox.bind")
  '(token                 "Multicombobox_X.bind")
  '(token                 "Notebook.bind")
  '(token                 "Num_Spinner.bind")
  '(token                 "OptionMenu.bind")
  '(token                 "Progress_Gauge.bind")
  '(token                 "Progress_Gauge_T.bind")
  '(token                 "Radiobutton.bind")
  '(token                 "Scale.bind")
  '(token                 "Scrollbar.bind")
  '(token                 "Scrolled_Listbox.bind")
  '(token                 "Scrolled_Text.bind")
  '(token                 "Slide_Show.bind")
  '(token                 "Statuslabel.bind")
  '(token                 "Statuslabel.Label.bind")
  '(token                 "Statustext.bind")
  '(token                 "Statustext.Text.bind")
  '(token                 "Studbutton.bind")
  '(token                 "Tabbed_Notebook.bind")
  '(token                 "Text.bind")
  '(token                 "Tk.bind")
  '(token                 "Toplevel.bind")
  '(token                 "Tributton.bind")
  '(token                 "Up_Down_Button.bind")
  '(token                 "V_Panedwindow.bind")
  '(token                 "V_Panedwindow.H_Separator.bind")
  '(token                 "V_Scrollable.bind")
  '(token                 "V_Separator.bind")
  '(token                 "V_Strut.bind")
  '(token                 "Widget.bind")
  '(token                 "_C_Frame.bind")
  '(token                 "_Combobox.Scrolled_Listbox.bind")
  '(token                 "_Panedwindow.bind")
  '(token                 "_Scrollable.bind")
  '(token                 "_Separator.bind")
  '(token                 "_Spinnerentry.bind")
  '(token                 "_Statusframe.bind")
  '(replacement           "bind (««Misc.bind:sequence»», ««Misc.bind:func»», ««Misc.bind:add»»)")
;;; bind(sequence,func,add)
)

(lse-define-fill-in "Misc.bind_all:sequence" 
  '(description           "Argument 1 of Misc.bind_all (default = None)")
  '(leading               ",")
;;; Misc.bind_all:sequence
)

(lse-define-fill-in "Misc.bind_all:func" 
  '(description           "Argument 2 of Misc.bind_all (default = None)")
  '(leading               ",")
;;; Misc.bind_all:func
)

(lse-define-fill-in "Misc.bind_all:add" 
  '(description           "Argument 3 of Misc.bind_all (default = None)")
  '(leading               ",")
;;; Misc.bind_all:add
)

(lse-define-fill-in "bind_all(sequence,func,add)" 
  '(token)
  '(token                 "Balloon.bind_all")
  '(token                 "BaseWidget.bind_all")
  '(token                 "Button.bind_all")
  '(token                 "Buttonbox.bind_all")
  '(token                 "C_Entry.bind_all")
  '(token                 "C_Frame.bind_all")
  '(token                 "C_Listbox.bind_all")
  '(token                 "C_Menu.bind_all")
  '(token                 "C_Text.bind_all")
  '(token                 "Canvas.bind_all")
  '(token                 "Checkbutton.bind_all")
  '(token                 "Combo_Tuple.bind_all")
  '(token                 "Combo_Tuple_X.bind_all")
  '(token                 "Combobox.bind_all")
  '(token                 "Entry.bind_all")
  '(token                 "Entrybox.bind_all")
  '(token                 "Filename_Entry.bind_all")
  '(token                 "Frame.bind_all")
  '(token                 "H_Panedwindow.bind_all")
  '(token                 "H_Panedwindow.V_Separator.bind_all")
  '(token                 "H_Scrollable.bind_all")
  '(token                 "H_Separator.bind_all")
  '(token                 "H_Strut.bind_all")
  '(token                 "Label.bind_all")
  '(token                 "Listbox.bind_all")
  '(token                 "Listbox_Tuple.bind_all")
  '(token                 "Listdropentry.bind_all")
  '(token                 "Listdropspinner.bind_all")
  '(token                 "Listspinner.bind_all")
  '(token                 "Menu.bind_all")
  '(token                 "Menubutton.bind_all")
  '(token                 "Message.bind_all")
  '(token                 "Message_Window.bind_all")
  '(token                 "Misc.bind_all")
  '(token                 "Multicombobox.bind_all")
  '(token                 "Multicombobox_X.bind_all")
  '(token                 "Notebook.bind_all")
  '(token                 "Num_Spinner.bind_all")
  '(token                 "OptionMenu.bind_all")
  '(token                 "Progress_Gauge.bind_all")
  '(token                 "Progress_Gauge_T.bind_all")
  '(token                 "Radiobutton.bind_all")
  '(token                 "Scale.bind_all")
  '(token                 "Scrollbar.bind_all")
  '(token                 "Scrolled_Listbox.bind_all")
  '(token                 "Scrolled_Text.bind_all")
  '(token                 "Slide_Show.bind_all")
  '(token                 "Statuslabel.bind_all")
  '(token                 "Statuslabel.Label.bind_all")
  '(token                 "Statustext.bind_all")
  '(token                 "Statustext.Text.bind_all")
  '(token                 "Studbutton.bind_all")
  '(token                 "Tabbed_Notebook.bind_all")
  '(token                 "Text.bind_all")
  '(token                 "Tk.bind_all")
  '(token                 "Toplevel.bind_all")
  '(token                 "Tributton.bind_all")
  '(token                 "Up_Down_Button.bind_all")
  '(token                 "V_Panedwindow.bind_all")
  '(token                 "V_Panedwindow.H_Separator.bind_all")
  '(token                 "V_Scrollable.bind_all")
  '(token                 "V_Separator.bind_all")
  '(token                 "V_Strut.bind_all")
  '(token                 "Widget.bind_all")
  '(token                 "_C_Frame.bind_all")
  '(token                 "_Combobox.Scrolled_Listbox.bind_all")
  '(token                 "_Panedwindow.bind_all")
  '(token                 "_Scrollable.bind_all")
  '(token                 "_Separator.bind_all")
  '(token                 "_Spinnerentry.bind_all")
  '(token                 "_Statusframe.bind_all")
  '(replacement           "bind_all (««Misc.bind_all:sequence»», ««Misc.bind_all:func»», ««Misc.bind_all:add»»)")
;;; bind_all(sequence,func,add)
)

(lse-define-fill-in "Misc.bind_class:className" 
  '(description           "Argument 1 of Misc.bind_class")
  '(leading               ",")
;;; Misc.bind_class:className
)

(lse-define-fill-in "Misc.bind_class:sequence" 
  '(description           "Argument 2 of Misc.bind_class (default = None)")
  '(leading               ",")
;;; Misc.bind_class:sequence
)

(lse-define-fill-in "Misc.bind_class:func" 
  '(description           "Argument 3 of Misc.bind_class (default = None)")
  '(leading               ",")
;;; Misc.bind_class:func
)

(lse-define-fill-in "Misc.bind_class:add" 
  '(description           "Argument 4 of Misc.bind_class (default = None)")
  '(leading               ",")
;;; Misc.bind_class:add
)

(lse-define-fill-in "bind_class(className,sequence,func,add)" 
  '(token)
  '(token                 "Balloon.bind_class")
  '(token                 "BaseWidget.bind_class")
  '(token                 "Button.bind_class")
  '(token                 "Buttonbox.bind_class")
  '(token                 "C_Entry.bind_class")
  '(token                 "C_Frame.bind_class")
  '(token                 "C_Listbox.bind_class")
  '(token                 "C_Menu.bind_class")
  '(token                 "C_Text.bind_class")
  '(token                 "Canvas.bind_class")
  '(token                 "Checkbutton.bind_class")
  '(token                 "Combo_Tuple.bind_class")
  '(token                 "Combo_Tuple_X.bind_class")
  '(token                 "Combobox.bind_class")
  '(token                 "Entry.bind_class")
  '(token                 "Entrybox.bind_class")
  '(token                 "Filename_Entry.bind_class")
  '(token                 "Frame.bind_class")
  '(token                 "H_Panedwindow.bind_class")
  '(token                 "H_Panedwindow.V_Separator.bind_class")
  '(token                 "H_Scrollable.bind_class")
  '(token                 "H_Separator.bind_class")
  '(token                 "H_Strut.bind_class")
  '(token                 "Label.bind_class")
  '(token                 "Listbox.bind_class")
  '(token                 "Listbox_Tuple.bind_class")
  '(token                 "Listdropentry.bind_class")
  '(token                 "Listdropspinner.bind_class")
  '(token                 "Listspinner.bind_class")
  '(token                 "Menu.bind_class")
  '(token                 "Menubutton.bind_class")
  '(token                 "Message.bind_class")
  '(token                 "Message_Window.bind_class")
  '(token                 "Misc.bind_class")
  '(token                 "Multicombobox.bind_class")
  '(token                 "Multicombobox_X.bind_class")
  '(token                 "Notebook.bind_class")
  '(token                 "Num_Spinner.bind_class")
  '(token                 "OptionMenu.bind_class")
  '(token                 "Progress_Gauge.bind_class")
  '(token                 "Progress_Gauge_T.bind_class")
  '(token                 "Radiobutton.bind_class")
  '(token                 "Scale.bind_class")
  '(token                 "Scrollbar.bind_class")
  '(token                 "Scrolled_Listbox.bind_class")
  '(token                 "Scrolled_Text.bind_class")
  '(token                 "Slide_Show.bind_class")
  '(token                 "Statuslabel.bind_class")
  '(token                 "Statuslabel.Label.bind_class")
  '(token                 "Statustext.bind_class")
  '(token                 "Statustext.Text.bind_class")
  '(token                 "Studbutton.bind_class")
  '(token                 "Tabbed_Notebook.bind_class")
  '(token                 "Text.bind_class")
  '(token                 "Tk.bind_class")
  '(token                 "Toplevel.bind_class")
  '(token                 "Tributton.bind_class")
  '(token                 "Up_Down_Button.bind_class")
  '(token                 "V_Panedwindow.bind_class")
  '(token                 "V_Panedwindow.H_Separator.bind_class")
  '(token                 "V_Scrollable.bind_class")
  '(token                 "V_Separator.bind_class")
  '(token                 "V_Strut.bind_class")
  '(token                 "Widget.bind_class")
  '(token                 "_C_Frame.bind_class")
  '(token                 "_Combobox.Scrolled_Listbox.bind_class")
  '(token                 "_Panedwindow.bind_class")
  '(token                 "_Scrollable.bind_class")
  '(token                 "_Separator.bind_class")
  '(token                 "_Spinnerentry.bind_class")
  '(token                 "_Statusframe.bind_class")
  '(replacement           "bind_class («Misc.bind_class:className», ««Misc.bind_class:sequence»», ««Misc.bind_class:func»», ««Misc.bind_class:add»»)")
;;; bind_class(className,sequence,func,add)
)

(lse-define-fill-in "Misc.bindtags:tagList" 
  '(description           "Argument 1 of Misc.bindtags (default = None)")
  '(leading               ",")
;;; Misc.bindtags:tagList
)

(lse-define-fill-in "bindtags(tagList)" 
  '(token)
  '(token                 "Balloon.bindtags")
  '(token                 "BaseWidget.bindtags")
  '(token                 "Button.bindtags")
  '(token                 "Buttonbox.bindtags")
  '(token                 "C_Entry.bindtags")
  '(token                 "C_Frame.bindtags")
  '(token                 "C_Listbox.bindtags")
  '(token                 "C_Menu.bindtags")
  '(token                 "C_Text.bindtags")
  '(token                 "Canvas.bindtags")
  '(token                 "Checkbutton.bindtags")
  '(token                 "Combo_Tuple.bindtags")
  '(token                 "Combo_Tuple_X.bindtags")
  '(token                 "Combobox.bindtags")
  '(token                 "Entry.bindtags")
  '(token                 "Entrybox.bindtags")
  '(token                 "Filename_Entry.bindtags")
  '(token                 "Frame.bindtags")
  '(token                 "H_Panedwindow.bindtags")
  '(token                 "H_Panedwindow.V_Separator.bindtags")
  '(token                 "H_Scrollable.bindtags")
  '(token                 "H_Separator.bindtags")
  '(token                 "H_Strut.bindtags")
  '(token                 "Label.bindtags")
  '(token                 "Listbox.bindtags")
  '(token                 "Listbox_Tuple.bindtags")
  '(token                 "Listdropentry.bindtags")
  '(token                 "Listdropspinner.bindtags")
  '(token                 "Listspinner.bindtags")
  '(token                 "Menu.bindtags")
  '(token                 "Menubutton.bindtags")
  '(token                 "Message.bindtags")
  '(token                 "Message_Window.bindtags")
  '(token                 "Misc.bindtags")
  '(token                 "Multicombobox.bindtags")
  '(token                 "Multicombobox_X.bindtags")
  '(token                 "Notebook.bindtags")
  '(token                 "Num_Spinner.bindtags")
  '(token                 "OptionMenu.bindtags")
  '(token                 "Progress_Gauge.bindtags")
  '(token                 "Progress_Gauge_T.bindtags")
  '(token                 "Radiobutton.bindtags")
  '(token                 "Scale.bindtags")
  '(token                 "Scrollbar.bindtags")
  '(token                 "Scrolled_Listbox.bindtags")
  '(token                 "Scrolled_Text.bindtags")
  '(token                 "Slide_Show.bindtags")
  '(token                 "Statuslabel.bindtags")
  '(token                 "Statuslabel.Label.bindtags")
  '(token                 "Statustext.bindtags")
  '(token                 "Statustext.Text.bindtags")
  '(token                 "Studbutton.bindtags")
  '(token                 "Tabbed_Notebook.bindtags")
  '(token                 "Text.bindtags")
  '(token                 "Tk.bindtags")
  '(token                 "Toplevel.bindtags")
  '(token                 "Tributton.bindtags")
  '(token                 "Up_Down_Button.bindtags")
  '(token                 "V_Panedwindow.bindtags")
  '(token                 "V_Panedwindow.H_Separator.bindtags")
  '(token                 "V_Scrollable.bindtags")
  '(token                 "V_Separator.bindtags")
  '(token                 "V_Strut.bindtags")
  '(token                 "Widget.bindtags")
  '(token                 "_C_Frame.bindtags")
  '(token                 "_Combobox.Scrolled_Listbox.bindtags")
  '(token                 "_Panedwindow.bindtags")
  '(token                 "_Scrollable.bindtags")
  '(token                 "_Separator.bindtags")
  '(token                 "_Spinnerentry.bindtags")
  '(token                 "_Statusframe.bindtags")
  '(replacement           "bindtags (««Misc.bindtags:tagList»»)")
;;; bindtags(tagList)
)

(lse-define-fill-in "blank()" 
  '(token)
  '(token                 "PhotoImage.blank")
  '(replacement           "blank ()")
;;; blank()
)

(lse-define-fill-in "book()" 
  '(token)
  '(token                 "Notebook.book")
  '(token                 "Tabbed_Notebook.book")
  '(replacement           "book ()")
;;; book()
)

(lse-define-fill-in "CTK.break_event:event" 
  '(description           "Argument 1 of CTK.break_event (default = None)")
  '(leading               ",")
;;; CTK.break_event:event
)

(lse-define-fill-in "CTK.break_event" 
  '(token)
  '(replacement           "CTK.break_event (««CTK.break_event:event»»)")
;;; CTK.break_event
)

(lse-define-fill-in "C_Text.busy_cursor:cursor" 
  '(description           "Argument 1 of C_Text.busy_cursor (default = watch)")
  '(leading               ",")
;;; C_Text.busy_cursor:cursor
)

(lse-define-fill-in "busy_cursor(cursor)" 
  '(token)
  '(token                 "C_Text.busy_cursor")
  '(token                 "Message_Window.busy_cursor")
  '(token                 "Scrolled_Text.busy_cursor")
  '(token                 "_Statusframe.busy_cursor")
  '(replacement           "busy_cursor (««C_Text.busy_cursor:cursor»»)")
;;; busy_cursor(cursor)
)

(lse-define-fill-in "CT_TK_mixin.busy_cursor:cursor" 
  '(description           "Display a busy cursor until application becomes idle. (default = watch)")
  '(leading               ",")
;;; CT_TK_mixin.busy_cursor:cursor
)

(lse-define-fill-in "CT_TK_mixin.busy_cursor:widget" 
  '(description           "Argument 2 of CT_TK_mixin.busy_cursor (default = None)")
  '(leading               ",")
;;; CT_TK_mixin.busy_cursor:widget
)

(lse-define-fill-in "busy_cursor(cursor,widget)" 
  '(description           "Display a busy cursor until application becomes idle.")
  '(token)
  '(token                 "Balloon.busy_cursor")
  '(token                 "Buttonbox.busy_cursor")
  '(token                 "CT_TK_mixin.busy_cursor")
  '(token                 "C_Entry.busy_cursor")
  '(token                 "C_Frame.busy_cursor")
  '(token                 "C_Listbox.busy_cursor")
  '(token                 "C_Menu.busy_cursor")
  '(token                 "C_Text.busy_cursor")
  '(token                 "Combo_Tuple.busy_cursor")
  '(token                 "Combo_Tuple_X.busy_cursor")
  '(token                 "Combobox.busy_cursor")
  '(token                 "Entrybox.busy_cursor")
  '(token                 "Filename_Entry.busy_cursor")
  '(token                 "H_Panedwindow.busy_cursor")
  '(token                 "H_Panedwindow.V_Separator.busy_cursor")
  '(token                 "H_Scrollable.busy_cursor")
  '(token                 "H_Separator.busy_cursor")
  '(token                 "H_Strut.busy_cursor")
  '(token                 "Listbox_Tuple.busy_cursor")
  '(token                 "Listdropentry.busy_cursor")
  '(token                 "Listdropspinner.busy_cursor")
  '(token                 "Listspinner.busy_cursor")
  '(token                 "Message_Window.busy_cursor")
  '(token                 "Multicombobox.busy_cursor")
  '(token                 "Multicombobox_X.busy_cursor")
  '(token                 "Notebook.busy_cursor")
  '(token                 "Num_Spinner.busy_cursor")
  '(token                 "Progress_Gauge.busy_cursor")
  '(token                 "Progress_Gauge_T.busy_cursor")
  '(token                 "Scrolled_Listbox.busy_cursor")
  '(token                 "Scrolled_Text.busy_cursor")
  '(token                 "Slide_Show.busy_cursor")
  '(token                 "Statuslabel.busy_cursor")
  '(token                 "Statustext.busy_cursor")
  '(token                 "Tabbed_Notebook.busy_cursor")
  '(token                 "Up_Down_Button.busy_cursor")
  '(token                 "V_Panedwindow.busy_cursor")
  '(token                 "V_Panedwindow.H_Separator.busy_cursor")
  '(token                 "V_Scrollable.busy_cursor")
  '(token                 "V_Separator.busy_cursor")
  '(token                 "V_Strut.busy_cursor")
  '(token                 "_C_Frame.busy_cursor")
  '(token                 "_Combobox.busy_cursor")
  '(token                 "_Combobox.Scrolled_Listbox.busy_cursor")
  '(token                 "_Listdrop.busy_cursor")
  '(token                 "_Listspinner.busy_cursor")
  '(token                 "_Panedwindow.busy_cursor")
  '(token                 "_Scrollable.busy_cursor")
  '(token                 "_Separator.busy_cursor")
  '(token                 "_Spinner.busy_cursor")
  '(token                 "_Spinnerentry.busy_cursor")
  '(token                 "_Statusframe.busy_cursor")
  '(replacement           "busy_cursor (««CT_TK_mixin.busy_cursor:cursor»», ««CT_TK_mixin.busy_cursor:widget»»)")
;;; busy_cursor(cursor,widget)
)

(lse-define-fill-in "Buttonbox.buttonactivate:button" 
  '(description           "Argument 1 of Buttonbox.buttonactivate")
  '(leading               ",")
;;; Buttonbox.buttonactivate:button
)

(lse-define-fill-in "buttonactivate(button)" 
  '(token)
  '(token                 "Buttonbox.buttonactivate")
  '(replacement           "buttonactivate («Buttonbox.buttonactivate:button»)")
;;; buttonactivate(button)
)

(lse-define-fill-in "Buttonbox.buttonconfigure:button" 
  '(description           "Argument 1 of Buttonbox.buttonconfigure")
  '(leading               ",")
;;; Buttonbox.buttonconfigure:button
)

(lse-define-fill-in "buttonconfigure(button,kw)" 
  '(token)
  '(token                 "Buttonbox.buttonconfigure")
  '(replacement           "buttonconfigure («Buttonbox.buttonconfigure:button», ««py-named-arg»»···)")
;;; buttonconfigure(button,kw)
)

(lse-define-fill-in "_Spinner.cancel_pending:event" 
  '(description           "Argument 1 of _Spinner.cancel_pending (default = None)")
  '(leading               ",")
;;; _Spinner.cancel_pending:event
)

(lse-define-fill-in "cancel_pending(event)" 
  '(token)
  '(token                 "Listdropspinner.cancel_pending")
  '(token                 "Listspinner.cancel_pending")
  '(token                 "Num_Spinner.cancel_pending")
  '(token                 "_Spinner.cancel_pending")
  '(token                 "_Spinnerentry.cancel_pending")
  '(replacement           "cancel_pending (««_Spinner.cancel_pending:event»»)")
;;; cancel_pending(event)
)

(lse-define-fill-in "Canvas.canvasx:screenx" 
  '(description           "Argument 1 of Canvas.canvasx")
  '(leading               ",")
;;; Canvas.canvasx:screenx
)

(lse-define-fill-in "Canvas.canvasx:gridspacing" 
  '(description           "Argument 2 of Canvas.canvasx (default = None)")
  '(leading               ",")
;;; Canvas.canvasx:gridspacing
)

(lse-define-fill-in "canvasx(screenx,gridspacing)" 
  '(token)
  '(token                 "Canvas.canvasx")
  '(replacement           "canvasx («Canvas.canvasx:screenx», ««Canvas.canvasx:gridspacing»»)")
;;; canvasx(screenx,gridspacing)
)

(lse-define-fill-in "Canvas.canvasy:screeny" 
  '(description           "Argument 1 of Canvas.canvasy")
  '(leading               ",")
;;; Canvas.canvasy:screeny
)

(lse-define-fill-in "Canvas.canvasy:gridspacing" 
  '(description           "Argument 2 of Canvas.canvasy (default = None)")
  '(leading               ",")
;;; Canvas.canvasy:gridspacing
)

(lse-define-fill-in "canvasy(screeny,gridspacing)" 
  '(token)
  '(token                 "Canvas.canvasy")
  '(replacement           "canvasy («Canvas.canvasy:screeny», ««Canvas.canvasy:gridspacing»»)")
;;; canvasy(screeny,gridspacing)
)

(lse-define-fill-in "CanvasItem.cget:key" 
  '(description           "Argument 1 of CanvasItem.cget")
  '(leading               ",")
;;; CanvasItem.cget:key
)

(lse-define-fill-in "cget(key)" 
  '(token)
  '(token                 "Arc.cget")
  '(token                 "Bitmap.cget")
  '(token                 "CanvasItem.cget")
  '(token                 "CanvasText.cget")
  '(token                 "ImageItem.cget")
  '(token                 "Line.cget")
  '(token                 "Misc.cget")
  '(token                 "Oval.cget")
  '(token                 "Polygon.cget")
  '(token                 "Rectangle.cget")
  '(token                 "Window.cget")
  '(replacement           "cget («CanvasItem.cget:key»)")
;;; cget(key)
)

(lse-define-fill-in "PhotoImage.cget:option" 
  '(description           "Argument 1 of PhotoImage.cget")
  '(leading               ",")
;;; PhotoImage.cget:option
)

(lse-define-fill-in "cget(option)" 
  '(token)
  '(token                 "PhotoImage.cget")
  '(replacement           "cget («PhotoImage.cget:option»)")
;;; cget(option)
)

(lse-define-fill-in "_Listspinner.change:delta" 
  '(description           "Argument 1 of _Listspinner.change")
  '(leading               ",")
;;; _Listspinner.change:delta
)

(lse-define-fill-in "change(delta)" 
  '(token)
  '(token                 "Listdropspinner.change")
  '(token                 "Listspinner.change")
  '(token                 "_Listspinner.change")
  '(replacement           "change («_Listspinner.change:delta»)")
;;; change(delta)
)

(lse-define-fill-in "Num_Spinner.change:inc" 
  '(description           "Argument 1 of Num_Spinner.change")
  '(leading               ",")
;;; Num_Spinner.change:inc
)

(lse-define-fill-in "change(inc)" 
  '(token)
  '(token                 "Num_Spinner.change")
  '(replacement           "change («Num_Spinner.change:inc»)")
;;; change(inc)
)

(lse-define-fill-in "Tabbed_Notebook.change_page:name" 
  '(description           "Argument 1 of Tabbed_Notebook.change_page")
  '(leading               ",")
;;; Tabbed_Notebook.change_page:name
)

(lse-define-fill-in "Tabbed_Notebook.change_page:state" 
  '(description           "Argument 2 of Tabbed_Notebook.change_page")
  '(leading               ",")
;;; Tabbed_Notebook.change_page:state
)

(lse-define-fill-in "change_page(name,state)" 
  '(token)
  '(token                 "Tabbed_Notebook.change_page")
  '(replacement           "change_page («Tabbed_Notebook.change_page:name», «Tabbed_Notebook.change_page:state»)")
;;; change_page(name,state)
)

(lse-define-fill-in "_Scrollable.change_scrollregion:bbox" 
  '(description           "Argument 1 of _Scrollable.change_scrollregion (default = None)")
  '(leading               ",")
;;; _Scrollable.change_scrollregion:bbox
)

(lse-define-fill-in "change_scrollregion(bbox)" 
  '(token)
  '(token                 "H_Scrollable.change_scrollregion")
  '(token                 "V_Scrollable.change_scrollregion")
  '(token                 "_Scrollable.change_scrollregion")
  '(replacement           "change_scrollregion (««_Scrollable.change_scrollregion:bbox»»)")
;;; change_scrollregion(bbox)
)

(lse-define-fill-in "_Panedwindow.change_size:event" 
  '(description           "Argument 1 of _Panedwindow.change_size (default = None)")
  '(leading               ",")
;;; _Panedwindow.change_size:event
)

(lse-define-fill-in "change_size(event)" 
  '(token)
  '(token                 "H_Panedwindow.change_size")
  '(token                 "H_Scrollable.change_size")
  '(token                 "V_Panedwindow.change_size")
  '(token                 "V_Scrollable.change_size")
  '(token                 "_Panedwindow.change_size")
  '(token                 "_Scrollable.change_size")
  '(replacement           "change_size (««_Panedwindow.change_size:event»»)")
;;; change_size(event)
)

(lse-define-fill-in "clear()" 
  '(description           "Clear `self.body' (i.e., remove all text from the widget).")
  '(token)
  '(token                 "C_Text.clear")
  '(token                 "Message_Window.clear")
  '(token                 "Scrolled_Text.clear")
  '(replacement           "clear ()")
;;; clear()
)

(lse-define-fill-in "clear_help()" 
  '(token)
  '(token                 "Message_Window.clear_help")
  '(replacement           "clear_help ()")
;;; clear_help()
)

(lse-define-fill-in "Wm.client:name" 
  '(description           "Argument 1 of Wm.client (default = None)")
  '(leading               ",")
;;; Wm.client:name
)

(lse-define-fill-in "client(name)" 
  '(token)
  '(token                 "Balloon.client")
  '(token                 "Progress_Gauge_T.client")
  '(token                 "Tk.client")
  '(token                 "Toplevel.client")
  '(token                 "Wm.client")
  '(replacement           "client (««Wm.client:name»»)")
;;; client(name)
)

(lse-define-fill-in "Misc.clipboard_append:string" 
  '(description           "Argument 1 of Misc.clipboard_append")
  '(leading               ",")
;;; Misc.clipboard_append:string
)

(lse-define-fill-in "clipboard_append(string,kw)" 
  '(token)
  '(token                 "Balloon.clipboard_append")
  '(token                 "BaseWidget.clipboard_append")
  '(token                 "Button.clipboard_append")
  '(token                 "Buttonbox.clipboard_append")
  '(token                 "C_Entry.clipboard_append")
  '(token                 "C_Frame.clipboard_append")
  '(token                 "C_Listbox.clipboard_append")
  '(token                 "C_Menu.clipboard_append")
  '(token                 "C_Text.clipboard_append")
  '(token                 "Canvas.clipboard_append")
  '(token                 "Checkbutton.clipboard_append")
  '(token                 "Combo_Tuple.clipboard_append")
  '(token                 "Combo_Tuple_X.clipboard_append")
  '(token                 "Combobox.clipboard_append")
  '(token                 "Entry.clipboard_append")
  '(token                 "Entrybox.clipboard_append")
  '(token                 "Filename_Entry.clipboard_append")
  '(token                 "Frame.clipboard_append")
  '(token                 "H_Panedwindow.clipboard_append")
  '(token                 "H_Panedwindow.V_Separator.clipboard_append")
  '(token                 "H_Scrollable.clipboard_append")
  '(token                 "H_Separator.clipboard_append")
  '(token                 "H_Strut.clipboard_append")
  '(token                 "Label.clipboard_append")
  '(token                 "Listbox.clipboard_append")
  '(token                 "Listbox_Tuple.clipboard_append")
  '(token                 "Listdropentry.clipboard_append")
  '(token                 "Listdropspinner.clipboard_append")
  '(token                 "Listspinner.clipboard_append")
  '(token                 "Menu.clipboard_append")
  '(token                 "Menubutton.clipboard_append")
  '(token                 "Message.clipboard_append")
  '(token                 "Message_Window.clipboard_append")
  '(token                 "Misc.clipboard_append")
  '(token                 "Multicombobox.clipboard_append")
  '(token                 "Multicombobox_X.clipboard_append")
  '(token                 "Notebook.clipboard_append")
  '(token                 "Num_Spinner.clipboard_append")
  '(token                 "OptionMenu.clipboard_append")
  '(token                 "Progress_Gauge.clipboard_append")
  '(token                 "Progress_Gauge_T.clipboard_append")
  '(token                 "Radiobutton.clipboard_append")
  '(token                 "Scale.clipboard_append")
  '(token                 "Scrollbar.clipboard_append")
  '(token                 "Scrolled_Listbox.clipboard_append")
  '(token                 "Scrolled_Text.clipboard_append")
  '(token                 "Slide_Show.clipboard_append")
  '(token                 "Statuslabel.clipboard_append")
  '(token                 "Statuslabel.Label.clipboard_append")
  '(token                 "Statustext.clipboard_append")
  '(token                 "Statustext.Text.clipboard_append")
  '(token                 "Studbutton.clipboard_append")
  '(token                 "Tabbed_Notebook.clipboard_append")
  '(token                 "Text.clipboard_append")
  '(token                 "Tk.clipboard_append")
  '(token                 "Toplevel.clipboard_append")
  '(token                 "Tributton.clipboard_append")
  '(token                 "Up_Down_Button.clipboard_append")
  '(token                 "V_Panedwindow.clipboard_append")
  '(token                 "V_Panedwindow.H_Separator.clipboard_append")
  '(token                 "V_Scrollable.clipboard_append")
  '(token                 "V_Separator.clipboard_append")
  '(token                 "V_Strut.clipboard_append")
  '(token                 "Widget.clipboard_append")
  '(token                 "_C_Frame.clipboard_append")
  '(token                 "_Combobox.Scrolled_Listbox.clipboard_append")
  '(token                 "_Panedwindow.clipboard_append")
  '(token                 "_Scrollable.clipboard_append")
  '(token                 "_Separator.clipboard_append")
  '(token                 "_Spinnerentry.clipboard_append")
  '(token                 "_Statusframe.clipboard_append")
  '(replacement           "clipboard_append («Misc.clipboard_append:string», ««py-named-arg»»···)")
;;; clipboard_append(string,kw)
)

(lse-define-fill-in "clipboard_clear(kw)" 
  '(token)
  '(token                 "Balloon.clipboard_clear")
  '(token                 "BaseWidget.clipboard_clear")
  '(token                 "Button.clipboard_clear")
  '(token                 "Buttonbox.clipboard_clear")
  '(token                 "C_Entry.clipboard_clear")
  '(token                 "C_Frame.clipboard_clear")
  '(token                 "C_Listbox.clipboard_clear")
  '(token                 "C_Menu.clipboard_clear")
  '(token                 "C_Text.clipboard_clear")
  '(token                 "Canvas.clipboard_clear")
  '(token                 "Checkbutton.clipboard_clear")
  '(token                 "Combo_Tuple.clipboard_clear")
  '(token                 "Combo_Tuple_X.clipboard_clear")
  '(token                 "Combobox.clipboard_clear")
  '(token                 "Entry.clipboard_clear")
  '(token                 "Entrybox.clipboard_clear")
  '(token                 "Filename_Entry.clipboard_clear")
  '(token                 "Frame.clipboard_clear")
  '(token                 "H_Panedwindow.clipboard_clear")
  '(token                 "H_Panedwindow.V_Separator.clipboard_clear")
  '(token                 "H_Scrollable.clipboard_clear")
  '(token                 "H_Separator.clipboard_clear")
  '(token                 "H_Strut.clipboard_clear")
  '(token                 "Label.clipboard_clear")
  '(token                 "Listbox.clipboard_clear")
  '(token                 "Listbox_Tuple.clipboard_clear")
  '(token                 "Listdropentry.clipboard_clear")
  '(token                 "Listdropspinner.clipboard_clear")
  '(token                 "Listspinner.clipboard_clear")
  '(token                 "Menu.clipboard_clear")
  '(token                 "Menubutton.clipboard_clear")
  '(token                 "Message.clipboard_clear")
  '(token                 "Message_Window.clipboard_clear")
  '(token                 "Misc.clipboard_clear")
  '(token                 "Multicombobox.clipboard_clear")
  '(token                 "Multicombobox_X.clipboard_clear")
  '(token                 "Notebook.clipboard_clear")
  '(token                 "Num_Spinner.clipboard_clear")
  '(token                 "OptionMenu.clipboard_clear")
  '(token                 "Progress_Gauge.clipboard_clear")
  '(token                 "Progress_Gauge_T.clipboard_clear")
  '(token                 "Radiobutton.clipboard_clear")
  '(token                 "Scale.clipboard_clear")
  '(token                 "Scrollbar.clipboard_clear")
  '(token                 "Scrolled_Listbox.clipboard_clear")
  '(token                 "Scrolled_Text.clipboard_clear")
  '(token                 "Slide_Show.clipboard_clear")
  '(token                 "Statuslabel.clipboard_clear")
  '(token                 "Statuslabel.Label.clipboard_clear")
  '(token                 "Statustext.clipboard_clear")
  '(token                 "Statustext.Text.clipboard_clear")
  '(token                 "Studbutton.clipboard_clear")
  '(token                 "Tabbed_Notebook.clipboard_clear")
  '(token                 "Text.clipboard_clear")
  '(token                 "Tk.clipboard_clear")
  '(token                 "Toplevel.clipboard_clear")
  '(token                 "Tributton.clipboard_clear")
  '(token                 "Up_Down_Button.clipboard_clear")
  '(token                 "V_Panedwindow.clipboard_clear")
  '(token                 "V_Panedwindow.H_Separator.clipboard_clear")
  '(token                 "V_Scrollable.clipboard_clear")
  '(token                 "V_Separator.clipboard_clear")
  '(token                 "V_Strut.clipboard_clear")
  '(token                 "Widget.clipboard_clear")
  '(token                 "_C_Frame.clipboard_clear")
  '(token                 "_Combobox.Scrolled_Listbox.clipboard_clear")
  '(token                 "_Panedwindow.clipboard_clear")
  '(token                 "_Scrollable.clipboard_clear")
  '(token                 "_Separator.clipboard_clear")
  '(token                 "_Spinnerentry.clipboard_clear")
  '(token                 "_Statusframe.clipboard_clear")
  '(replacement           "clipboard_clear (««py-named-arg»»···)")
;;; clipboard_clear(kw)
)

(lse-define-fill-in "Wm.colormapwindows:wlist" 
  '(description           "Argument 1 of Wm.colormapwindows")
  '(leading               ",")
  '(separator             ", ")
;;; Wm.colormapwindows:wlist
)

(lse-define-fill-in "colormapwindows(wlist)" 
  '(token)
  '(token                 "Balloon.colormapwindows")
  '(token                 "Progress_Gauge_T.colormapwindows")
  '(token                 "Tk.colormapwindows")
  '(token                 "Toplevel.colormapwindows")
  '(token                 "Wm.colormapwindows")
  '(replacement           "colormapwindows (««Wm.colormapwindows:wlist»»···)")
;;; colormapwindows(wlist)
)

(lse-define-fill-in "Misc.colormodel:value" 
  '(description           "Argument 1 of Misc.colormodel (default = None)")
  '(leading               ",")
;;; Misc.colormodel:value
)

(lse-define-fill-in "colormodel(value)" 
  '(token)
  '(token                 "Balloon.colormodel")
  '(token                 "BaseWidget.colormodel")
  '(token                 "Button.colormodel")
  '(token                 "Buttonbox.colormodel")
  '(token                 "C_Entry.colormodel")
  '(token                 "C_Frame.colormodel")
  '(token                 "C_Listbox.colormodel")
  '(token                 "C_Menu.colormodel")
  '(token                 "C_Text.colormodel")
  '(token                 "Canvas.colormodel")
  '(token                 "Checkbutton.colormodel")
  '(token                 "Combo_Tuple.colormodel")
  '(token                 "Combo_Tuple_X.colormodel")
  '(token                 "Combobox.colormodel")
  '(token                 "Entry.colormodel")
  '(token                 "Entrybox.colormodel")
  '(token                 "Filename_Entry.colormodel")
  '(token                 "Frame.colormodel")
  '(token                 "H_Panedwindow.colormodel")
  '(token                 "H_Panedwindow.V_Separator.colormodel")
  '(token                 "H_Scrollable.colormodel")
  '(token                 "H_Separator.colormodel")
  '(token                 "H_Strut.colormodel")
  '(token                 "Label.colormodel")
  '(token                 "Listbox.colormodel")
  '(token                 "Listbox_Tuple.colormodel")
  '(token                 "Listdropentry.colormodel")
  '(token                 "Listdropspinner.colormodel")
  '(token                 "Listspinner.colormodel")
  '(token                 "Menu.colormodel")
  '(token                 "Menubutton.colormodel")
  '(token                 "Message.colormodel")
  '(token                 "Message_Window.colormodel")
  '(token                 "Misc.colormodel")
  '(token                 "Multicombobox.colormodel")
  '(token                 "Multicombobox_X.colormodel")
  '(token                 "Notebook.colormodel")
  '(token                 "Num_Spinner.colormodel")
  '(token                 "OptionMenu.colormodel")
  '(token                 "Progress_Gauge.colormodel")
  '(token                 "Progress_Gauge_T.colormodel")
  '(token                 "Radiobutton.colormodel")
  '(token                 "Scale.colormodel")
  '(token                 "Scrollbar.colormodel")
  '(token                 "Scrolled_Listbox.colormodel")
  '(token                 "Scrolled_Text.colormodel")
  '(token                 "Slide_Show.colormodel")
  '(token                 "Statuslabel.colormodel")
  '(token                 "Statuslabel.Label.colormodel")
  '(token                 "Statustext.colormodel")
  '(token                 "Statustext.Text.colormodel")
  '(token                 "Studbutton.colormodel")
  '(token                 "Tabbed_Notebook.colormodel")
  '(token                 "Text.colormodel")
  '(token                 "Tk.colormodel")
  '(token                 "Toplevel.colormodel")
  '(token                 "Tributton.colormodel")
  '(token                 "Up_Down_Button.colormodel")
  '(token                 "V_Panedwindow.colormodel")
  '(token                 "V_Panedwindow.H_Separator.colormodel")
  '(token                 "V_Scrollable.colormodel")
  '(token                 "V_Separator.colormodel")
  '(token                 "V_Strut.colormodel")
  '(token                 "Widget.colormodel")
  '(token                 "_C_Frame.colormodel")
  '(token                 "_Combobox.Scrolled_Listbox.colormodel")
  '(token                 "_Panedwindow.colormodel")
  '(token                 "_Scrollable.colormodel")
  '(token                 "_Separator.colormodel")
  '(token                 "_Spinnerentry.colormodel")
  '(token                 "_Statusframe.colormodel")
  '(replacement           "colormodel (««Misc.colormodel:value»»)")
;;; colormodel(value)
)

(lse-define-fill-in "Misc.columnconfigure:index" 
  '(description           "Argument 1 of Misc.columnconfigure")
  '(leading               ",")
;;; Misc.columnconfigure:index
)

(lse-define-fill-in "Misc.columnconfigure:cnf" 
  '(description           "Argument 2 of Misc.columnconfigure (default = {})")
  '(leading               ",")
;;; Misc.columnconfigure:cnf
)

(lse-define-fill-in "columnconfigure(index,cnf,kw)" 
  '(token)
  '(token                 "Balloon.columnconfigure")
  '(token                 "BaseWidget.columnconfigure")
  '(token                 "Button.columnconfigure")
  '(token                 "Buttonbox.columnconfigure")
  '(token                 "C_Entry.columnconfigure")
  '(token                 "C_Frame.columnconfigure")
  '(token                 "C_Listbox.columnconfigure")
  '(token                 "C_Menu.columnconfigure")
  '(token                 "C_Text.columnconfigure")
  '(token                 "Canvas.columnconfigure")
  '(token                 "Checkbutton.columnconfigure")
  '(token                 "Combo_Tuple.columnconfigure")
  '(token                 "Combo_Tuple_X.columnconfigure")
  '(token                 "Combobox.columnconfigure")
  '(token                 "Entry.columnconfigure")
  '(token                 "Entrybox.columnconfigure")
  '(token                 "Filename_Entry.columnconfigure")
  '(token                 "Frame.columnconfigure")
  '(token                 "Grid.columnconfigure")
  '(token                 "H_Panedwindow.columnconfigure")
  '(token                 "H_Panedwindow.V_Separator.columnconfigure")
  '(token                 "H_Scrollable.columnconfigure")
  '(token                 "H_Separator.columnconfigure")
  '(token                 "H_Strut.columnconfigure")
  '(token                 "Label.columnconfigure")
  '(token                 "Listbox.columnconfigure")
  '(token                 "Listbox_Tuple.columnconfigure")
  '(token                 "Listdropentry.columnconfigure")
  '(token                 "Listdropspinner.columnconfigure")
  '(token                 "Listspinner.columnconfigure")
  '(token                 "Menu.columnconfigure")
  '(token                 "Menubutton.columnconfigure")
  '(token                 "Message.columnconfigure")
  '(token                 "Message_Window.columnconfigure")
  '(token                 "Misc.columnconfigure")
  '(token                 "Multicombobox.columnconfigure")
  '(token                 "Multicombobox_X.columnconfigure")
  '(token                 "Notebook.columnconfigure")
  '(token                 "Num_Spinner.columnconfigure")
  '(token                 "OptionMenu.columnconfigure")
  '(token                 "Progress_Gauge.columnconfigure")
  '(token                 "Progress_Gauge_T.columnconfigure")
  '(token                 "Radiobutton.columnconfigure")
  '(token                 "Scale.columnconfigure")
  '(token                 "Scrollbar.columnconfigure")
  '(token                 "Scrolled_Listbox.columnconfigure")
  '(token                 "Scrolled_Text.columnconfigure")
  '(token                 "Slide_Show.columnconfigure")
  '(token                 "Statuslabel.columnconfigure")
  '(token                 "Statuslabel.Label.columnconfigure")
  '(token                 "Statustext.columnconfigure")
  '(token                 "Statustext.Text.columnconfigure")
  '(token                 "Studbutton.columnconfigure")
  '(token                 "Tabbed_Notebook.columnconfigure")
  '(token                 "Text.columnconfigure")
  '(token                 "Tk.columnconfigure")
  '(token                 "Toplevel.columnconfigure")
  '(token                 "Tributton.columnconfigure")
  '(token                 "Up_Down_Button.columnconfigure")
  '(token                 "V_Panedwindow.columnconfigure")
  '(token                 "V_Panedwindow.H_Separator.columnconfigure")
  '(token                 "V_Scrollable.columnconfigure")
  '(token                 "V_Separator.columnconfigure")
  '(token                 "V_Strut.columnconfigure")
  '(token                 "Widget.columnconfigure")
  '(token                 "_C_Frame.columnconfigure")
  '(token                 "_Combobox.Scrolled_Listbox.columnconfigure")
  '(token                 "_Panedwindow.columnconfigure")
  '(token                 "_Scrollable.columnconfigure")
  '(token                 "_Separator.columnconfigure")
  '(token                 "_Spinnerentry.columnconfigure")
  '(token                 "_Statusframe.columnconfigure")
  '(replacement           "columnconfigure («Misc.columnconfigure:index», ««Misc.columnconfigure:cnf»», ««py-named-arg»»···)")
;;; columnconfigure(index,cnf,kw)
)

(lse-define-fill-in "Wm.command:value" 
  '(description           "Argument 1 of Wm.command (default = None)")
  '(leading               ",")
;;; Wm.command:value
)

(lse-define-fill-in "command(value)" 
  '(token)
  '(token                 "Balloon.command")
  '(token                 "Progress_Gauge_T.command")
  '(token                 "Tk.command")
  '(token                 "Toplevel.command")
  '(token                 "Wm.command")
  '(replacement           "command (««Wm.command:value»»)")
;;; command(value)
)

(lse-define-fill-in "Statustext.Text.compare:index1" 
  '(description           "Argument 1 of Statustext.Text.compare")
  '(leading               ",")
;;; Statustext.Text.compare:index1
)

(lse-define-fill-in "Statustext.Text.compare:op" 
  '(description           "Argument 2 of Statustext.Text.compare")
  '(leading               ",")
;;; Statustext.Text.compare:op
)

(lse-define-fill-in "Statustext.Text.compare:index2" 
  '(description           "Argument 3 of Statustext.Text.compare")
  '(leading               ",")
;;; Statustext.Text.compare:index2
)

(lse-define-fill-in "compare(index1,op,index2)" 
  '(token)
  '(token                 "Statustext.Text.compare")
  '(token                 "Text.compare")
  '(replacement           "compare («Statustext.Text.compare:index1», «Statustext.Text.compare:op», «Statustext.Text.compare:index2»)")
;;; compare(index1,op,index2)
)

(lse-define-fill-in "Combo_Entry.complete:event" 
  '(description           "Argument 1 of Combo_Entry.complete (default = None)")
  '(leading               ",")
;;; Combo_Entry.complete:event
)

(lse-define-fill-in "complete(event)" 
  '(token)
  '(token                 "Combo_Entry.complete")
  '(token                 "Combobox.complete")
  '(token                 "Listdropentry.complete")
  '(token                 "Listspinner.complete")
  '(token                 "Multicombobox.complete")
  '(token                 "Multicombobox_X.complete")
  '(token                 "_Combobox.complete")
  '(replacement           "complete (««Combo_Entry.complete:event»»)")
;;; complete(event)
)

(lse-define-fill-in "CanvasItem.config:cnf" 
  '(description           "Argument 1 of CanvasItem.config (default = {})")
  '(leading               ",")
;;; CanvasItem.config:cnf
)

(lse-define-fill-in "config(cnf,kw)" 
  '(token)
  '(token                 "Arc.config")
  '(token                 "Bitmap.config")
  '(token                 "CanvasItem.config")
  '(token                 "CanvasText.config")
  '(token                 "Grid.config")
  '(token                 "Group.config")
  '(token                 "ImageItem.config")
  '(token                 "Line.config")
  '(token                 "Misc.config")
  '(token                 "Oval.config")
  '(token                 "Pack.config")
  '(token                 "Place.config")
  '(token                 "Polygon.config")
  '(token                 "Rectangle.config")
  '(token                 "Window.config")
  '(replacement           "config (««CanvasItem.config:cnf»», ««py-named-arg»»···)")
;;; config(cnf,kw)
)

(lse-define-fill-in "config(kw)" 
  '(token)
  '(token                 "BitmapImage.config")
  '(token                 "Image.config")
  '(token                 "PhotoImage.config")
  '(replacement           "config (««py-named-arg»»···)")
;;; config(kw)
)

(lse-define-fill-in "H_Panedwindow.V_Separator.config_span:event" 
  '(description           "Argument 1 of H_Panedwindow.V_Separator.config_span (default = None)")
  '(leading               ",")
;;; H_Panedwindow.V_Separator.config_span:event
)

(lse-define-fill-in "config_span(event)" 
  '(token)
  '(token                 "H_Panedwindow.V_Separator.config_span")
  '(token                 "H_Separator.config_span")
  '(token                 "V_Panedwindow.H_Separator.config_span")
  '(token                 "V_Separator.config_span")
  '(replacement           "config_span (««H_Panedwindow.V_Separator.config_span:event»»)")
;;; config_span(event)
)

(lse-define-fill-in "Misc.configure:cnf" 
  '(description           "Argument 1 of Misc.configure (default = None)")
  '(leading               ",")
;;; Misc.configure:cnf
)

(lse-define-fill-in "configure(cnf,kw)" 
  '(token)
  '(token                 "Balloon.configure")
  '(token                 "BaseWidget.configure")
  '(token                 "Button.configure")
  '(token                 "Buttonbox.configure")
  '(token                 "C_Entry.configure")
  '(token                 "C_Frame.configure")
  '(token                 "C_Listbox.configure")
  '(token                 "C_Menu.configure")
  '(token                 "C_Text.configure")
  '(token                 "Canvas.configure")
  '(token                 "Checkbutton.configure")
  '(token                 "Combo_Tuple.configure")
  '(token                 "Combo_Tuple_X.configure")
  '(token                 "Combobox.configure")
  '(token                 "Entry.configure")
  '(token                 "Entrybox.configure")
  '(token                 "Filename_Entry.configure")
  '(token                 "Frame.configure")
  '(token                 "Grid.configure")
  '(token                 "H_Panedwindow.configure")
  '(token                 "H_Panedwindow.V_Separator.configure")
  '(token                 "H_Scrollable.configure")
  '(token                 "H_Separator.configure")
  '(token                 "H_Strut.configure")
  '(token                 "Label.configure")
  '(token                 "Listbox.configure")
  '(token                 "Listbox_Tuple.configure")
  '(token                 "Listdropentry.configure")
  '(token                 "Listdropspinner.configure")
  '(token                 "Listspinner.configure")
  '(token                 "Menu.configure")
  '(token                 "Menubutton.configure")
  '(token                 "Message.configure")
  '(token                 "Message_Window.configure")
  '(token                 "Misc.configure")
  '(token                 "Multicombobox.configure")
  '(token                 "Multicombobox_X.configure")
  '(token                 "Notebook.configure")
  '(token                 "Num_Spinner.configure")
  '(token                 "OptionMenu.configure")
  '(token                 "Pack.configure")
  '(token                 "Place.configure")
  '(token                 "Progress_Gauge.configure")
  '(token                 "Progress_Gauge_T.configure")
  '(token                 "Radiobutton.configure")
  '(token                 "Scale.configure")
  '(token                 "Scrollbar.configure")
  '(token                 "Scrolled_Listbox.configure")
  '(token                 "Scrolled_Text.configure")
  '(token                 "Slide_Show.configure")
  '(token                 "Statuslabel.configure")
  '(token                 "Statuslabel.Label.configure")
  '(token                 "Statustext.configure")
  '(token                 "Statustext.Text.configure")
  '(token                 "Studbutton.configure")
  '(token                 "Tabbed_Notebook.configure")
  '(token                 "Text.configure")
  '(token                 "Tk.configure")
  '(token                 "Toplevel.configure")
  '(token                 "Tributton.configure")
  '(token                 "Up_Down_Button.configure")
  '(token                 "V_Panedwindow.configure")
  '(token                 "V_Panedwindow.H_Separator.configure")
  '(token                 "V_Scrollable.configure")
  '(token                 "V_Separator.configure")
  '(token                 "V_Strut.configure")
  '(token                 "Widget.configure")
  '(token                 "_C_Frame.configure")
  '(token                 "_Combobox.Scrolled_Listbox.configure")
  '(token                 "_Panedwindow.configure")
  '(token                 "_Scrollable.configure")
  '(token                 "_Separator.configure")
  '(token                 "_Spinnerentry.configure")
  '(token                 "_Statusframe.configure")
  '(replacement           "configure (««Misc.configure:cnf»», ««py-named-arg»»···)")
;;; configure(cnf,kw)
)

(lse-define-fill-in "configure(kw)" 
  '(token)
  '(token                 "BitmapImage.configure")
  '(token                 "Image.configure")
  '(token                 "PhotoImage.configure")
  '(replacement           "configure (««py-named-arg»»···)")
;;; configure(kw)
)

(lse-define-fill-in "Canvas.coords:args" 
  '(description           "Argument 1 of Canvas.coords")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.coords:args
)

(lse-define-fill-in "coords(args)" 
  '(token)
  '(token                 "Canvas.coords")
  '(replacement           "coords (««Canvas.coords:args»»···)")
;;; coords(args)
)

(lse-define-fill-in "CanvasItem.coords:pts" 
  '(description           "Argument 1 of CanvasItem.coords (default = ())")
  '(leading               ",")
;;; CanvasItem.coords:pts
)

(lse-define-fill-in "coords(pts)" 
  '(token)
  '(token                 "Arc.coords")
  '(token                 "Bitmap.coords")
  '(token                 "CanvasItem.coords")
  '(token                 "CanvasText.coords")
  '(token                 "Group.coords")
  '(token                 "ImageItem.coords")
  '(token                 "Line.coords")
  '(token                 "Oval.coords")
  '(token                 "Polygon.coords")
  '(token                 "Rectangle.coords")
  '(token                 "Window.coords")
  '(replacement           "coords (««CanvasItem.coords:pts»»)")
;;; coords(pts)
)

(lse-define-fill-in "copy()" 
  '(token)
  '(token                 "PhotoImage.copy")
  '(replacement           "copy ()")
;;; copy()
)

(lse-define-fill-in "Canvas.create_arc:args" 
  '(description           "Argument 1 of Canvas.create_arc")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.create_arc:args
)

(lse-define-fill-in "create_arc(args,kw)" 
  '(token)
  '(token                 "Canvas.create_arc")
  '(replacement           "create_arc (««Canvas.create_arc:args»»···, ««py-named-arg»»···)")
;;; create_arc(args,kw)
)

(lse-define-fill-in "Canvas.create_bitmap:args" 
  '(description           "Argument 1 of Canvas.create_bitmap")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.create_bitmap:args
)

(lse-define-fill-in "create_bitmap(args,kw)" 
  '(token)
  '(token                 "Canvas.create_bitmap")
  '(replacement           "create_bitmap (««Canvas.create_bitmap:args»»···, ««py-named-arg»»···)")
;;; create_bitmap(args,kw)
)

(lse-define-fill-in "Canvas.create_image:args" 
  '(description           "Argument 1 of Canvas.create_image")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.create_image:args
)

(lse-define-fill-in "create_image(args,kw)" 
  '(token)
  '(token                 "Canvas.create_image")
  '(replacement           "create_image (««Canvas.create_image:args»»···, ««py-named-arg»»···)")
;;; create_image(args,kw)
)

(lse-define-fill-in "Canvas.create_line:args" 
  '(description           "Argument 1 of Canvas.create_line")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.create_line:args
)

(lse-define-fill-in "create_line(args,kw)" 
  '(token)
  '(token                 "Canvas.create_line")
  '(replacement           "create_line (««Canvas.create_line:args»»···, ««py-named-arg»»···)")
;;; create_line(args,kw)
)

(lse-define-fill-in "Canvas.create_oval:args" 
  '(description           "Argument 1 of Canvas.create_oval")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.create_oval:args
)

(lse-define-fill-in "create_oval(args,kw)" 
  '(token)
  '(token                 "Canvas.create_oval")
  '(replacement           "create_oval (««Canvas.create_oval:args»»···, ««py-named-arg»»···)")
;;; create_oval(args,kw)
)

(lse-define-fill-in "Canvas.create_polygon:args" 
  '(description           "Argument 1 of Canvas.create_polygon")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.create_polygon:args
)

(lse-define-fill-in "create_polygon(args,kw)" 
  '(token)
  '(token                 "Canvas.create_polygon")
  '(replacement           "create_polygon (««Canvas.create_polygon:args»»···, ««py-named-arg»»···)")
;;; create_polygon(args,kw)
)

(lse-define-fill-in "Canvas.create_rectangle:args" 
  '(description           "Argument 1 of Canvas.create_rectangle")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.create_rectangle:args
)

(lse-define-fill-in "create_rectangle(args,kw)" 
  '(token)
  '(token                 "Canvas.create_rectangle")
  '(replacement           "create_rectangle (««Canvas.create_rectangle:args»»···, ««py-named-arg»»···)")
;;; create_rectangle(args,kw)
)

(lse-define-fill-in "Canvas.create_text:args" 
  '(description           "Argument 1 of Canvas.create_text")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.create_text:args
)

(lse-define-fill-in "create_text(args,kw)" 
  '(token)
  '(token                 "Canvas.create_text")
  '(replacement           "create_text (««Canvas.create_text:args»»···, ««py-named-arg»»···)")
;;; create_text(args,kw)
)

(lse-define-fill-in "Canvas.create_window:args" 
  '(description           "Argument 1 of Canvas.create_window")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.create_window:args
)

(lse-define-fill-in "create_window(args,kw)" 
  '(token)
  '(token                 "Canvas.create_window")
  '(replacement           "create_window (««Canvas.create_window:args»»···, ««py-named-arg»»···)")
;;; create_window(args,kw)
)

(lse-define-fill-in "curselection()" 
  '(token)
  '(token                 "Listbox.curselection")
  '(replacement           "curselection ()")
;;; curselection()
)

(lse-define-fill-in "Canvas.dchars:args" 
  '(description           "Argument 1 of Canvas.dchars")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.dchars:args
)

(lse-define-fill-in "dchars(args)" 
  '(token)
  '(token                 "Canvas.dchars")
  '(replacement           "dchars (««Canvas.dchars:args»»···)")
;;; dchars(args)
)

(lse-define-fill-in "CanvasItem.dchars:first" 
  '(description           "Argument 1 of CanvasItem.dchars")
  '(leading               ",")
;;; CanvasItem.dchars:first
)

(lse-define-fill-in "CanvasItem.dchars:last" 
  '(description           "Argument 2 of CanvasItem.dchars (default = None)")
  '(leading               ",")
;;; CanvasItem.dchars:last
)

(lse-define-fill-in "dchars(first,last)" 
  '(token)
  '(token                 "Arc.dchars")
  '(token                 "Bitmap.dchars")
  '(token                 "CanvasItem.dchars")
  '(token                 "CanvasText.dchars")
  '(token                 "Group.dchars")
  '(token                 "ImageItem.dchars")
  '(token                 "Line.dchars")
  '(token                 "Oval.dchars")
  '(token                 "Polygon.dchars")
  '(token                 "Rectangle.dchars")
  '(token                 "Window.dchars")
  '(replacement           "dchars («CanvasItem.dchars:first», ««CanvasItem.dchars:last»»)")
;;; dchars(first,last)
)

(lse-define-fill-in "deactivate()" 
  '(token)
  '(token                 "Balloon.deactivate")
  '(token                 "Buttonbox.deactivate")
  '(token                 "Progress_Gauge.deactivate")
  '(token                 "Progress_Gauge_T.deactivate")
  '(token                 "Statuslabel.deactivate")
  '(token                 "Statustext.deactivate")
  '(replacement           "deactivate ()")
;;; deactivate()
)

(lse-define-fill-in "C_Menu.deactivate_help:event" 
  '(description           "Argument 1 of C_Menu.deactivate_help (default = None)")
  '(leading               ",")
;;; C_Menu.deactivate_help:event
)

(lse-define-fill-in "deactivate_help(event)" 
  '(token)
  '(token                 "C_Menu.deactivate_help")
  '(replacement           "deactivate_help (««C_Menu.deactivate_help:event»»)")
;;; deactivate_help(event)
)

(lse-define-fill-in "Statustext.Text.debug:boolean" 
  '(description           "Argument 1 of Statustext.Text.debug (default = None)")
  '(leading               ",")
;;; Statustext.Text.debug:boolean
)

(lse-define-fill-in "debug(boolean)" 
  '(token)
  '(token                 "Statustext.Text.debug")
  '(token                 "Text.debug")
  '(replacement           "debug (««Statustext.Text.debug:boolean»»)")
;;; debug(boolean)
)

(lse-define-fill-in "CT_TK_mixin.define_edit_menu:master" 
  '(description           "Argument 1 of CT_TK_mixin.define_edit_menu")
  '(leading               ",")
;;; CT_TK_mixin.define_edit_menu:master
)

(lse-define-fill-in "CT_TK_mixin.define_edit_menu:menu_class" 
  '(description           "Argument 2 of CT_TK_mixin.define_edit_menu (default = Tkinter.Menu)")
  '(leading               ",")
;;; CT_TK_mixin.define_edit_menu:menu_class
)

(lse-define-fill-in "define_edit_menu(master,menu_class,kw)" 
  '(description           "Define a menu for cut/copy/paste functions.")
  '(token)
  '(token                 "Balloon.define_edit_menu")
  '(token                 "Buttonbox.define_edit_menu")
  '(token                 "CT_TK_mixin.define_edit_menu")
  '(token                 "C_Entry.define_edit_menu")
  '(token                 "C_Frame.define_edit_menu")
  '(token                 "C_Listbox.define_edit_menu")
  '(token                 "C_Menu.define_edit_menu")
  '(token                 "C_Text.define_edit_menu")
  '(token                 "Combo_Tuple.define_edit_menu")
  '(token                 "Combo_Tuple_X.define_edit_menu")
  '(token                 "Combobox.define_edit_menu")
  '(token                 "Entrybox.define_edit_menu")
  '(token                 "Filename_Entry.define_edit_menu")
  '(token                 "H_Panedwindow.define_edit_menu")
  '(token                 "H_Panedwindow.V_Separator.define_edit_menu")
  '(token                 "H_Scrollable.define_edit_menu")
  '(token                 "H_Separator.define_edit_menu")
  '(token                 "H_Strut.define_edit_menu")
  '(token                 "Listbox_Tuple.define_edit_menu")
  '(token                 "Listdropentry.define_edit_menu")
  '(token                 "Listdropspinner.define_edit_menu")
  '(token                 "Listspinner.define_edit_menu")
  '(token                 "Message_Window.define_edit_menu")
  '(token                 "Multicombobox.define_edit_menu")
  '(token                 "Multicombobox_X.define_edit_menu")
  '(token                 "Notebook.define_edit_menu")
  '(token                 "Num_Spinner.define_edit_menu")
  '(token                 "Progress_Gauge.define_edit_menu")
  '(token                 "Progress_Gauge_T.define_edit_menu")
  '(token                 "Scrolled_Listbox.define_edit_menu")
  '(token                 "Scrolled_Text.define_edit_menu")
  '(token                 "Slide_Show.define_edit_menu")
  '(token                 "Statuslabel.define_edit_menu")
  '(token                 "Statustext.define_edit_menu")
  '(token                 "Tabbed_Notebook.define_edit_menu")
  '(token                 "Up_Down_Button.define_edit_menu")
  '(token                 "V_Panedwindow.define_edit_menu")
  '(token                 "V_Panedwindow.H_Separator.define_edit_menu")
  '(token                 "V_Scrollable.define_edit_menu")
  '(token                 "V_Separator.define_edit_menu")
  '(token                 "V_Strut.define_edit_menu")
  '(token                 "_C_Frame.define_edit_menu")
  '(token                 "_Combobox.define_edit_menu")
  '(token                 "_Combobox.Scrolled_Listbox.define_edit_menu")
  '(token                 "_Listdrop.define_edit_menu")
  '(token                 "_Listspinner.define_edit_menu")
  '(token                 "_Panedwindow.define_edit_menu")
  '(token                 "_Scrollable.define_edit_menu")
  '(token                 "_Separator.define_edit_menu")
  '(token                 "_Spinner.define_edit_menu")
  '(token                 "_Spinnerentry.define_edit_menu")
  '(token                 "_Statusframe.define_edit_menu")
  '(replacement           "define_edit_menu («CT_TK_mixin.define_edit_menu:master», ««CT_TK_mixin.define_edit_menu:menu_class»», ««py-named-arg»»···)")
;;; define_edit_menu(master,menu_class,kw)
)

(lse-define-fill-in "deiconify()" 
  '(token)
  '(token                 "Balloon.deiconify")
  '(token                 "Progress_Gauge_T.deiconify")
  '(token                 "Tk.deiconify")
  '(token                 "Toplevel.deiconify")
  '(token                 "Wm.deiconify")
  '(replacement           "deiconify ()")
;;; deiconify()
)

(lse-define-fill-in "delete()" 
  '(token)
  '(token                 "Arc.delete")
  '(token                 "Bitmap.delete")
  '(token                 "CanvasItem.delete")
  '(token                 "CanvasText.delete")
  '(token                 "Group.delete")
  '(token                 "ImageItem.delete")
  '(token                 "Line.delete")
  '(token                 "Oval.delete")
  '(token                 "Polygon.delete")
  '(token                 "Rectangle.delete")
  '(token                 "Window.delete")
  '(replacement           "delete ()")
;;; delete()
)

(lse-define-fill-in "Canvas.delete:args" 
  '(description           "Argument 1 of Canvas.delete")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.delete:args
)

(lse-define-fill-in "delete(args)" 
  '(token)
  '(token                 "Canvas.delete")
  '(replacement           "delete (««Canvas.delete:args»»···)")
;;; delete(args)
)

(lse-define-fill-in "C_Text.delete:args" 
  '(description           "Argument 1 of C_Text.delete")
  '(leading               ",")
  '(separator             ", ")
;;; C_Text.delete:args
)

(lse-define-fill-in "delete(args,kw)" 
  '(description           "Delete text from `self.body'.")
  '(token)
  '(token                 "C_Text.delete")
  '(token                 "Message_Window.delete")
  '(token                 "Scrolled_Text.delete")
  '(replacement           "delete (««C_Text.delete:args»»···, ««py-named-arg»»···)")
;;; delete(args,kw)
)

(lse-define-fill-in "C_Listbox.delete:first" 
  '(description           "Argument 1 of C_Listbox.delete")
  '(leading               ",")
;;; C_Listbox.delete:first
)

(lse-define-fill-in "C_Listbox.delete:last" 
  '(description           "Argument 2 of C_Listbox.delete (default = None)")
  '(leading               ",")
;;; C_Listbox.delete:last
)

(lse-define-fill-in "delete(first,last)" 
  '(token)
  '(token                 "C_Listbox.delete")
  '(token                 "Entry.delete")
  '(token                 "Listbox.delete")
  '(token                 "Scrolled_Listbox.delete")
  '(token                 "_Combobox.Scrolled_Listbox.delete")
  '(token                 "_Listbox_Tuple.delete")
  '(replacement           "delete («C_Listbox.delete:first», ««C_Listbox.delete:last»»)")
;;; delete(first,last)
)

(lse-define-fill-in "Combo_Entry.delete:i" 
  '(description           "Argument 1 of Combo_Entry.delete")
  '(leading               ",")
;;; Combo_Entry.delete:i
)

(lse-define-fill-in "delete(i)" 
  '(token)
  '(token                 "Combo_Entry.delete")
  '(token                 "Combobox.delete")
  '(token                 "Multicombobox.delete")
  '(token                 "Multicombobox_X.delete")
  '(token                 "_Combobox.delete")
  '(replacement           "delete («Combo_Entry.delete:i»)")
;;; delete(i)
)

(lse-define-fill-in "Menu.delete:index1" 
  '(description           "Argument 1 of Menu.delete")
  '(leading               ",")
;;; Menu.delete:index1
)

(lse-define-fill-in "Menu.delete:index2" 
  '(description           "Argument 2 of Menu.delete (default = None)")
  '(leading               ",")
;;; Menu.delete:index2
)

(lse-define-fill-in "delete(index1,index2)" 
  '(token)
  '(token                 "C_Menu.delete")
  '(token                 "Menu.delete")
  '(token                 "Statustext.Text.delete")
  '(token                 "Text.delete")
  '(replacement           "delete («Menu.delete:index1», ««Menu.delete:index2»»)")
;;; delete(index1,index2)
)

(lse-define-fill-in "C_Text.delete_tagged:tag" 
  '(description           "Delete all text tagged by `tag'.")
  '(leading               ",")
;;; C_Text.delete_tagged:tag
)

(lse-define-fill-in "delete_tagged(tag)" 
  '(description           "Delete all text tagged by `tag'.")
  '(token)
  '(token                 "C_Text.delete_tagged")
  '(token                 "Message_Window.delete_tagged")
  '(token                 "Scrolled_Text.delete_tagged")
  '(replacement           "delete_tagged («C_Text.delete_tagged:tag»)")
;;; delete_tagged(tag)
)

(lse-define-fill-in "Misc.deletecommand:name" 
  '(description           "Argument 1 of Misc.deletecommand")
  '(leading               ",")
;;; Misc.deletecommand:name
)

(lse-define-fill-in "deletecommand(name)" 
  '(token)
  '(token                 "Balloon.deletecommand")
  '(token                 "BaseWidget.deletecommand")
  '(token                 "Button.deletecommand")
  '(token                 "Buttonbox.deletecommand")
  '(token                 "C_Entry.deletecommand")
  '(token                 "C_Frame.deletecommand")
  '(token                 "C_Listbox.deletecommand")
  '(token                 "C_Menu.deletecommand")
  '(token                 "C_Text.deletecommand")
  '(token                 "Canvas.deletecommand")
  '(token                 "Checkbutton.deletecommand")
  '(token                 "Combo_Tuple.deletecommand")
  '(token                 "Combo_Tuple_X.deletecommand")
  '(token                 "Combobox.deletecommand")
  '(token                 "Entry.deletecommand")
  '(token                 "Entrybox.deletecommand")
  '(token                 "Filename_Entry.deletecommand")
  '(token                 "Frame.deletecommand")
  '(token                 "H_Panedwindow.deletecommand")
  '(token                 "H_Panedwindow.V_Separator.deletecommand")
  '(token                 "H_Scrollable.deletecommand")
  '(token                 "H_Separator.deletecommand")
  '(token                 "H_Strut.deletecommand")
  '(token                 "Label.deletecommand")
  '(token                 "Listbox.deletecommand")
  '(token                 "Listbox_Tuple.deletecommand")
  '(token                 "Listdropentry.deletecommand")
  '(token                 "Listdropspinner.deletecommand")
  '(token                 "Listspinner.deletecommand")
  '(token                 "Menu.deletecommand")
  '(token                 "Menubutton.deletecommand")
  '(token                 "Message.deletecommand")
  '(token                 "Message_Window.deletecommand")
  '(token                 "Misc.deletecommand")
  '(token                 "Multicombobox.deletecommand")
  '(token                 "Multicombobox_X.deletecommand")
  '(token                 "Notebook.deletecommand")
  '(token                 "Num_Spinner.deletecommand")
  '(token                 "OptionMenu.deletecommand")
  '(token                 "Progress_Gauge.deletecommand")
  '(token                 "Progress_Gauge_T.deletecommand")
  '(token                 "Radiobutton.deletecommand")
  '(token                 "Scale.deletecommand")
  '(token                 "Scrollbar.deletecommand")
  '(token                 "Scrolled_Listbox.deletecommand")
  '(token                 "Scrolled_Text.deletecommand")
  '(token                 "Slide_Show.deletecommand")
  '(token                 "Statuslabel.deletecommand")
  '(token                 "Statuslabel.Label.deletecommand")
  '(token                 "Statustext.deletecommand")
  '(token                 "Statustext.Text.deletecommand")
  '(token                 "Studbutton.deletecommand")
  '(token                 "Tabbed_Notebook.deletecommand")
  '(token                 "Text.deletecommand")
  '(token                 "Tk.deletecommand")
  '(token                 "Toplevel.deletecommand")
  '(token                 "Tributton.deletecommand")
  '(token                 "Up_Down_Button.deletecommand")
  '(token                 "V_Panedwindow.deletecommand")
  '(token                 "V_Panedwindow.H_Separator.deletecommand")
  '(token                 "V_Scrollable.deletecommand")
  '(token                 "V_Separator.deletecommand")
  '(token                 "V_Strut.deletecommand")
  '(token                 "Widget.deletecommand")
  '(token                 "_C_Frame.deletecommand")
  '(token                 "_Combobox.Scrolled_Listbox.deletecommand")
  '(token                 "_Panedwindow.deletecommand")
  '(token                 "_Scrollable.deletecommand")
  '(token                 "_Separator.deletecommand")
  '(token                 "_Spinnerentry.deletecommand")
  '(token                 "_Statusframe.deletecommand")
  '(replacement           "deletecommand («Misc.deletecommand:name»)")
;;; deletecommand(name)
)

(lse-define-fill-in "Scrollbar.delta:deltax" 
  '(description           "Argument 1 of Scrollbar.delta")
  '(leading               ",")
;;; Scrollbar.delta:deltax
)

(lse-define-fill-in "Scrollbar.delta:deltay" 
  '(description           "Argument 2 of Scrollbar.delta")
  '(leading               ",")
;;; Scrollbar.delta:deltay
)

(lse-define-fill-in "delta(deltax,deltay)" 
  '(token)
  '(token                 "Scrollbar.delta")
  '(replacement           "delta («Scrollbar.delta:deltax», «Scrollbar.delta:deltay»)")
;;; delta(deltax,deltay)
)

(lse-define-fill-in "deselect()" 
  '(token)
  '(token                 "Checkbutton.deselect")
  '(token                 "Radiobutton.deselect")
  '(replacement           "deselect ()")
;;; deselect()
)

(lse-define-fill-in "destroy()" 
  '(token)
  '(token                 "Balloon.destroy")
  '(token                 "BaseWidget.destroy")
  '(token                 "Button.destroy")
  '(token                 "Buttonbox.destroy")
  '(token                 "C_Entry.destroy")
  '(token                 "C_Frame.destroy")
  '(token                 "C_Listbox.destroy")
  '(token                 "C_Menu.destroy")
  '(token                 "C_Text.destroy")
  '(token                 "Canvas.destroy")
  '(token                 "Checkbutton.destroy")
  '(token                 "Combo_Tuple.destroy")
  '(token                 "Combo_Tuple_X.destroy")
  '(token                 "Combobox.destroy")
  '(token                 "Entry.destroy")
  '(token                 "Entrybox.destroy")
  '(token                 "Filename_Entry.destroy")
  '(token                 "Frame.destroy")
  '(token                 "H_Panedwindow.destroy")
  '(token                 "H_Panedwindow.V_Separator.destroy")
  '(token                 "H_Scrollable.destroy")
  '(token                 "H_Separator.destroy")
  '(token                 "H_Strut.destroy")
  '(token                 "Label.destroy")
  '(token                 "Listbox.destroy")
  '(token                 "Listbox_Tuple.destroy")
  '(token                 "Listdropentry.destroy")
  '(token                 "Listdropspinner.destroy")
  '(token                 "Listspinner.destroy")
  '(token                 "Menu.destroy")
  '(token                 "Menubutton.destroy")
  '(token                 "Message.destroy")
  '(token                 "Message_Window.destroy")
  '(token                 "Misc.destroy")
  '(token                 "Multicombobox.destroy")
  '(token                 "Multicombobox_X.destroy")
  '(token                 "Notebook.destroy")
  '(token                 "Num_Spinner.destroy")
  '(token                 "OptionMenu.destroy")
  '(token                 "Progress_Gauge.destroy")
  '(token                 "Progress_Gauge_T.destroy")
  '(token                 "Radiobutton.destroy")
  '(token                 "Scale.destroy")
  '(token                 "Scrollbar.destroy")
  '(token                 "Scrolled_Listbox.destroy")
  '(token                 "Scrolled_Text.destroy")
  '(token                 "Slide_Show.destroy")
  '(token                 "Statuslabel.destroy")
  '(token                 "Statuslabel.Label.destroy")
  '(token                 "Statustext.destroy")
  '(token                 "Statustext.Text.destroy")
  '(token                 "Studbutton.destroy")
  '(token                 "Tabbed_Notebook.destroy")
  '(token                 "Text.destroy")
  '(token                 "Tk.destroy")
  '(token                 "Toplevel.destroy")
  '(token                 "Tributton.destroy")
  '(token                 "Up_Down_Button.destroy")
  '(token                 "V_Panedwindow.destroy")
  '(token                 "V_Panedwindow.H_Separator.destroy")
  '(token                 "V_Scrollable.destroy")
  '(token                 "V_Separator.destroy")
  '(token                 "V_Strut.destroy")
  '(token                 "Widget.destroy")
  '(token                 "_C_Frame.destroy")
  '(token                 "_Combobox.Scrolled_Listbox.destroy")
  '(token                 "_Panedwindow.destroy")
  '(token                 "_Scrollable.destroy")
  '(token                 "_Separator.destroy")
  '(token                 "_Spinnerentry.destroy")
  '(token                 "_Statusframe.destroy")
  '(replacement           "destroy ()")
;;; destroy()
)

(lse-define-fill-in "disable()" 
  '(description           "Deactivates all buttons of button box.")
  '(token)
  '(token                 "Buttonbox.disable")
  '(token                 "C_Entry.disable")
  '(token                 "C_Listbox.disable")
  '(token                 "Combo_Entry.disable")
  '(token                 "Combo_Tuple.disable")
  '(token                 "Combo_Tuple_X.disable")
  '(token                 "Combobox.disable")
  '(token                 "Entry_Tuple.disable")
  '(token                 "Listdropentry.disable")
  '(token                 "Listdropspinner.disable")
  '(token                 "Multicombobox.disable")
  '(token                 "Multicombobox_X.disable")
  '(token                 "Up_Down_Button.disable")
  '(token                 "_Listbox_Tuple.disable")
  '(token                 "_Listdrop.disable")
  '(token                 "_Spinner.disable")
  '(token                 "_Spinnerentry.disable")
  '(replacement           "disable ()")
;;; disable()
)

(lse-define-fill-in "Notebook.display:name" 
  '(description           "Display page `name'.")
  '(leading               ",")
;;; Notebook.display:name
)

(lse-define-fill-in "display(name)" 
  '(description           "Display page `name'.")
  '(token)
  '(token                 "Notebook.display")
  '(token                 "Tabbed_Notebook.display")
  '(replacement           "display («Notebook.display:name»)")
;;; display(name)
)

(lse-define-fill-in "H_Panedwindow.divide:frac" 
  '(description           "Argument 1 of H_Panedwindow.divide")
  '(leading               ",")
;;; H_Panedwindow.divide:frac
)

(lse-define-fill-in "H_Panedwindow.divide:i" 
  '(description           "Argument 2 of H_Panedwindow.divide (default = 0)")
  '(leading               ",")
;;; H_Panedwindow.divide:i
)

(lse-define-fill-in "divide(frac,i)" 
  '(token)
  '(token                 "H_Panedwindow.divide")
  '(token                 "V_Panedwindow.divide")
  '(replacement           "divide («H_Panedwindow.divide:frac», ««H_Panedwindow.divide:i»»)")
;;; divide(frac,i)
)

(lse-define-fill-in "Statustext.Text.dlineinfo:index" 
  '(description           "Argument 1 of Statustext.Text.dlineinfo")
  '(leading               ",")
;;; Statustext.Text.dlineinfo:index
)

(lse-define-fill-in "dlineinfo(index)" 
  '(token)
  '(token                 "Statustext.Text.dlineinfo")
  '(token                 "Text.dlineinfo")
  '(replacement           "dlineinfo («Statustext.Text.dlineinfo:index»)")
;;; dlineinfo(index)
)

(lse-define-fill-in "H_Panedwindow.drag:i" 
  '(description           "Argument 1 of H_Panedwindow.drag")
  '(leading               ",")
;;; H_Panedwindow.drag:i
)

(lse-define-fill-in "H_Panedwindow.drag:event" 
  '(description           "Argument 2 of H_Panedwindow.drag (default = None)")
  '(leading               ",")
;;; H_Panedwindow.drag:event
)

(lse-define-fill-in "drag(i,event)" 
  '(token)
  '(token                 "H_Panedwindow.drag")
  '(token                 "V_Panedwindow.drag")
  '(replacement           "drag («H_Panedwindow.drag:i», ««H_Panedwindow.drag:event»»)")
;;; drag(i,event)
)

(lse-define-fill-in "_Listdrop.drop:event" 
  '(description           "Argument 1 of _Listdrop.drop (default = None)")
  '(leading               ",")
;;; _Listdrop.drop:event
)

(lse-define-fill-in "drop(event)" 
  '(token)
  '(token                 "Listdropentry.drop")
  '(token                 "Listdropspinner.drop")
  '(token                 "_Listdrop.drop")
  '(replacement           "drop (««_Listdrop.drop:event»»)")
;;; drop(event)
)

(lse-define-fill-in "_Panedwindow.drop:i" 
  '(description           "Argument 1 of _Panedwindow.drop")
  '(leading               ",")
;;; _Panedwindow.drop:i
)

(lse-define-fill-in "_Panedwindow.drop:event" 
  '(description           "Argument 2 of _Panedwindow.drop (default = None)")
  '(leading               ",")
;;; _Panedwindow.drop:event
)

(lse-define-fill-in "drop(i,event)" 
  '(token)
  '(token                 "H_Panedwindow.drop")
  '(token                 "V_Panedwindow.drop")
  '(token                 "_Panedwindow.drop")
  '(replacement           "drop («_Panedwindow.drop:i», ««_Panedwindow.drop:event»»)")
;;; drop(i,event)
)

(lse-define-fill-in "Canvas.dtag:args" 
  '(description           "Argument 1 of Canvas.dtag")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.dtag:args
)

(lse-define-fill-in "dtag(args)" 
  '(token)
  '(token                 "Canvas.dtag")
  '(replacement           "dtag (««Canvas.dtag:args»»···)")
;;; dtag(args)
)

(lse-define-fill-in "Group.dtag:tagToDelete" 
  '(description           "Argument 1 of Group.dtag (default = None)")
  '(leading               ",")
;;; Group.dtag:tagToDelete
)

(lse-define-fill-in "dtag(tagToDelete)" 
  '(token)
  '(token                 "Group.dtag")
  '(replacement           "dtag (««Group.dtag:tagToDelete»»)")
;;; dtag(tagToDelete)
)

(lse-define-fill-in "CanvasItem.dtag:ttd" 
  '(description           "Argument 1 of CanvasItem.dtag")
  '(leading               ",")
;;; CanvasItem.dtag:ttd
)

(lse-define-fill-in "dtag(ttd)" 
  '(token)
  '(token                 "Arc.dtag")
  '(token                 "Bitmap.dtag")
  '(token                 "CanvasItem.dtag")
  '(token                 "CanvasText.dtag")
  '(token                 "ImageItem.dtag")
  '(token                 "Line.dtag")
  '(token                 "Oval.dtag")
  '(token                 "Polygon.dtag")
  '(token                 "Rectangle.dtag")
  '(token                 "Window.dtag")
  '(replacement           "dtag («CanvasItem.dtag:ttd»)")
;;; dtag(ttd)
)

(lse-define-fill-in "enable()" 
  '(description           "Activates all buttons of button box.")
  '(token)
  '(token                 "Buttonbox.enable")
  '(token                 "C_Entry.enable")
  '(token                 "C_Listbox.enable")
  '(token                 "Combo_Entry.enable")
  '(token                 "Combo_Tuple.enable")
  '(token                 "Combo_Tuple_X.enable")
  '(token                 "Combobox.enable")
  '(token                 "Entry_Tuple.enable")
  '(token                 "Listdropentry.enable")
  '(token                 "Listdropspinner.enable")
  '(token                 "Multicombobox.enable")
  '(token                 "Multicombobox_X.enable")
  '(token                 "Up_Down_Button.enable")
  '(token                 "_Listbox_Tuple.enable")
  '(token                 "_Listdrop.enable")
  '(token                 "_Spinner.enable")
  '(token                 "_Spinnerentry.enable")
  '(replacement           "enable ()")
;;; enable()
)

(lse-define-fill-in "Menu.entrycget:index" 
  '(description           "Argument 1 of Menu.entrycget")
  '(leading               ",")
;;; Menu.entrycget:index
)

(lse-define-fill-in "Menu.entrycget:option" 
  '(description           "Argument 2 of Menu.entrycget")
  '(leading               ",")
;;; Menu.entrycget:option
)

(lse-define-fill-in "entrycget(index,option)" 
  '(token)
  '(token                 "C_Menu.entrycget")
  '(token                 "Menu.entrycget")
  '(replacement           "entrycget («Menu.entrycget:index», «Menu.entrycget:option»)")
;;; entrycget(index,option)
)

(lse-define-fill-in "Menu.entryconfig:index" 
  '(description           "Argument 1 of Menu.entryconfig")
  '(leading               ",")
;;; Menu.entryconfig:index
)

(lse-define-fill-in "Menu.entryconfig:cnf" 
  '(description           "Argument 2 of Menu.entryconfig (default = None)")
  '(leading               ",")
;;; Menu.entryconfig:cnf
)

(lse-define-fill-in "entryconfig(index,cnf,kw)" 
  '(token)
  '(token                 "C_Menu.entryconfig")
  '(token                 "Menu.entryconfig")
  '(replacement           "entryconfig («Menu.entryconfig:index», ««Menu.entryconfig:cnf»», ««py-named-arg»»···)")
;;; entryconfig(index,cnf,kw)
)

(lse-define-fill-in "Menu.entryconfigure:index" 
  '(description           "Argument 1 of Menu.entryconfigure")
  '(leading               ",")
;;; Menu.entryconfigure:index
)

(lse-define-fill-in "Menu.entryconfigure:cnf" 
  '(description           "Argument 2 of Menu.entryconfigure (default = None)")
  '(leading               ",")
;;; Menu.entryconfigure:cnf
)

(lse-define-fill-in "entryconfigure(index,cnf,kw)" 
  '(token)
  '(token                 "C_Menu.entryconfigure")
  '(token                 "Menu.entryconfigure")
  '(replacement           "entryconfigure («Menu.entryconfigure:index», ««Menu.entryconfigure:cnf»», ««py-named-arg»»···)")
;;; entryconfigure(index,cnf,kw)
)

(lse-define-fill-in "Misc.event_add:virtual" 
  '(description           "Argument 1 of Misc.event_add")
  '(leading               ",")
;;; Misc.event_add:virtual
)

(lse-define-fill-in "Misc.event_add:sequences" 
  '(description           "Argument 2 of Misc.event_add")
  '(leading               ",")
  '(separator             ", ")
;;; Misc.event_add:sequences
)

(lse-define-fill-in "event_add(virtual,sequences)" 
  '(token)
  '(token                 "Balloon.event_add")
  '(token                 "BaseWidget.event_add")
  '(token                 "Button.event_add")
  '(token                 "Buttonbox.event_add")
  '(token                 "C_Entry.event_add")
  '(token                 "C_Frame.event_add")
  '(token                 "C_Listbox.event_add")
  '(token                 "C_Menu.event_add")
  '(token                 "C_Text.event_add")
  '(token                 "Canvas.event_add")
  '(token                 "Checkbutton.event_add")
  '(token                 "Combo_Tuple.event_add")
  '(token                 "Combo_Tuple_X.event_add")
  '(token                 "Combobox.event_add")
  '(token                 "Entry.event_add")
  '(token                 "Entrybox.event_add")
  '(token                 "Filename_Entry.event_add")
  '(token                 "Frame.event_add")
  '(token                 "H_Panedwindow.event_add")
  '(token                 "H_Panedwindow.V_Separator.event_add")
  '(token                 "H_Scrollable.event_add")
  '(token                 "H_Separator.event_add")
  '(token                 "H_Strut.event_add")
  '(token                 "Label.event_add")
  '(token                 "Listbox.event_add")
  '(token                 "Listbox_Tuple.event_add")
  '(token                 "Listdropentry.event_add")
  '(token                 "Listdropspinner.event_add")
  '(token                 "Listspinner.event_add")
  '(token                 "Menu.event_add")
  '(token                 "Menubutton.event_add")
  '(token                 "Message.event_add")
  '(token                 "Message_Window.event_add")
  '(token                 "Misc.event_add")
  '(token                 "Multicombobox.event_add")
  '(token                 "Multicombobox_X.event_add")
  '(token                 "Notebook.event_add")
  '(token                 "Num_Spinner.event_add")
  '(token                 "OptionMenu.event_add")
  '(token                 "Progress_Gauge.event_add")
  '(token                 "Progress_Gauge_T.event_add")
  '(token                 "Radiobutton.event_add")
  '(token                 "Scale.event_add")
  '(token                 "Scrollbar.event_add")
  '(token                 "Scrolled_Listbox.event_add")
  '(token                 "Scrolled_Text.event_add")
  '(token                 "Slide_Show.event_add")
  '(token                 "Statuslabel.event_add")
  '(token                 "Statuslabel.Label.event_add")
  '(token                 "Statustext.event_add")
  '(token                 "Statustext.Text.event_add")
  '(token                 "Studbutton.event_add")
  '(token                 "Tabbed_Notebook.event_add")
  '(token                 "Text.event_add")
  '(token                 "Tk.event_add")
  '(token                 "Toplevel.event_add")
  '(token                 "Tributton.event_add")
  '(token                 "Up_Down_Button.event_add")
  '(token                 "V_Panedwindow.event_add")
  '(token                 "V_Panedwindow.H_Separator.event_add")
  '(token                 "V_Scrollable.event_add")
  '(token                 "V_Separator.event_add")
  '(token                 "V_Strut.event_add")
  '(token                 "Widget.event_add")
  '(token                 "_C_Frame.event_add")
  '(token                 "_Combobox.Scrolled_Listbox.event_add")
  '(token                 "_Panedwindow.event_add")
  '(token                 "_Scrollable.event_add")
  '(token                 "_Separator.event_add")
  '(token                 "_Spinnerentry.event_add")
  '(token                 "_Statusframe.event_add")
  '(replacement           "event_add («Misc.event_add:virtual», ««Misc.event_add:sequences»»···)")
;;; event_add(virtual,sequences)
)

(lse-define-fill-in "Misc.event_delete:virtual" 
  '(description           "Argument 1 of Misc.event_delete")
  '(leading               ",")
;;; Misc.event_delete:virtual
)

(lse-define-fill-in "Misc.event_delete:sequences" 
  '(description           "Argument 2 of Misc.event_delete")
  '(leading               ",")
  '(separator             ", ")
;;; Misc.event_delete:sequences
)

(lse-define-fill-in "event_delete(virtual,sequences)" 
  '(token)
  '(token                 "Balloon.event_delete")
  '(token                 "BaseWidget.event_delete")
  '(token                 "Button.event_delete")
  '(token                 "Buttonbox.event_delete")
  '(token                 "C_Entry.event_delete")
  '(token                 "C_Frame.event_delete")
  '(token                 "C_Listbox.event_delete")
  '(token                 "C_Menu.event_delete")
  '(token                 "C_Text.event_delete")
  '(token                 "Canvas.event_delete")
  '(token                 "Checkbutton.event_delete")
  '(token                 "Combo_Tuple.event_delete")
  '(token                 "Combo_Tuple_X.event_delete")
  '(token                 "Combobox.event_delete")
  '(token                 "Entry.event_delete")
  '(token                 "Entrybox.event_delete")
  '(token                 "Filename_Entry.event_delete")
  '(token                 "Frame.event_delete")
  '(token                 "H_Panedwindow.event_delete")
  '(token                 "H_Panedwindow.V_Separator.event_delete")
  '(token                 "H_Scrollable.event_delete")
  '(token                 "H_Separator.event_delete")
  '(token                 "H_Strut.event_delete")
  '(token                 "Label.event_delete")
  '(token                 "Listbox.event_delete")
  '(token                 "Listbox_Tuple.event_delete")
  '(token                 "Listdropentry.event_delete")
  '(token                 "Listdropspinner.event_delete")
  '(token                 "Listspinner.event_delete")
  '(token                 "Menu.event_delete")
  '(token                 "Menubutton.event_delete")
  '(token                 "Message.event_delete")
  '(token                 "Message_Window.event_delete")
  '(token                 "Misc.event_delete")
  '(token                 "Multicombobox.event_delete")
  '(token                 "Multicombobox_X.event_delete")
  '(token                 "Notebook.event_delete")
  '(token                 "Num_Spinner.event_delete")
  '(token                 "OptionMenu.event_delete")
  '(token                 "Progress_Gauge.event_delete")
  '(token                 "Progress_Gauge_T.event_delete")
  '(token                 "Radiobutton.event_delete")
  '(token                 "Scale.event_delete")
  '(token                 "Scrollbar.event_delete")
  '(token                 "Scrolled_Listbox.event_delete")
  '(token                 "Scrolled_Text.event_delete")
  '(token                 "Slide_Show.event_delete")
  '(token                 "Statuslabel.event_delete")
  '(token                 "Statuslabel.Label.event_delete")
  '(token                 "Statustext.event_delete")
  '(token                 "Statustext.Text.event_delete")
  '(token                 "Studbutton.event_delete")
  '(token                 "Tabbed_Notebook.event_delete")
  '(token                 "Text.event_delete")
  '(token                 "Tk.event_delete")
  '(token                 "Toplevel.event_delete")
  '(token                 "Tributton.event_delete")
  '(token                 "Up_Down_Button.event_delete")
  '(token                 "V_Panedwindow.event_delete")
  '(token                 "V_Panedwindow.H_Separator.event_delete")
  '(token                 "V_Scrollable.event_delete")
  '(token                 "V_Separator.event_delete")
  '(token                 "V_Strut.event_delete")
  '(token                 "Widget.event_delete")
  '(token                 "_C_Frame.event_delete")
  '(token                 "_Combobox.Scrolled_Listbox.event_delete")
  '(token                 "_Panedwindow.event_delete")
  '(token                 "_Scrollable.event_delete")
  '(token                 "_Separator.event_delete")
  '(token                 "_Spinnerentry.event_delete")
  '(token                 "_Statusframe.event_delete")
  '(replacement           "event_delete («Misc.event_delete:virtual», ««Misc.event_delete:sequences»»···)")
;;; event_delete(virtual,sequences)
)

(lse-define-fill-in "Misc.event_generate:sequence" 
  '(description           "Argument 1 of Misc.event_generate")
  '(leading               ",")
;;; Misc.event_generate:sequence
)

(lse-define-fill-in "event_generate(sequence,kw)" 
  '(token)
  '(token                 "Balloon.event_generate")
  '(token                 "BaseWidget.event_generate")
  '(token                 "Button.event_generate")
  '(token                 "Buttonbox.event_generate")
  '(token                 "C_Entry.event_generate")
  '(token                 "C_Frame.event_generate")
  '(token                 "C_Listbox.event_generate")
  '(token                 "C_Menu.event_generate")
  '(token                 "C_Text.event_generate")
  '(token                 "Canvas.event_generate")
  '(token                 "Checkbutton.event_generate")
  '(token                 "Combo_Tuple.event_generate")
  '(token                 "Combo_Tuple_X.event_generate")
  '(token                 "Combobox.event_generate")
  '(token                 "Entry.event_generate")
  '(token                 "Entrybox.event_generate")
  '(token                 "Filename_Entry.event_generate")
  '(token                 "Frame.event_generate")
  '(token                 "H_Panedwindow.event_generate")
  '(token                 "H_Panedwindow.V_Separator.event_generate")
  '(token                 "H_Scrollable.event_generate")
  '(token                 "H_Separator.event_generate")
  '(token                 "H_Strut.event_generate")
  '(token                 "Label.event_generate")
  '(token                 "Listbox.event_generate")
  '(token                 "Listbox_Tuple.event_generate")
  '(token                 "Listdropentry.event_generate")
  '(token                 "Listdropspinner.event_generate")
  '(token                 "Listspinner.event_generate")
  '(token                 "Menu.event_generate")
  '(token                 "Menubutton.event_generate")
  '(token                 "Message.event_generate")
  '(token                 "Message_Window.event_generate")
  '(token                 "Misc.event_generate")
  '(token                 "Multicombobox.event_generate")
  '(token                 "Multicombobox_X.event_generate")
  '(token                 "Notebook.event_generate")
  '(token                 "Num_Spinner.event_generate")
  '(token                 "OptionMenu.event_generate")
  '(token                 "Progress_Gauge.event_generate")
  '(token                 "Progress_Gauge_T.event_generate")
  '(token                 "Radiobutton.event_generate")
  '(token                 "Scale.event_generate")
  '(token                 "Scrollbar.event_generate")
  '(token                 "Scrolled_Listbox.event_generate")
  '(token                 "Scrolled_Text.event_generate")
  '(token                 "Slide_Show.event_generate")
  '(token                 "Statuslabel.event_generate")
  '(token                 "Statuslabel.Label.event_generate")
  '(token                 "Statustext.event_generate")
  '(token                 "Statustext.Text.event_generate")
  '(token                 "Studbutton.event_generate")
  '(token                 "Tabbed_Notebook.event_generate")
  '(token                 "Text.event_generate")
  '(token                 "Tk.event_generate")
  '(token                 "Toplevel.event_generate")
  '(token                 "Tributton.event_generate")
  '(token                 "Up_Down_Button.event_generate")
  '(token                 "V_Panedwindow.event_generate")
  '(token                 "V_Panedwindow.H_Separator.event_generate")
  '(token                 "V_Scrollable.event_generate")
  '(token                 "V_Separator.event_generate")
  '(token                 "V_Strut.event_generate")
  '(token                 "Widget.event_generate")
  '(token                 "_C_Frame.event_generate")
  '(token                 "_Combobox.Scrolled_Listbox.event_generate")
  '(token                 "_Panedwindow.event_generate")
  '(token                 "_Scrollable.event_generate")
  '(token                 "_Separator.event_generate")
  '(token                 "_Spinnerentry.event_generate")
  '(token                 "_Statusframe.event_generate")
  '(replacement           "event_generate («Misc.event_generate:sequence», ««py-named-arg»»···)")
;;; event_generate(sequence,kw)
)

(lse-define-fill-in "Misc.event_info:virtual" 
  '(description           "Argument 1 of Misc.event_info (default = None)")
  '(leading               ",")
;;; Misc.event_info:virtual
)

(lse-define-fill-in "event_info(virtual)" 
  '(token)
  '(token                 "Balloon.event_info")
  '(token                 "BaseWidget.event_info")
  '(token                 "Button.event_info")
  '(token                 "Buttonbox.event_info")
  '(token                 "C_Entry.event_info")
  '(token                 "C_Frame.event_info")
  '(token                 "C_Listbox.event_info")
  '(token                 "C_Menu.event_info")
  '(token                 "C_Text.event_info")
  '(token                 "Canvas.event_info")
  '(token                 "Checkbutton.event_info")
  '(token                 "Combo_Tuple.event_info")
  '(token                 "Combo_Tuple_X.event_info")
  '(token                 "Combobox.event_info")
  '(token                 "Entry.event_info")
  '(token                 "Entrybox.event_info")
  '(token                 "Filename_Entry.event_info")
  '(token                 "Frame.event_info")
  '(token                 "H_Panedwindow.event_info")
  '(token                 "H_Panedwindow.V_Separator.event_info")
  '(token                 "H_Scrollable.event_info")
  '(token                 "H_Separator.event_info")
  '(token                 "H_Strut.event_info")
  '(token                 "Label.event_info")
  '(token                 "Listbox.event_info")
  '(token                 "Listbox_Tuple.event_info")
  '(token                 "Listdropentry.event_info")
  '(token                 "Listdropspinner.event_info")
  '(token                 "Listspinner.event_info")
  '(token                 "Menu.event_info")
  '(token                 "Menubutton.event_info")
  '(token                 "Message.event_info")
  '(token                 "Message_Window.event_info")
  '(token                 "Misc.event_info")
  '(token                 "Multicombobox.event_info")
  '(token                 "Multicombobox_X.event_info")
  '(token                 "Notebook.event_info")
  '(token                 "Num_Spinner.event_info")
  '(token                 "OptionMenu.event_info")
  '(token                 "Progress_Gauge.event_info")
  '(token                 "Progress_Gauge_T.event_info")
  '(token                 "Radiobutton.event_info")
  '(token                 "Scale.event_info")
  '(token                 "Scrollbar.event_info")
  '(token                 "Scrolled_Listbox.event_info")
  '(token                 "Scrolled_Text.event_info")
  '(token                 "Slide_Show.event_info")
  '(token                 "Statuslabel.event_info")
  '(token                 "Statuslabel.Label.event_info")
  '(token                 "Statustext.event_info")
  '(token                 "Statustext.Text.event_info")
  '(token                 "Studbutton.event_info")
  '(token                 "Tabbed_Notebook.event_info")
  '(token                 "Text.event_info")
  '(token                 "Tk.event_info")
  '(token                 "Toplevel.event_info")
  '(token                 "Tributton.event_info")
  '(token                 "Up_Down_Button.event_info")
  '(token                 "V_Panedwindow.event_info")
  '(token                 "V_Panedwindow.H_Separator.event_info")
  '(token                 "V_Scrollable.event_info")
  '(token                 "V_Separator.event_info")
  '(token                 "V_Strut.event_info")
  '(token                 "Widget.event_info")
  '(token                 "_C_Frame.event_info")
  '(token                 "_Combobox.Scrolled_Listbox.event_info")
  '(token                 "_Panedwindow.event_info")
  '(token                 "_Scrollable.event_info")
  '(token                 "_Separator.event_info")
  '(token                 "_Spinnerentry.event_info")
  '(token                 "_Statusframe.event_info")
  '(replacement           "event_info (««Misc.event_info:virtual»»)")
;;; event_info(virtual)
)

(lse-define-fill-in "Canvas.find:args" 
  '(description           "Argument 1 of Canvas.find")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.find:args
)

(lse-define-fill-in "find(args)" 
  '(token)
  '(token                 "Canvas.find")
  '(replacement           "find (««Canvas.find:args»»···)")
;;; find(args)
)

(lse-define-fill-in "Canvas.find_above:tagOrId" 
  '(description           "Argument 1 of Canvas.find_above")
  '(leading               ",")
;;; Canvas.find_above:tagOrId
)

(lse-define-fill-in "find_above(tagOrId)" 
  '(token)
  '(token                 "Canvas.find_above")
  '(replacement           "find_above («Canvas.find_above:tagOrId»)")
;;; find_above(tagOrId)
)

(lse-define-fill-in "find_all()" 
  '(token)
  '(token                 "Canvas.find_all")
  '(replacement           "find_all ()")
;;; find_all()
)

(lse-define-fill-in "Canvas.find_below:tagOrId" 
  '(description           "Argument 1 of Canvas.find_below")
  '(leading               ",")
;;; Canvas.find_below:tagOrId
)

(lse-define-fill-in "find_below(tagOrId)" 
  '(token)
  '(token                 "Canvas.find_below")
  '(replacement           "find_below («Canvas.find_below:tagOrId»)")
;;; find_below(tagOrId)
)

(lse-define-fill-in "Canvas.find_closest:x" 
  '(description           "Argument 1 of Canvas.find_closest")
  '(leading               ",")
;;; Canvas.find_closest:x
)

(lse-define-fill-in "Canvas.find_closest:y" 
  '(description           "Argument 2 of Canvas.find_closest")
  '(leading               ",")
;;; Canvas.find_closest:y
)

(lse-define-fill-in "Canvas.find_closest:halo" 
  '(description           "Argument 3 of Canvas.find_closest (default = None)")
  '(leading               ",")
;;; Canvas.find_closest:halo
)

(lse-define-fill-in "Canvas.find_closest:start" 
  '(description           "Argument 4 of Canvas.find_closest (default = None)")
  '(leading               ",")
;;; Canvas.find_closest:start
)

(lse-define-fill-in "find_closest(x,y,halo,start)" 
  '(token)
  '(token                 "Canvas.find_closest")
  '(replacement           "find_closest («Canvas.find_closest:x», «Canvas.find_closest:y», ««Canvas.find_closest:halo»», ««Canvas.find_closest:start»»)")
;;; find_closest(x,y,halo,start)
)

(lse-define-fill-in "Canvas.find_enclosed:x1" 
  '(description           "Argument 1 of Canvas.find_enclosed")
  '(leading               ",")
;;; Canvas.find_enclosed:x1
)

(lse-define-fill-in "Canvas.find_enclosed:y1" 
  '(description           "Argument 2 of Canvas.find_enclosed")
  '(leading               ",")
;;; Canvas.find_enclosed:y1
)

(lse-define-fill-in "Canvas.find_enclosed:x2" 
  '(description           "Argument 3 of Canvas.find_enclosed")
  '(leading               ",")
;;; Canvas.find_enclosed:x2
)

(lse-define-fill-in "Canvas.find_enclosed:y2" 
  '(description           "Argument 4 of Canvas.find_enclosed")
  '(leading               ",")
;;; Canvas.find_enclosed:y2
)

(lse-define-fill-in "find_enclosed(x1,y1,x2,y2)" 
  '(token)
  '(token                 "Canvas.find_enclosed")
  '(replacement           "find_enclosed («Canvas.find_enclosed:x1», «Canvas.find_enclosed:y1», «Canvas.find_enclosed:x2», «Canvas.find_enclosed:y2»)")
;;; find_enclosed(x1,y1,x2,y2)
)

(lse-define-fill-in "Canvas.find_overlapping:x1" 
  '(description           "Argument 1 of Canvas.find_overlapping")
  '(leading               ",")
;;; Canvas.find_overlapping:x1
)

(lse-define-fill-in "Canvas.find_overlapping:y1" 
  '(description           "Argument 2 of Canvas.find_overlapping")
  '(leading               ",")
;;; Canvas.find_overlapping:y1
)

(lse-define-fill-in "Canvas.find_overlapping:x2" 
  '(description           "Argument 3 of Canvas.find_overlapping")
  '(leading               ",")
;;; Canvas.find_overlapping:x2
)

(lse-define-fill-in "Canvas.find_overlapping:y2" 
  '(description           "Argument 4 of Canvas.find_overlapping")
  '(leading               ",")
;;; Canvas.find_overlapping:y2
)

(lse-define-fill-in "find_overlapping(x1,y1,x2,y2)" 
  '(token)
  '(token                 "Canvas.find_overlapping")
  '(replacement           "find_overlapping («Canvas.find_overlapping:x1», «Canvas.find_overlapping:y1», «Canvas.find_overlapping:x2», «Canvas.find_overlapping:y2»)")
;;; find_overlapping(x1,y1,x2,y2)
)

(lse-define-fill-in "Canvas.find_withtag:tagOrId" 
  '(description           "Argument 1 of Canvas.find_withtag")
  '(leading               ",")
;;; Canvas.find_withtag:tagOrId
)

(lse-define-fill-in "find_withtag(tagOrId)" 
  '(token)
  '(token                 "Canvas.find_withtag")
  '(replacement           "find_withtag («Canvas.find_withtag:tagOrId»)")
;;; find_withtag(tagOrId)
)

(lse-define-fill-in "flash()" 
  '(token)
  '(token                 "Button.flash")
  '(token                 "Checkbutton.flash")
  '(token                 "Radiobutton.flash")
  '(token                 "Studbutton.flash")
  '(token                 "Tributton.flash")
  '(replacement           "flash ()")
;;; flash()
)

(lse-define-fill-in "Buttonbox.flash:button" 
  '(description           "Argument 1 of Buttonbox.flash")
  '(leading               ",")
;;; Buttonbox.flash:button
)

(lse-define-fill-in "flash(button)" 
  '(token)
  '(token                 "Buttonbox.flash")
  '(replacement           "flash («Buttonbox.flash:button»)")
;;; flash(button)
)

(lse-define-fill-in "focus()" 
  '(token)
  '(token                 "Arc.focus")
  '(token                 "Bitmap.focus")
  '(token                 "C_Listbox.focus")
  '(token                 "CanvasItem.focus")
  '(token                 "CanvasText.focus")
  '(token                 "Combo_Tuple.focus")
  '(token                 "Group.focus")
  '(token                 "ImageItem.focus")
  '(token                 "Line.focus")
  '(token                 "Misc.focus")
  '(token                 "Oval.focus")
  '(token                 "Polygon.focus")
  '(token                 "Rectangle.focus")
  '(token                 "Window.focus")
  '(replacement           "focus ()")
;;; focus()
)

(lse-define-fill-in "Canvas.focus:args" 
  '(description           "Argument 1 of Canvas.focus")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.focus:args
)

(lse-define-fill-in "focus(args)" 
  '(token)
  '(token                 "Canvas.focus")
  '(replacement           "focus (««Canvas.focus:args»»···)")
;;; focus(args)
)

(lse-define-fill-in "focus_displayof()" 
  '(token)
  '(token                 "Balloon.focus_displayof")
  '(token                 "BaseWidget.focus_displayof")
  '(token                 "Button.focus_displayof")
  '(token                 "Buttonbox.focus_displayof")
  '(token                 "C_Entry.focus_displayof")
  '(token                 "C_Frame.focus_displayof")
  '(token                 "C_Listbox.focus_displayof")
  '(token                 "C_Menu.focus_displayof")
  '(token                 "C_Text.focus_displayof")
  '(token                 "Canvas.focus_displayof")
  '(token                 "Checkbutton.focus_displayof")
  '(token                 "Combo_Tuple.focus_displayof")
  '(token                 "Combo_Tuple_X.focus_displayof")
  '(token                 "Combobox.focus_displayof")
  '(token                 "Entry.focus_displayof")
  '(token                 "Entrybox.focus_displayof")
  '(token                 "Filename_Entry.focus_displayof")
  '(token                 "Frame.focus_displayof")
  '(token                 "H_Panedwindow.focus_displayof")
  '(token                 "H_Panedwindow.V_Separator.focus_displayof")
  '(token                 "H_Scrollable.focus_displayof")
  '(token                 "H_Separator.focus_displayof")
  '(token                 "H_Strut.focus_displayof")
  '(token                 "Label.focus_displayof")
  '(token                 "Listbox.focus_displayof")
  '(token                 "Listbox_Tuple.focus_displayof")
  '(token                 "Listdropentry.focus_displayof")
  '(token                 "Listdropspinner.focus_displayof")
  '(token                 "Listspinner.focus_displayof")
  '(token                 "Menu.focus_displayof")
  '(token                 "Menubutton.focus_displayof")
  '(token                 "Message.focus_displayof")
  '(token                 "Message_Window.focus_displayof")
  '(token                 "Misc.focus_displayof")
  '(token                 "Multicombobox.focus_displayof")
  '(token                 "Multicombobox_X.focus_displayof")
  '(token                 "Notebook.focus_displayof")
  '(token                 "Num_Spinner.focus_displayof")
  '(token                 "OptionMenu.focus_displayof")
  '(token                 "Progress_Gauge.focus_displayof")
  '(token                 "Progress_Gauge_T.focus_displayof")
  '(token                 "Radiobutton.focus_displayof")
  '(token                 "Scale.focus_displayof")
  '(token                 "Scrollbar.focus_displayof")
  '(token                 "Scrolled_Listbox.focus_displayof")
  '(token                 "Scrolled_Text.focus_displayof")
  '(token                 "Slide_Show.focus_displayof")
  '(token                 "Statuslabel.focus_displayof")
  '(token                 "Statuslabel.Label.focus_displayof")
  '(token                 "Statustext.focus_displayof")
  '(token                 "Statustext.Text.focus_displayof")
  '(token                 "Studbutton.focus_displayof")
  '(token                 "Tabbed_Notebook.focus_displayof")
  '(token                 "Text.focus_displayof")
  '(token                 "Tk.focus_displayof")
  '(token                 "Toplevel.focus_displayof")
  '(token                 "Tributton.focus_displayof")
  '(token                 "Up_Down_Button.focus_displayof")
  '(token                 "V_Panedwindow.focus_displayof")
  '(token                 "V_Panedwindow.H_Separator.focus_displayof")
  '(token                 "V_Scrollable.focus_displayof")
  '(token                 "V_Separator.focus_displayof")
  '(token                 "V_Strut.focus_displayof")
  '(token                 "Widget.focus_displayof")
  '(token                 "_C_Frame.focus_displayof")
  '(token                 "_Combobox.Scrolled_Listbox.focus_displayof")
  '(token                 "_Panedwindow.focus_displayof")
  '(token                 "_Scrollable.focus_displayof")
  '(token                 "_Separator.focus_displayof")
  '(token                 "_Spinnerentry.focus_displayof")
  '(token                 "_Statusframe.focus_displayof")
  '(replacement           "focus_displayof ()")
;;; focus_displayof()
)

(lse-define-fill-in "focus_force()" 
  '(token)
  '(token                 "Balloon.focus_force")
  '(token                 "BaseWidget.focus_force")
  '(token                 "Button.focus_force")
  '(token                 "Buttonbox.focus_force")
  '(token                 "C_Entry.focus_force")
  '(token                 "C_Frame.focus_force")
  '(token                 "C_Listbox.focus_force")
  '(token                 "C_Menu.focus_force")
  '(token                 "C_Text.focus_force")
  '(token                 "Canvas.focus_force")
  '(token                 "Checkbutton.focus_force")
  '(token                 "Combo_Tuple.focus_force")
  '(token                 "Combo_Tuple_X.focus_force")
  '(token                 "Combobox.focus_force")
  '(token                 "Entry.focus_force")
  '(token                 "Entrybox.focus_force")
  '(token                 "Filename_Entry.focus_force")
  '(token                 "Frame.focus_force")
  '(token                 "H_Panedwindow.focus_force")
  '(token                 "H_Panedwindow.V_Separator.focus_force")
  '(token                 "H_Scrollable.focus_force")
  '(token                 "H_Separator.focus_force")
  '(token                 "H_Strut.focus_force")
  '(token                 "Label.focus_force")
  '(token                 "Listbox.focus_force")
  '(token                 "Listbox_Tuple.focus_force")
  '(token                 "Listdropentry.focus_force")
  '(token                 "Listdropspinner.focus_force")
  '(token                 "Listspinner.focus_force")
  '(token                 "Menu.focus_force")
  '(token                 "Menubutton.focus_force")
  '(token                 "Message.focus_force")
  '(token                 "Message_Window.focus_force")
  '(token                 "Misc.focus_force")
  '(token                 "Multicombobox.focus_force")
  '(token                 "Multicombobox_X.focus_force")
  '(token                 "Notebook.focus_force")
  '(token                 "Num_Spinner.focus_force")
  '(token                 "OptionMenu.focus_force")
  '(token                 "Progress_Gauge.focus_force")
  '(token                 "Progress_Gauge_T.focus_force")
  '(token                 "Radiobutton.focus_force")
  '(token                 "Scale.focus_force")
  '(token                 "Scrollbar.focus_force")
  '(token                 "Scrolled_Listbox.focus_force")
  '(token                 "Scrolled_Text.focus_force")
  '(token                 "Slide_Show.focus_force")
  '(token                 "Statuslabel.focus_force")
  '(token                 "Statuslabel.Label.focus_force")
  '(token                 "Statustext.focus_force")
  '(token                 "Statustext.Text.focus_force")
  '(token                 "Studbutton.focus_force")
  '(token                 "Tabbed_Notebook.focus_force")
  '(token                 "Text.focus_force")
  '(token                 "Tk.focus_force")
  '(token                 "Toplevel.focus_force")
  '(token                 "Tributton.focus_force")
  '(token                 "Up_Down_Button.focus_force")
  '(token                 "V_Panedwindow.focus_force")
  '(token                 "V_Panedwindow.H_Separator.focus_force")
  '(token                 "V_Scrollable.focus_force")
  '(token                 "V_Separator.focus_force")
  '(token                 "V_Strut.focus_force")
  '(token                 "Widget.focus_force")
  '(token                 "_C_Frame.focus_force")
  '(token                 "_Combobox.Scrolled_Listbox.focus_force")
  '(token                 "_Panedwindow.focus_force")
  '(token                 "_Scrollable.focus_force")
  '(token                 "_Separator.focus_force")
  '(token                 "_Spinnerentry.focus_force")
  '(token                 "_Statusframe.focus_force")
  '(replacement           "focus_force ()")
;;; focus_force()
)

(lse-define-fill-in "focus_get()" 
  '(token)
  '(token                 "Balloon.focus_get")
  '(token                 "BaseWidget.focus_get")
  '(token                 "Button.focus_get")
  '(token                 "Buttonbox.focus_get")
  '(token                 "C_Entry.focus_get")
  '(token                 "C_Frame.focus_get")
  '(token                 "C_Listbox.focus_get")
  '(token                 "C_Menu.focus_get")
  '(token                 "C_Text.focus_get")
  '(token                 "Canvas.focus_get")
  '(token                 "Checkbutton.focus_get")
  '(token                 "Combo_Tuple.focus_get")
  '(token                 "Combo_Tuple_X.focus_get")
  '(token                 "Combobox.focus_get")
  '(token                 "Entry.focus_get")
  '(token                 "Entrybox.focus_get")
  '(token                 "Filename_Entry.focus_get")
  '(token                 "Frame.focus_get")
  '(token                 "H_Panedwindow.focus_get")
  '(token                 "H_Panedwindow.V_Separator.focus_get")
  '(token                 "H_Scrollable.focus_get")
  '(token                 "H_Separator.focus_get")
  '(token                 "H_Strut.focus_get")
  '(token                 "Label.focus_get")
  '(token                 "Listbox.focus_get")
  '(token                 "Listbox_Tuple.focus_get")
  '(token                 "Listdropentry.focus_get")
  '(token                 "Listdropspinner.focus_get")
  '(token                 "Listspinner.focus_get")
  '(token                 "Menu.focus_get")
  '(token                 "Menubutton.focus_get")
  '(token                 "Message.focus_get")
  '(token                 "Message_Window.focus_get")
  '(token                 "Misc.focus_get")
  '(token                 "Multicombobox.focus_get")
  '(token                 "Multicombobox_X.focus_get")
  '(token                 "Notebook.focus_get")
  '(token                 "Num_Spinner.focus_get")
  '(token                 "OptionMenu.focus_get")
  '(token                 "Progress_Gauge.focus_get")
  '(token                 "Progress_Gauge_T.focus_get")
  '(token                 "Radiobutton.focus_get")
  '(token                 "Scale.focus_get")
  '(token                 "Scrollbar.focus_get")
  '(token                 "Scrolled_Listbox.focus_get")
  '(token                 "Scrolled_Text.focus_get")
  '(token                 "Slide_Show.focus_get")
  '(token                 "Statuslabel.focus_get")
  '(token                 "Statuslabel.Label.focus_get")
  '(token                 "Statustext.focus_get")
  '(token                 "Statustext.Text.focus_get")
  '(token                 "Studbutton.focus_get")
  '(token                 "Tabbed_Notebook.focus_get")
  '(token                 "Text.focus_get")
  '(token                 "Tk.focus_get")
  '(token                 "Toplevel.focus_get")
  '(token                 "Tributton.focus_get")
  '(token                 "Up_Down_Button.focus_get")
  '(token                 "V_Panedwindow.focus_get")
  '(token                 "V_Panedwindow.H_Separator.focus_get")
  '(token                 "V_Scrollable.focus_get")
  '(token                 "V_Separator.focus_get")
  '(token                 "V_Strut.focus_get")
  '(token                 "Widget.focus_get")
  '(token                 "_C_Frame.focus_get")
  '(token                 "_Combobox.Scrolled_Listbox.focus_get")
  '(token                 "_Panedwindow.focus_get")
  '(token                 "_Scrollable.focus_get")
  '(token                 "_Separator.focus_get")
  '(token                 "_Spinnerentry.focus_get")
  '(token                 "_Statusframe.focus_get")
  '(replacement           "focus_get ()")
;;; focus_get()
)

(lse-define-fill-in "focus_lastfor()" 
  '(token)
  '(token                 "Balloon.focus_lastfor")
  '(token                 "BaseWidget.focus_lastfor")
  '(token                 "Button.focus_lastfor")
  '(token                 "Buttonbox.focus_lastfor")
  '(token                 "C_Entry.focus_lastfor")
  '(token                 "C_Frame.focus_lastfor")
  '(token                 "C_Listbox.focus_lastfor")
  '(token                 "C_Menu.focus_lastfor")
  '(token                 "C_Text.focus_lastfor")
  '(token                 "Canvas.focus_lastfor")
  '(token                 "Checkbutton.focus_lastfor")
  '(token                 "Combo_Tuple.focus_lastfor")
  '(token                 "Combo_Tuple_X.focus_lastfor")
  '(token                 "Combobox.focus_lastfor")
  '(token                 "Entry.focus_lastfor")
  '(token                 "Entrybox.focus_lastfor")
  '(token                 "Filename_Entry.focus_lastfor")
  '(token                 "Frame.focus_lastfor")
  '(token                 "H_Panedwindow.focus_lastfor")
  '(token                 "H_Panedwindow.V_Separator.focus_lastfor")
  '(token                 "H_Scrollable.focus_lastfor")
  '(token                 "H_Separator.focus_lastfor")
  '(token                 "H_Strut.focus_lastfor")
  '(token                 "Label.focus_lastfor")
  '(token                 "Listbox.focus_lastfor")
  '(token                 "Listbox_Tuple.focus_lastfor")
  '(token                 "Listdropentry.focus_lastfor")
  '(token                 "Listdropspinner.focus_lastfor")
  '(token                 "Listspinner.focus_lastfor")
  '(token                 "Menu.focus_lastfor")
  '(token                 "Menubutton.focus_lastfor")
  '(token                 "Message.focus_lastfor")
  '(token                 "Message_Window.focus_lastfor")
  '(token                 "Misc.focus_lastfor")
  '(token                 "Multicombobox.focus_lastfor")
  '(token                 "Multicombobox_X.focus_lastfor")
  '(token                 "Notebook.focus_lastfor")
  '(token                 "Num_Spinner.focus_lastfor")
  '(token                 "OptionMenu.focus_lastfor")
  '(token                 "Progress_Gauge.focus_lastfor")
  '(token                 "Progress_Gauge_T.focus_lastfor")
  '(token                 "Radiobutton.focus_lastfor")
  '(token                 "Scale.focus_lastfor")
  '(token                 "Scrollbar.focus_lastfor")
  '(token                 "Scrolled_Listbox.focus_lastfor")
  '(token                 "Scrolled_Text.focus_lastfor")
  '(token                 "Slide_Show.focus_lastfor")
  '(token                 "Statuslabel.focus_lastfor")
  '(token                 "Statuslabel.Label.focus_lastfor")
  '(token                 "Statustext.focus_lastfor")
  '(token                 "Statustext.Text.focus_lastfor")
  '(token                 "Studbutton.focus_lastfor")
  '(token                 "Tabbed_Notebook.focus_lastfor")
  '(token                 "Text.focus_lastfor")
  '(token                 "Tk.focus_lastfor")
  '(token                 "Toplevel.focus_lastfor")
  '(token                 "Tributton.focus_lastfor")
  '(token                 "Up_Down_Button.focus_lastfor")
  '(token                 "V_Panedwindow.focus_lastfor")
  '(token                 "V_Panedwindow.H_Separator.focus_lastfor")
  '(token                 "V_Scrollable.focus_lastfor")
  '(token                 "V_Separator.focus_lastfor")
  '(token                 "V_Strut.focus_lastfor")
  '(token                 "Widget.focus_lastfor")
  '(token                 "_C_Frame.focus_lastfor")
  '(token                 "_Combobox.Scrolled_Listbox.focus_lastfor")
  '(token                 "_Panedwindow.focus_lastfor")
  '(token                 "_Scrollable.focus_lastfor")
  '(token                 "_Separator.focus_lastfor")
  '(token                 "_Spinnerentry.focus_lastfor")
  '(token                 "_Statusframe.focus_lastfor")
  '(replacement           "focus_lastfor ()")
;;; focus_lastfor()
)

(lse-define-fill-in "focus_set()" 
  '(token)
  '(token                 "Balloon.focus_set")
  '(token                 "BaseWidget.focus_set")
  '(token                 "Button.focus_set")
  '(token                 "Buttonbox.focus_set")
  '(token                 "C_Entry.focus_set")
  '(token                 "C_Frame.focus_set")
  '(token                 "C_Listbox.focus_set")
  '(token                 "C_Menu.focus_set")
  '(token                 "C_Text.focus_set")
  '(token                 "Canvas.focus_set")
  '(token                 "Checkbutton.focus_set")
  '(token                 "Combo_Tuple.focus_set")
  '(token                 "Combo_Tuple_X.focus_set")
  '(token                 "Combobox.focus_set")
  '(token                 "Entry.focus_set")
  '(token                 "Entrybox.focus_set")
  '(token                 "Filename_Entry.focus_set")
  '(token                 "Frame.focus_set")
  '(token                 "H_Panedwindow.focus_set")
  '(token                 "H_Panedwindow.V_Separator.focus_set")
  '(token                 "H_Scrollable.focus_set")
  '(token                 "H_Separator.focus_set")
  '(token                 "H_Strut.focus_set")
  '(token                 "Label.focus_set")
  '(token                 "Listbox.focus_set")
  '(token                 "Listbox_Tuple.focus_set")
  '(token                 "Listdropentry.focus_set")
  '(token                 "Listdropspinner.focus_set")
  '(token                 "Listspinner.focus_set")
  '(token                 "Menu.focus_set")
  '(token                 "Menubutton.focus_set")
  '(token                 "Message.focus_set")
  '(token                 "Message_Window.focus_set")
  '(token                 "Misc.focus_set")
  '(token                 "Multicombobox.focus_set")
  '(token                 "Multicombobox_X.focus_set")
  '(token                 "Notebook.focus_set")
  '(token                 "Num_Spinner.focus_set")
  '(token                 "OptionMenu.focus_set")
  '(token                 "Progress_Gauge.focus_set")
  '(token                 "Progress_Gauge_T.focus_set")
  '(token                 "Radiobutton.focus_set")
  '(token                 "Scale.focus_set")
  '(token                 "Scrollbar.focus_set")
  '(token                 "Scrolled_Listbox.focus_set")
  '(token                 "Scrolled_Text.focus_set")
  '(token                 "Slide_Show.focus_set")
  '(token                 "Statuslabel.focus_set")
  '(token                 "Statuslabel.Label.focus_set")
  '(token                 "Statustext.focus_set")
  '(token                 "Statustext.Text.focus_set")
  '(token                 "Studbutton.focus_set")
  '(token                 "Tabbed_Notebook.focus_set")
  '(token                 "Text.focus_set")
  '(token                 "Tk.focus_set")
  '(token                 "Toplevel.focus_set")
  '(token                 "Tributton.focus_set")
  '(token                 "Up_Down_Button.focus_set")
  '(token                 "V_Panedwindow.focus_set")
  '(token                 "V_Panedwindow.H_Separator.focus_set")
  '(token                 "V_Scrollable.focus_set")
  '(token                 "V_Separator.focus_set")
  '(token                 "V_Strut.focus_set")
  '(token                 "Widget.focus_set")
  '(token                 "_C_Frame.focus_set")
  '(token                 "_Combobox.Scrolled_Listbox.focus_set")
  '(token                 "_Panedwindow.focus_set")
  '(token                 "_Scrollable.focus_set")
  '(token                 "_Separator.focus_set")
  '(token                 "_Spinnerentry.focus_set")
  '(token                 "_Statusframe.focus_set")
  '(replacement           "focus_set ()")
;;; focus_set()
)

(lse-define-fill-in "Buttonbox.focus_set:button" 
  '(description           "Argument 1 of Buttonbox.focus_set")
  '(leading               ",")
;;; Buttonbox.focus_set:button
)

(lse-define-fill-in "focus_set(button)" 
  '(token)
  '(token                 "Buttonbox.focus_set")
  '(replacement           "focus_set («Buttonbox.focus_set:button»)")
;;; focus_set(button)
)

(lse-define-fill-in "Wm.focusmodel:model" 
  '(description           "Argument 1 of Wm.focusmodel (default = None)")
  '(leading               ",")
;;; Wm.focusmodel:model
)

(lse-define-fill-in "focusmodel(model)" 
  '(token)
  '(token                 "Balloon.focusmodel")
  '(token                 "Progress_Gauge_T.focusmodel")
  '(token                 "Tk.focusmodel")
  '(token                 "Toplevel.focusmodel")
  '(token                 "Wm.focusmodel")
  '(replacement           "focusmodel (««Wm.focusmodel:model»»)")
;;; focusmodel(model)
)

(lse-define-fill-in "forget()" 
  '(token)
  '(token                 "Button.forget")
  '(token                 "Buttonbox.forget")
  '(token                 "C_Entry.forget")
  '(token                 "C_Frame.forget")
  '(token                 "C_Listbox.forget")
  '(token                 "C_Menu.forget")
  '(token                 "C_Text.forget")
  '(token                 "Canvas.forget")
  '(token                 "Checkbutton.forget")
  '(token                 "Combo_Tuple.forget")
  '(token                 "Combo_Tuple_X.forget")
  '(token                 "Combobox.forget")
  '(token                 "Entry.forget")
  '(token                 "Entrybox.forget")
  '(token                 "Filename_Entry.forget")
  '(token                 "Frame.forget")
  '(token                 "Grid.forget")
  '(token                 "H_Panedwindow.forget")
  '(token                 "H_Panedwindow.V_Separator.forget")
  '(token                 "H_Scrollable.forget")
  '(token                 "H_Separator.forget")
  '(token                 "H_Strut.forget")
  '(token                 "Label.forget")
  '(token                 "Listbox.forget")
  '(token                 "Listbox_Tuple.forget")
  '(token                 "Listdropentry.forget")
  '(token                 "Listdropspinner.forget")
  '(token                 "Listspinner.forget")
  '(token                 "Menu.forget")
  '(token                 "Menubutton.forget")
  '(token                 "Message.forget")
  '(token                 "Message_Window.forget")
  '(token                 "Multicombobox.forget")
  '(token                 "Multicombobox_X.forget")
  '(token                 "Notebook.forget")
  '(token                 "Num_Spinner.forget")
  '(token                 "OptionMenu.forget")
  '(token                 "Pack.forget")
  '(token                 "Place.forget")
  '(token                 "Progress_Gauge.forget")
  '(token                 "Radiobutton.forget")
  '(token                 "Scale.forget")
  '(token                 "Scrollbar.forget")
  '(token                 "Scrolled_Listbox.forget")
  '(token                 "Scrolled_Text.forget")
  '(token                 "Slide_Show.forget")
  '(token                 "Statuslabel.forget")
  '(token                 "Statuslabel.Label.forget")
  '(token                 "Statustext.forget")
  '(token                 "Statustext.Text.forget")
  '(token                 "Studbutton.forget")
  '(token                 "Tabbed_Notebook.forget")
  '(token                 "Text.forget")
  '(token                 "Tributton.forget")
  '(token                 "Up_Down_Button.forget")
  '(token                 "V_Panedwindow.forget")
  '(token                 "V_Panedwindow.H_Separator.forget")
  '(token                 "V_Scrollable.forget")
  '(token                 "V_Separator.forget")
  '(token                 "V_Strut.forget")
  '(token                 "Widget.forget")
  '(token                 "_C_Frame.forget")
  '(token                 "_Combobox.Scrolled_Listbox.forget")
  '(token                 "_Panedwindow.forget")
  '(token                 "_Scrollable.forget")
  '(token                 "_Separator.forget")
  '(token                 "_Spinnerentry.forget")
  '(token                 "_Statusframe.forget")
  '(replacement           "forget ()")
;;; forget()
)

(lse-define-fill-in "Scrollbar.fraction:x" 
  '(description           "Argument 1 of Scrollbar.fraction")
  '(leading               ",")
;;; Scrollbar.fraction:x
)

(lse-define-fill-in "Scrollbar.fraction:y" 
  '(description           "Argument 2 of Scrollbar.fraction")
  '(leading               ",")
;;; Scrollbar.fraction:y
)

(lse-define-fill-in "fraction(x,y)" 
  '(token)
  '(token                 "Scrollbar.fraction")
  '(replacement           "fraction («Scrollbar.fraction:x», «Scrollbar.fraction:y»)")
;;; fraction(x,y)
)

(lse-define-fill-in "frame()" 
  '(token)
  '(token                 "Balloon.frame")
  '(token                 "Progress_Gauge_T.frame")
  '(token                 "Tk.frame")
  '(token                 "Toplevel.frame")
  '(token                 "Wm.frame")
  '(replacement           "frame ()")
;;; frame()
)

(lse-define-fill-in "Wm.geometry:newGeometry" 
  '(description           "Argument 1 of Wm.geometry (default = None)")
  '(leading               ",")
;;; Wm.geometry:newGeometry
)

(lse-define-fill-in "geometry(newGeometry)" 
  '(token)
  '(token                 "Balloon.geometry")
  '(token                 "Progress_Gauge_T.geometry")
  '(token                 "Tk.geometry")
  '(token                 "Toplevel.geometry")
  '(token                 "Wm.geometry")
  '(replacement           "geometry (««Wm.geometry:newGeometry»»)")
;;; geometry(newGeometry)
)

(lse-define-fill-in "get()" 
  '(token)
  '(token                 "BooleanVar.get")
  '(token                 "C_Entry.get")
  '(token                 "DoubleVar.get")
  '(token                 "Entry.get")
  '(token                 "Entry_Tuple.get")
  '(token                 "IntVar.get")
  '(token                 "Scale.get")
  '(token                 "Scrollbar.get")
  '(token                 "StringVar.get")
  '(replacement           "get ()")
;;; get()
)

(lse-define-fill-in "Listbox.get:first" 
  '(description           "Argument 1 of Listbox.get")
  '(leading               ",")
;;; Listbox.get:first
)

(lse-define-fill-in "Listbox.get:last" 
  '(description           "Argument 2 of Listbox.get (default = None)")
  '(leading               ",")
;;; Listbox.get:last
)

(lse-define-fill-in "get(first,last)" 
  '(token)
  '(token                 "Listbox.get")
  '(replacement           "get («Listbox.get:first», ««Listbox.get:last»»)")
;;; get(first,last)
)

(lse-define-fill-in "Statustext.Text.get:index1" 
  '(description           "Argument 1 of Statustext.Text.get")
  '(leading               ",")
;;; Statustext.Text.get:index1
)

(lse-define-fill-in "Statustext.Text.get:index2" 
  '(description           "Argument 2 of Statustext.Text.get (default = None)")
  '(leading               ",")
;;; Statustext.Text.get:index2
)

(lse-define-fill-in "get(index1,index2)" 
  '(token)
  '(token                 "Statustext.Text.get")
  '(token                 "Text.get")
  '(replacement           "get («Statustext.Text.get:index1», ««Statustext.Text.get:index2»»)")
;;; get(index1,index2)
)

(lse-define-fill-in "PhotoImage.get:x" 
  '(description           "Argument 1 of PhotoImage.get")
  '(leading               ",")
;;; PhotoImage.get:x
)

(lse-define-fill-in "PhotoImage.get:y" 
  '(description           "Argument 2 of PhotoImage.get")
  '(leading               ",")
;;; PhotoImage.get:y
)

(lse-define-fill-in "get(x,y)" 
  '(token)
  '(token                 "PhotoImage.get")
  '(replacement           "get («PhotoImage.get:x», «PhotoImage.get:y»)")
;;; get(x,y)
)

(lse-define-fill-in "Misc.getboolean:s" 
  '(description           "Argument 1 of Misc.getboolean")
  '(leading               ",")
;;; Misc.getboolean:s
)

(lse-define-fill-in "getboolean(s)" 
  '(token)
  '(token                 "Balloon.getboolean")
  '(token                 "BaseWidget.getboolean")
  '(token                 "Button.getboolean")
  '(token                 "Buttonbox.getboolean")
  '(token                 "C_Entry.getboolean")
  '(token                 "C_Frame.getboolean")
  '(token                 "C_Listbox.getboolean")
  '(token                 "C_Menu.getboolean")
  '(token                 "C_Text.getboolean")
  '(token                 "Canvas.getboolean")
  '(token                 "Checkbutton.getboolean")
  '(token                 "Combo_Tuple.getboolean")
  '(token                 "Combo_Tuple_X.getboolean")
  '(token                 "Combobox.getboolean")
  '(token                 "Entry.getboolean")
  '(token                 "Entrybox.getboolean")
  '(token                 "Filename_Entry.getboolean")
  '(token                 "Frame.getboolean")
  '(token                 "H_Panedwindow.getboolean")
  '(token                 "H_Panedwindow.V_Separator.getboolean")
  '(token                 "H_Scrollable.getboolean")
  '(token                 "H_Separator.getboolean")
  '(token                 "H_Strut.getboolean")
  '(token                 "Label.getboolean")
  '(token                 "Listbox.getboolean")
  '(token                 "Listbox_Tuple.getboolean")
  '(token                 "Listdropentry.getboolean")
  '(token                 "Listdropspinner.getboolean")
  '(token                 "Listspinner.getboolean")
  '(token                 "Menu.getboolean")
  '(token                 "Menubutton.getboolean")
  '(token                 "Message.getboolean")
  '(token                 "Message_Window.getboolean")
  '(token                 "Misc.getboolean")
  '(token                 "Multicombobox.getboolean")
  '(token                 "Multicombobox_X.getboolean")
  '(token                 "Notebook.getboolean")
  '(token                 "Num_Spinner.getboolean")
  '(token                 "OptionMenu.getboolean")
  '(token                 "Progress_Gauge.getboolean")
  '(token                 "Progress_Gauge_T.getboolean")
  '(token                 "Radiobutton.getboolean")
  '(token                 "Scale.getboolean")
  '(token                 "Scrollbar.getboolean")
  '(token                 "Scrolled_Listbox.getboolean")
  '(token                 "Scrolled_Text.getboolean")
  '(token                 "Slide_Show.getboolean")
  '(token                 "Statuslabel.getboolean")
  '(token                 "Statuslabel.Label.getboolean")
  '(token                 "Statustext.getboolean")
  '(token                 "Statustext.Text.getboolean")
  '(token                 "Studbutton.getboolean")
  '(token                 "Tabbed_Notebook.getboolean")
  '(token                 "Text.getboolean")
  '(token                 "Tk.getboolean")
  '(token                 "Toplevel.getboolean")
  '(token                 "Tributton.getboolean")
  '(token                 "Up_Down_Button.getboolean")
  '(token                 "V_Panedwindow.getboolean")
  '(token                 "V_Panedwindow.H_Separator.getboolean")
  '(token                 "V_Scrollable.getboolean")
  '(token                 "V_Separator.getboolean")
  '(token                 "V_Strut.getboolean")
  '(token                 "Widget.getboolean")
  '(token                 "_C_Frame.getboolean")
  '(token                 "_Combobox.Scrolled_Listbox.getboolean")
  '(token                 "_Panedwindow.getboolean")
  '(token                 "_Scrollable.getboolean")
  '(token                 "_Separator.getboolean")
  '(token                 "_Spinnerentry.getboolean")
  '(token                 "_Statusframe.getboolean")
  '(replacement           "getboolean («Misc.getboolean:s»)")
;;; getboolean(s)
)

(lse-define-fill-in "Misc.getdouble:s" 
  '(description           "Argument 1 of Misc.getdouble")
  '(leading               ",")
;;; Misc.getdouble:s
)

(lse-define-fill-in "getdouble(s)" 
  '(token)
  '(token                 "Balloon.getdouble")
  '(token                 "BaseWidget.getdouble")
  '(token                 "Button.getdouble")
  '(token                 "Buttonbox.getdouble")
  '(token                 "C_Entry.getdouble")
  '(token                 "C_Frame.getdouble")
  '(token                 "C_Listbox.getdouble")
  '(token                 "C_Menu.getdouble")
  '(token                 "C_Text.getdouble")
  '(token                 "Canvas.getdouble")
  '(token                 "Checkbutton.getdouble")
  '(token                 "Combo_Tuple.getdouble")
  '(token                 "Combo_Tuple_X.getdouble")
  '(token                 "Combobox.getdouble")
  '(token                 "Entry.getdouble")
  '(token                 "Entrybox.getdouble")
  '(token                 "Filename_Entry.getdouble")
  '(token                 "Frame.getdouble")
  '(token                 "H_Panedwindow.getdouble")
  '(token                 "H_Panedwindow.V_Separator.getdouble")
  '(token                 "H_Scrollable.getdouble")
  '(token                 "H_Separator.getdouble")
  '(token                 "H_Strut.getdouble")
  '(token                 "Label.getdouble")
  '(token                 "Listbox.getdouble")
  '(token                 "Listbox_Tuple.getdouble")
  '(token                 "Listdropentry.getdouble")
  '(token                 "Listdropspinner.getdouble")
  '(token                 "Listspinner.getdouble")
  '(token                 "Menu.getdouble")
  '(token                 "Menubutton.getdouble")
  '(token                 "Message.getdouble")
  '(token                 "Message_Window.getdouble")
  '(token                 "Misc.getdouble")
  '(token                 "Multicombobox.getdouble")
  '(token                 "Multicombobox_X.getdouble")
  '(token                 "Notebook.getdouble")
  '(token                 "Num_Spinner.getdouble")
  '(token                 "OptionMenu.getdouble")
  '(token                 "Progress_Gauge.getdouble")
  '(token                 "Progress_Gauge_T.getdouble")
  '(token                 "Radiobutton.getdouble")
  '(token                 "Scale.getdouble")
  '(token                 "Scrollbar.getdouble")
  '(token                 "Scrolled_Listbox.getdouble")
  '(token                 "Scrolled_Text.getdouble")
  '(token                 "Slide_Show.getdouble")
  '(token                 "Statuslabel.getdouble")
  '(token                 "Statuslabel.Label.getdouble")
  '(token                 "Statustext.getdouble")
  '(token                 "Statustext.Text.getdouble")
  '(token                 "Studbutton.getdouble")
  '(token                 "Tabbed_Notebook.getdouble")
  '(token                 "Text.getdouble")
  '(token                 "Tk.getdouble")
  '(token                 "Toplevel.getdouble")
  '(token                 "Tributton.getdouble")
  '(token                 "Up_Down_Button.getdouble")
  '(token                 "V_Panedwindow.getdouble")
  '(token                 "V_Panedwindow.H_Separator.getdouble")
  '(token                 "V_Scrollable.getdouble")
  '(token                 "V_Separator.getdouble")
  '(token                 "V_Strut.getdouble")
  '(token                 "Widget.getdouble")
  '(token                 "_C_Frame.getdouble")
  '(token                 "_Combobox.Scrolled_Listbox.getdouble")
  '(token                 "_Panedwindow.getdouble")
  '(token                 "_Scrollable.getdouble")
  '(token                 "_Separator.getdouble")
  '(token                 "_Spinnerentry.getdouble")
  '(token                 "_Statusframe.getdouble")
  '(replacement           "getdouble («Misc.getdouble:s»)")
;;; getdouble(s)
)

(lse-define-fill-in "Misc.getint:s" 
  '(description           "Argument 1 of Misc.getint")
  '(leading               ",")
;;; Misc.getint:s
)

(lse-define-fill-in "getint(s)" 
  '(token)
  '(token                 "Balloon.getint")
  '(token                 "BaseWidget.getint")
  '(token                 "Button.getint")
  '(token                 "Buttonbox.getint")
  '(token                 "C_Entry.getint")
  '(token                 "C_Frame.getint")
  '(token                 "C_Listbox.getint")
  '(token                 "C_Menu.getint")
  '(token                 "C_Text.getint")
  '(token                 "Canvas.getint")
  '(token                 "Checkbutton.getint")
  '(token                 "Combo_Tuple.getint")
  '(token                 "Combo_Tuple_X.getint")
  '(token                 "Combobox.getint")
  '(token                 "Entry.getint")
  '(token                 "Entrybox.getint")
  '(token                 "Filename_Entry.getint")
  '(token                 "Frame.getint")
  '(token                 "H_Panedwindow.getint")
  '(token                 "H_Panedwindow.V_Separator.getint")
  '(token                 "H_Scrollable.getint")
  '(token                 "H_Separator.getint")
  '(token                 "H_Strut.getint")
  '(token                 "Label.getint")
  '(token                 "Listbox.getint")
  '(token                 "Listbox_Tuple.getint")
  '(token                 "Listdropentry.getint")
  '(token                 "Listdropspinner.getint")
  '(token                 "Listspinner.getint")
  '(token                 "Menu.getint")
  '(token                 "Menubutton.getint")
  '(token                 "Message.getint")
  '(token                 "Message_Window.getint")
  '(token                 "Misc.getint")
  '(token                 "Multicombobox.getint")
  '(token                 "Multicombobox_X.getint")
  '(token                 "Notebook.getint")
  '(token                 "Num_Spinner.getint")
  '(token                 "OptionMenu.getint")
  '(token                 "Progress_Gauge.getint")
  '(token                 "Progress_Gauge_T.getint")
  '(token                 "Radiobutton.getint")
  '(token                 "Scale.getint")
  '(token                 "Scrollbar.getint")
  '(token                 "Scrolled_Listbox.getint")
  '(token                 "Scrolled_Text.getint")
  '(token                 "Slide_Show.getint")
  '(token                 "Statuslabel.getint")
  '(token                 "Statuslabel.Label.getint")
  '(token                 "Statustext.getint")
  '(token                 "Statustext.Text.getint")
  '(token                 "Studbutton.getint")
  '(token                 "Tabbed_Notebook.getint")
  '(token                 "Text.getint")
  '(token                 "Tk.getint")
  '(token                 "Toplevel.getint")
  '(token                 "Tributton.getint")
  '(token                 "Up_Down_Button.getint")
  '(token                 "V_Panedwindow.getint")
  '(token                 "V_Panedwindow.H_Separator.getint")
  '(token                 "V_Scrollable.getint")
  '(token                 "V_Separator.getint")
  '(token                 "V_Strut.getint")
  '(token                 "Widget.getint")
  '(token                 "_C_Frame.getint")
  '(token                 "_Combobox.Scrolled_Listbox.getint")
  '(token                 "_Panedwindow.getint")
  '(token                 "_Scrollable.getint")
  '(token                 "_Separator.getint")
  '(token                 "_Spinnerentry.getint")
  '(token                 "_Statusframe.getint")
  '(replacement           "getint («Misc.getint:s»)")
;;; getint(s)
)

(lse-define-fill-in "gettags()" 
  '(token)
  '(token                 "Arc.gettags")
  '(token                 "Bitmap.gettags")
  '(token                 "CanvasItem.gettags")
  '(token                 "CanvasText.gettags")
  '(token                 "Group.gettags")
  '(token                 "ImageItem.gettags")
  '(token                 "Line.gettags")
  '(token                 "Oval.gettags")
  '(token                 "Polygon.gettags")
  '(token                 "Rectangle.gettags")
  '(token                 "Window.gettags")
  '(replacement           "gettags ()")
;;; gettags()
)

(lse-define-fill-in "Canvas.gettags:args" 
  '(description           "Argument 1 of Canvas.gettags")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.gettags:args
)

(lse-define-fill-in "gettags(args)" 
  '(token)
  '(token                 "Canvas.gettags")
  '(replacement           "gettags (««Canvas.gettags:args»»···)")
;;; gettags(args)
)

(lse-define-fill-in "Misc.getvar:name" 
  '(description           "Argument 1 of Misc.getvar (default = PY_VAR)")
  '(leading               ",")
;;; Misc.getvar:name
)

(lse-define-fill-in "getvar(name)" 
  '(token)
  '(token                 "Balloon.getvar")
  '(token                 "BaseWidget.getvar")
  '(token                 "Button.getvar")
  '(token                 "Buttonbox.getvar")
  '(token                 "C_Entry.getvar")
  '(token                 "C_Frame.getvar")
  '(token                 "C_Listbox.getvar")
  '(token                 "C_Menu.getvar")
  '(token                 "C_Text.getvar")
  '(token                 "Canvas.getvar")
  '(token                 "Checkbutton.getvar")
  '(token                 "Combo_Tuple.getvar")
  '(token                 "Combo_Tuple_X.getvar")
  '(token                 "Combobox.getvar")
  '(token                 "Entry.getvar")
  '(token                 "Entrybox.getvar")
  '(token                 "Filename_Entry.getvar")
  '(token                 "Frame.getvar")
  '(token                 "H_Panedwindow.getvar")
  '(token                 "H_Panedwindow.V_Separator.getvar")
  '(token                 "H_Scrollable.getvar")
  '(token                 "H_Separator.getvar")
  '(token                 "H_Strut.getvar")
  '(token                 "Label.getvar")
  '(token                 "Listbox.getvar")
  '(token                 "Listbox_Tuple.getvar")
  '(token                 "Listdropentry.getvar")
  '(token                 "Listdropspinner.getvar")
  '(token                 "Listspinner.getvar")
  '(token                 "Menu.getvar")
  '(token                 "Menubutton.getvar")
  '(token                 "Message.getvar")
  '(token                 "Message_Window.getvar")
  '(token                 "Misc.getvar")
  '(token                 "Multicombobox.getvar")
  '(token                 "Multicombobox_X.getvar")
  '(token                 "Notebook.getvar")
  '(token                 "Num_Spinner.getvar")
  '(token                 "OptionMenu.getvar")
  '(token                 "Progress_Gauge.getvar")
  '(token                 "Progress_Gauge_T.getvar")
  '(token                 "Radiobutton.getvar")
  '(token                 "Scale.getvar")
  '(token                 "Scrollbar.getvar")
  '(token                 "Scrolled_Listbox.getvar")
  '(token                 "Scrolled_Text.getvar")
  '(token                 "Slide_Show.getvar")
  '(token                 "Statuslabel.getvar")
  '(token                 "Statuslabel.Label.getvar")
  '(token                 "Statustext.getvar")
  '(token                 "Statustext.Text.getvar")
  '(token                 "Studbutton.getvar")
  '(token                 "Tabbed_Notebook.getvar")
  '(token                 "Text.getvar")
  '(token                 "Tk.getvar")
  '(token                 "Toplevel.getvar")
  '(token                 "Tributton.getvar")
  '(token                 "Up_Down_Button.getvar")
  '(token                 "V_Panedwindow.getvar")
  '(token                 "V_Panedwindow.H_Separator.getvar")
  '(token                 "V_Scrollable.getvar")
  '(token                 "V_Separator.getvar")
  '(token                 "V_Strut.getvar")
  '(token                 "Widget.getvar")
  '(token                 "_C_Frame.getvar")
  '(token                 "_Combobox.Scrolled_Listbox.getvar")
  '(token                 "_Panedwindow.getvar")
  '(token                 "_Scrollable.getvar")
  '(token                 "_Separator.getvar")
  '(token                 "_Spinnerentry.getvar")
  '(token                 "_Statusframe.getvar")
  '(replacement           "getvar (««Misc.getvar:name»»)")
;;; getvar(name)
)

(lse-define-fill-in "grab_current()" 
  '(token)
  '(token                 "Balloon.grab_current")
  '(token                 "BaseWidget.grab_current")
  '(token                 "Button.grab_current")
  '(token                 "Buttonbox.grab_current")
  '(token                 "C_Entry.grab_current")
  '(token                 "C_Frame.grab_current")
  '(token                 "C_Listbox.grab_current")
  '(token                 "C_Menu.grab_current")
  '(token                 "C_Text.grab_current")
  '(token                 "Canvas.grab_current")
  '(token                 "Checkbutton.grab_current")
  '(token                 "Combo_Tuple.grab_current")
  '(token                 "Combo_Tuple_X.grab_current")
  '(token                 "Combobox.grab_current")
  '(token                 "Entry.grab_current")
  '(token                 "Entrybox.grab_current")
  '(token                 "Filename_Entry.grab_current")
  '(token                 "Frame.grab_current")
  '(token                 "H_Panedwindow.grab_current")
  '(token                 "H_Panedwindow.V_Separator.grab_current")
  '(token                 "H_Scrollable.grab_current")
  '(token                 "H_Separator.grab_current")
  '(token                 "H_Strut.grab_current")
  '(token                 "Label.grab_current")
  '(token                 "Listbox.grab_current")
  '(token                 "Listbox_Tuple.grab_current")
  '(token                 "Listdropentry.grab_current")
  '(token                 "Listdropspinner.grab_current")
  '(token                 "Listspinner.grab_current")
  '(token                 "Menu.grab_current")
  '(token                 "Menubutton.grab_current")
  '(token                 "Message.grab_current")
  '(token                 "Message_Window.grab_current")
  '(token                 "Misc.grab_current")
  '(token                 "Multicombobox.grab_current")
  '(token                 "Multicombobox_X.grab_current")
  '(token                 "Notebook.grab_current")
  '(token                 "Num_Spinner.grab_current")
  '(token                 "OptionMenu.grab_current")
  '(token                 "Progress_Gauge.grab_current")
  '(token                 "Progress_Gauge_T.grab_current")
  '(token                 "Radiobutton.grab_current")
  '(token                 "Scale.grab_current")
  '(token                 "Scrollbar.grab_current")
  '(token                 "Scrolled_Listbox.grab_current")
  '(token                 "Scrolled_Text.grab_current")
  '(token                 "Slide_Show.grab_current")
  '(token                 "Statuslabel.grab_current")
  '(token                 "Statuslabel.Label.grab_current")
  '(token                 "Statustext.grab_current")
  '(token                 "Statustext.Text.grab_current")
  '(token                 "Studbutton.grab_current")
  '(token                 "Tabbed_Notebook.grab_current")
  '(token                 "Text.grab_current")
  '(token                 "Tk.grab_current")
  '(token                 "Toplevel.grab_current")
  '(token                 "Tributton.grab_current")
  '(token                 "Up_Down_Button.grab_current")
  '(token                 "V_Panedwindow.grab_current")
  '(token                 "V_Panedwindow.H_Separator.grab_current")
  '(token                 "V_Scrollable.grab_current")
  '(token                 "V_Separator.grab_current")
  '(token                 "V_Strut.grab_current")
  '(token                 "Widget.grab_current")
  '(token                 "_C_Frame.grab_current")
  '(token                 "_Combobox.Scrolled_Listbox.grab_current")
  '(token                 "_Panedwindow.grab_current")
  '(token                 "_Scrollable.grab_current")
  '(token                 "_Separator.grab_current")
  '(token                 "_Spinnerentry.grab_current")
  '(token                 "_Statusframe.grab_current")
  '(replacement           "grab_current ()")
;;; grab_current()
)

(lse-define-fill-in "grab_release()" 
  '(token)
  '(token                 "Balloon.grab_release")
  '(token                 "BaseWidget.grab_release")
  '(token                 "Button.grab_release")
  '(token                 "Buttonbox.grab_release")
  '(token                 "C_Entry.grab_release")
  '(token                 "C_Frame.grab_release")
  '(token                 "C_Listbox.grab_release")
  '(token                 "C_Menu.grab_release")
  '(token                 "C_Text.grab_release")
  '(token                 "Canvas.grab_release")
  '(token                 "Checkbutton.grab_release")
  '(token                 "Combo_Tuple.grab_release")
  '(token                 "Combo_Tuple_X.grab_release")
  '(token                 "Combobox.grab_release")
  '(token                 "Entry.grab_release")
  '(token                 "Entrybox.grab_release")
  '(token                 "Filename_Entry.grab_release")
  '(token                 "Frame.grab_release")
  '(token                 "H_Panedwindow.grab_release")
  '(token                 "H_Panedwindow.V_Separator.grab_release")
  '(token                 "H_Scrollable.grab_release")
  '(token                 "H_Separator.grab_release")
  '(token                 "H_Strut.grab_release")
  '(token                 "Label.grab_release")
  '(token                 "Listbox.grab_release")
  '(token                 "Listbox_Tuple.grab_release")
  '(token                 "Listdropentry.grab_release")
  '(token                 "Listdropspinner.grab_release")
  '(token                 "Listspinner.grab_release")
  '(token                 "Menu.grab_release")
  '(token                 "Menubutton.grab_release")
  '(token                 "Message.grab_release")
  '(token                 "Message_Window.grab_release")
  '(token                 "Misc.grab_release")
  '(token                 "Multicombobox.grab_release")
  '(token                 "Multicombobox_X.grab_release")
  '(token                 "Notebook.grab_release")
  '(token                 "Num_Spinner.grab_release")
  '(token                 "OptionMenu.grab_release")
  '(token                 "Progress_Gauge.grab_release")
  '(token                 "Progress_Gauge_T.grab_release")
  '(token                 "Radiobutton.grab_release")
  '(token                 "Scale.grab_release")
  '(token                 "Scrollbar.grab_release")
  '(token                 "Scrolled_Listbox.grab_release")
  '(token                 "Scrolled_Text.grab_release")
  '(token                 "Slide_Show.grab_release")
  '(token                 "Statuslabel.grab_release")
  '(token                 "Statuslabel.Label.grab_release")
  '(token                 "Statustext.grab_release")
  '(token                 "Statustext.Text.grab_release")
  '(token                 "Studbutton.grab_release")
  '(token                 "Tabbed_Notebook.grab_release")
  '(token                 "Text.grab_release")
  '(token                 "Tk.grab_release")
  '(token                 "Toplevel.grab_release")
  '(token                 "Tributton.grab_release")
  '(token                 "Up_Down_Button.grab_release")
  '(token                 "V_Panedwindow.grab_release")
  '(token                 "V_Panedwindow.H_Separator.grab_release")
  '(token                 "V_Scrollable.grab_release")
  '(token                 "V_Separator.grab_release")
  '(token                 "V_Strut.grab_release")
  '(token                 "Widget.grab_release")
  '(token                 "_C_Frame.grab_release")
  '(token                 "_Combobox.Scrolled_Listbox.grab_release")
  '(token                 "_Panedwindow.grab_release")
  '(token                 "_Scrollable.grab_release")
  '(token                 "_Separator.grab_release")
  '(token                 "_Spinnerentry.grab_release")
  '(token                 "_Statusframe.grab_release")
  '(replacement           "grab_release ()")
;;; grab_release()
)

(lse-define-fill-in "grab_set()" 
  '(token)
  '(token                 "Balloon.grab_set")
  '(token                 "BaseWidget.grab_set")
  '(token                 "Button.grab_set")
  '(token                 "Buttonbox.grab_set")
  '(token                 "C_Entry.grab_set")
  '(token                 "C_Frame.grab_set")
  '(token                 "C_Listbox.grab_set")
  '(token                 "C_Menu.grab_set")
  '(token                 "C_Text.grab_set")
  '(token                 "Canvas.grab_set")
  '(token                 "Checkbutton.grab_set")
  '(token                 "Combo_Tuple.grab_set")
  '(token                 "Combo_Tuple_X.grab_set")
  '(token                 "Combobox.grab_set")
  '(token                 "Entry.grab_set")
  '(token                 "Entrybox.grab_set")
  '(token                 "Filename_Entry.grab_set")
  '(token                 "Frame.grab_set")
  '(token                 "H_Panedwindow.grab_set")
  '(token                 "H_Panedwindow.V_Separator.grab_set")
  '(token                 "H_Scrollable.grab_set")
  '(token                 "H_Separator.grab_set")
  '(token                 "H_Strut.grab_set")
  '(token                 "Label.grab_set")
  '(token                 "Listbox.grab_set")
  '(token                 "Listbox_Tuple.grab_set")
  '(token                 "Listdropentry.grab_set")
  '(token                 "Listdropspinner.grab_set")
  '(token                 "Listspinner.grab_set")
  '(token                 "Menu.grab_set")
  '(token                 "Menubutton.grab_set")
  '(token                 "Message.grab_set")
  '(token                 "Message_Window.grab_set")
  '(token                 "Misc.grab_set")
  '(token                 "Multicombobox.grab_set")
  '(token                 "Multicombobox_X.grab_set")
  '(token                 "Notebook.grab_set")
  '(token                 "Num_Spinner.grab_set")
  '(token                 "OptionMenu.grab_set")
  '(token                 "Progress_Gauge.grab_set")
  '(token                 "Progress_Gauge_T.grab_set")
  '(token                 "Radiobutton.grab_set")
  '(token                 "Scale.grab_set")
  '(token                 "Scrollbar.grab_set")
  '(token                 "Scrolled_Listbox.grab_set")
  '(token                 "Scrolled_Text.grab_set")
  '(token                 "Slide_Show.grab_set")
  '(token                 "Statuslabel.grab_set")
  '(token                 "Statuslabel.Label.grab_set")
  '(token                 "Statustext.grab_set")
  '(token                 "Statustext.Text.grab_set")
  '(token                 "Studbutton.grab_set")
  '(token                 "Tabbed_Notebook.grab_set")
  '(token                 "Text.grab_set")
  '(token                 "Tk.grab_set")
  '(token                 "Toplevel.grab_set")
  '(token                 "Tributton.grab_set")
  '(token                 "Up_Down_Button.grab_set")
  '(token                 "V_Panedwindow.grab_set")
  '(token                 "V_Panedwindow.H_Separator.grab_set")
  '(token                 "V_Scrollable.grab_set")
  '(token                 "V_Separator.grab_set")
  '(token                 "V_Strut.grab_set")
  '(token                 "Widget.grab_set")
  '(token                 "_C_Frame.grab_set")
  '(token                 "_Combobox.Scrolled_Listbox.grab_set")
  '(token                 "_Panedwindow.grab_set")
  '(token                 "_Scrollable.grab_set")
  '(token                 "_Separator.grab_set")
  '(token                 "_Spinnerentry.grab_set")
  '(token                 "_Statusframe.grab_set")
  '(replacement           "grab_set ()")
;;; grab_set()
)

(lse-define-fill-in "grab_set_global()" 
  '(token)
  '(token                 "Balloon.grab_set_global")
  '(token                 "BaseWidget.grab_set_global")
  '(token                 "Button.grab_set_global")
  '(token                 "Buttonbox.grab_set_global")
  '(token                 "C_Entry.grab_set_global")
  '(token                 "C_Frame.grab_set_global")
  '(token                 "C_Listbox.grab_set_global")
  '(token                 "C_Menu.grab_set_global")
  '(token                 "C_Text.grab_set_global")
  '(token                 "Canvas.grab_set_global")
  '(token                 "Checkbutton.grab_set_global")
  '(token                 "Combo_Tuple.grab_set_global")
  '(token                 "Combo_Tuple_X.grab_set_global")
  '(token                 "Combobox.grab_set_global")
  '(token                 "Entry.grab_set_global")
  '(token                 "Entrybox.grab_set_global")
  '(token                 "Filename_Entry.grab_set_global")
  '(token                 "Frame.grab_set_global")
  '(token                 "H_Panedwindow.grab_set_global")
  '(token                 "H_Panedwindow.V_Separator.grab_set_global")
  '(token                 "H_Scrollable.grab_set_global")
  '(token                 "H_Separator.grab_set_global")
  '(token                 "H_Strut.grab_set_global")
  '(token                 "Label.grab_set_global")
  '(token                 "Listbox.grab_set_global")
  '(token                 "Listbox_Tuple.grab_set_global")
  '(token                 "Listdropentry.grab_set_global")
  '(token                 "Listdropspinner.grab_set_global")
  '(token                 "Listspinner.grab_set_global")
  '(token                 "Menu.grab_set_global")
  '(token                 "Menubutton.grab_set_global")
  '(token                 "Message.grab_set_global")
  '(token                 "Message_Window.grab_set_global")
  '(token                 "Misc.grab_set_global")
  '(token                 "Multicombobox.grab_set_global")
  '(token                 "Multicombobox_X.grab_set_global")
  '(token                 "Notebook.grab_set_global")
  '(token                 "Num_Spinner.grab_set_global")
  '(token                 "OptionMenu.grab_set_global")
  '(token                 "Progress_Gauge.grab_set_global")
  '(token                 "Progress_Gauge_T.grab_set_global")
  '(token                 "Radiobutton.grab_set_global")
  '(token                 "Scale.grab_set_global")
  '(token                 "Scrollbar.grab_set_global")
  '(token                 "Scrolled_Listbox.grab_set_global")
  '(token                 "Scrolled_Text.grab_set_global")
  '(token                 "Slide_Show.grab_set_global")
  '(token                 "Statuslabel.grab_set_global")
  '(token                 "Statuslabel.Label.grab_set_global")
  '(token                 "Statustext.grab_set_global")
  '(token                 "Statustext.Text.grab_set_global")
  '(token                 "Studbutton.grab_set_global")
  '(token                 "Tabbed_Notebook.grab_set_global")
  '(token                 "Text.grab_set_global")
  '(token                 "Tk.grab_set_global")
  '(token                 "Toplevel.grab_set_global")
  '(token                 "Tributton.grab_set_global")
  '(token                 "Up_Down_Button.grab_set_global")
  '(token                 "V_Panedwindow.grab_set_global")
  '(token                 "V_Panedwindow.H_Separator.grab_set_global")
  '(token                 "V_Scrollable.grab_set_global")
  '(token                 "V_Separator.grab_set_global")
  '(token                 "V_Strut.grab_set_global")
  '(token                 "Widget.grab_set_global")
  '(token                 "_C_Frame.grab_set_global")
  '(token                 "_Combobox.Scrolled_Listbox.grab_set_global")
  '(token                 "_Panedwindow.grab_set_global")
  '(token                 "_Scrollable.grab_set_global")
  '(token                 "_Separator.grab_set_global")
  '(token                 "_Spinnerentry.grab_set_global")
  '(token                 "_Statusframe.grab_set_global")
  '(replacement           "grab_set_global ()")
;;; grab_set_global()
)

(lse-define-fill-in "grab_status()" 
  '(token)
  '(token                 "Balloon.grab_status")
  '(token                 "BaseWidget.grab_status")
  '(token                 "Button.grab_status")
  '(token                 "Buttonbox.grab_status")
  '(token                 "C_Entry.grab_status")
  '(token                 "C_Frame.grab_status")
  '(token                 "C_Listbox.grab_status")
  '(token                 "C_Menu.grab_status")
  '(token                 "C_Text.grab_status")
  '(token                 "Canvas.grab_status")
  '(token                 "Checkbutton.grab_status")
  '(token                 "Combo_Tuple.grab_status")
  '(token                 "Combo_Tuple_X.grab_status")
  '(token                 "Combobox.grab_status")
  '(token                 "Entry.grab_status")
  '(token                 "Entrybox.grab_status")
  '(token                 "Filename_Entry.grab_status")
  '(token                 "Frame.grab_status")
  '(token                 "H_Panedwindow.grab_status")
  '(token                 "H_Panedwindow.V_Separator.grab_status")
  '(token                 "H_Scrollable.grab_status")
  '(token                 "H_Separator.grab_status")
  '(token                 "H_Strut.grab_status")
  '(token                 "Label.grab_status")
  '(token                 "Listbox.grab_status")
  '(token                 "Listbox_Tuple.grab_status")
  '(token                 "Listdropentry.grab_status")
  '(token                 "Listdropspinner.grab_status")
  '(token                 "Listspinner.grab_status")
  '(token                 "Menu.grab_status")
  '(token                 "Menubutton.grab_status")
  '(token                 "Message.grab_status")
  '(token                 "Message_Window.grab_status")
  '(token                 "Misc.grab_status")
  '(token                 "Multicombobox.grab_status")
  '(token                 "Multicombobox_X.grab_status")
  '(token                 "Notebook.grab_status")
  '(token                 "Num_Spinner.grab_status")
  '(token                 "OptionMenu.grab_status")
  '(token                 "Progress_Gauge.grab_status")
  '(token                 "Progress_Gauge_T.grab_status")
  '(token                 "Radiobutton.grab_status")
  '(token                 "Scale.grab_status")
  '(token                 "Scrollbar.grab_status")
  '(token                 "Scrolled_Listbox.grab_status")
  '(token                 "Scrolled_Text.grab_status")
  '(token                 "Slide_Show.grab_status")
  '(token                 "Statuslabel.grab_status")
  '(token                 "Statuslabel.Label.grab_status")
  '(token                 "Statustext.grab_status")
  '(token                 "Statustext.Text.grab_status")
  '(token                 "Studbutton.grab_status")
  '(token                 "Tabbed_Notebook.grab_status")
  '(token                 "Text.grab_status")
  '(token                 "Tk.grab_status")
  '(token                 "Toplevel.grab_status")
  '(token                 "Tributton.grab_status")
  '(token                 "Up_Down_Button.grab_status")
  '(token                 "V_Panedwindow.grab_status")
  '(token                 "V_Panedwindow.H_Separator.grab_status")
  '(token                 "V_Scrollable.grab_status")
  '(token                 "V_Separator.grab_status")
  '(token                 "V_Strut.grab_status")
  '(token                 "Widget.grab_status")
  '(token                 "_C_Frame.grab_status")
  '(token                 "_Combobox.Scrolled_Listbox.grab_status")
  '(token                 "_Panedwindow.grab_status")
  '(token                 "_Scrollable.grab_status")
  '(token                 "_Separator.grab_status")
  '(token                 "_Spinnerentry.grab_status")
  '(token                 "_Statusframe.grab_status")
  '(replacement           "grab_status ()")
;;; grab_status()
)

(lse-define-fill-in "Wm.grid:baseWidth" 
  '(description           "Argument 1 of Wm.grid (default = None)")
  '(leading               ",")
;;; Wm.grid:baseWidth
)

(lse-define-fill-in "Wm.grid:baseHeight" 
  '(description           "Argument 2 of Wm.grid (default = None)")
  '(leading               ",")
;;; Wm.grid:baseHeight
)

(lse-define-fill-in "Wm.grid:widthInc" 
  '(description           "Argument 3 of Wm.grid (default = None)")
  '(leading               ",")
;;; Wm.grid:widthInc
)

(lse-define-fill-in "Wm.grid:heightInc" 
  '(description           "Argument 4 of Wm.grid (default = None)")
  '(leading               ",")
;;; Wm.grid:heightInc
)

(lse-define-fill-in "grid(baseWidth,baseHeight,widthInc,heightInc)" 
  '(token)
  '(token                 "Balloon.grid")
  '(token                 "Progress_Gauge_T.grid")
  '(token                 "Tk.grid")
  '(token                 "Toplevel.grid")
  '(token                 "Wm.grid")
  '(replacement           "grid (««Wm.grid:baseWidth»», ««Wm.grid:baseHeight»», ««Wm.grid:widthInc»», ««Wm.grid:heightInc»»)")
;;; grid(baseWidth,baseHeight,widthInc,heightInc)
)

(lse-define-fill-in "Grid.grid:cnf" 
  '(description           "Argument 1 of Grid.grid (default = {})")
  '(leading               ",")
;;; Grid.grid:cnf
)

(lse-define-fill-in "grid(cnf,kw)" 
  '(token)
  '(token                 "Button.grid")
  '(token                 "Buttonbox.grid")
  '(token                 "C_Entry.grid")
  '(token                 "C_Frame.grid")
  '(token                 "C_Listbox.grid")
  '(token                 "C_Menu.grid")
  '(token                 "C_Text.grid")
  '(token                 "Canvas.grid")
  '(token                 "Checkbutton.grid")
  '(token                 "Combo_Tuple.grid")
  '(token                 "Combo_Tuple_X.grid")
  '(token                 "Combobox.grid")
  '(token                 "Entry.grid")
  '(token                 "Entrybox.grid")
  '(token                 "Filename_Entry.grid")
  '(token                 "Frame.grid")
  '(token                 "Grid.grid")
  '(token                 "H_Panedwindow.grid")
  '(token                 "H_Panedwindow.V_Separator.grid")
  '(token                 "H_Scrollable.grid")
  '(token                 "H_Separator.grid")
  '(token                 "H_Strut.grid")
  '(token                 "Label.grid")
  '(token                 "Listbox.grid")
  '(token                 "Listbox_Tuple.grid")
  '(token                 "Listdropentry.grid")
  '(token                 "Listdropspinner.grid")
  '(token                 "Listspinner.grid")
  '(token                 "Menu.grid")
  '(token                 "Menubutton.grid")
  '(token                 "Message.grid")
  '(token                 "Message_Window.grid")
  '(token                 "Multicombobox.grid")
  '(token                 "Multicombobox_X.grid")
  '(token                 "Notebook.grid")
  '(token                 "Num_Spinner.grid")
  '(token                 "OptionMenu.grid")
  '(token                 "Progress_Gauge.grid")
  '(token                 "Radiobutton.grid")
  '(token                 "Scale.grid")
  '(token                 "Scrollbar.grid")
  '(token                 "Scrolled_Listbox.grid")
  '(token                 "Scrolled_Text.grid")
  '(token                 "Slide_Show.grid")
  '(token                 "Statuslabel.grid")
  '(token                 "Statuslabel.Label.grid")
  '(token                 "Statustext.grid")
  '(token                 "Statustext.Text.grid")
  '(token                 "Studbutton.grid")
  '(token                 "Tabbed_Notebook.grid")
  '(token                 "Text.grid")
  '(token                 "Tributton.grid")
  '(token                 "Up_Down_Button.grid")
  '(token                 "V_Panedwindow.grid")
  '(token                 "V_Panedwindow.H_Separator.grid")
  '(token                 "V_Scrollable.grid")
  '(token                 "V_Separator.grid")
  '(token                 "V_Strut.grid")
  '(token                 "Widget.grid")
  '(token                 "_C_Frame.grid")
  '(token                 "_Combobox.Scrolled_Listbox.grid")
  '(token                 "_Panedwindow.grid")
  '(token                 "_Scrollable.grid")
  '(token                 "_Separator.grid")
  '(token                 "_Spinnerentry.grid")
  '(token                 "_Statusframe.grid")
  '(replacement           "grid (««Grid.grid:cnf»», ««py-named-arg»»···)")
;;; grid(cnf,kw)
)

(lse-define-fill-in "_Separator.grid:span" 
  '(description           "Argument 1 of _Separator.grid (default = None)")
  '(leading               ",")
;;; _Separator.grid:span
)

(lse-define-fill-in "grid(span,kw)" 
  '(token)
  '(token                 "H_Panedwindow.V_Separator.grid")
  '(token                 "H_Separator.grid")
  '(token                 "V_Panedwindow.H_Separator.grid")
  '(token                 "V_Separator.grid")
  '(token                 "_Separator.grid")
  '(replacement           "grid (««_Separator.grid:span»», ««py-named-arg»»···)")
;;; grid(span,kw)
)

(lse-define-fill-in "Misc.grid_bbox:column" 
  '(description           "Argument 1 of Misc.grid_bbox")
  '(leading               ",")
;;; Misc.grid_bbox:column
)

(lse-define-fill-in "Misc.grid_bbox:row" 
  '(description           "Argument 2 of Misc.grid_bbox")
  '(leading               ",")
;;; Misc.grid_bbox:row
)

(lse-define-fill-in "grid_bbox(column,row)" 
  '(token)
  '(token                 "Balloon.grid_bbox")
  '(token                 "BaseWidget.grid_bbox")
  '(token                 "Button.grid_bbox")
  '(token                 "Buttonbox.grid_bbox")
  '(token                 "C_Entry.grid_bbox")
  '(token                 "C_Frame.grid_bbox")
  '(token                 "C_Listbox.grid_bbox")
  '(token                 "C_Menu.grid_bbox")
  '(token                 "C_Text.grid_bbox")
  '(token                 "Canvas.grid_bbox")
  '(token                 "Checkbutton.grid_bbox")
  '(token                 "Combo_Tuple.grid_bbox")
  '(token                 "Combo_Tuple_X.grid_bbox")
  '(token                 "Combobox.grid_bbox")
  '(token                 "Entry.grid_bbox")
  '(token                 "Entrybox.grid_bbox")
  '(token                 "Filename_Entry.grid_bbox")
  '(token                 "Frame.grid_bbox")
  '(token                 "Grid.grid_bbox")
  '(token                 "H_Panedwindow.grid_bbox")
  '(token                 "H_Panedwindow.V_Separator.grid_bbox")
  '(token                 "H_Scrollable.grid_bbox")
  '(token                 "H_Separator.grid_bbox")
  '(token                 "H_Strut.grid_bbox")
  '(token                 "Label.grid_bbox")
  '(token                 "Listbox.grid_bbox")
  '(token                 "Listbox_Tuple.grid_bbox")
  '(token                 "Listdropentry.grid_bbox")
  '(token                 "Listdropspinner.grid_bbox")
  '(token                 "Listspinner.grid_bbox")
  '(token                 "Menu.grid_bbox")
  '(token                 "Menubutton.grid_bbox")
  '(token                 "Message.grid_bbox")
  '(token                 "Message_Window.grid_bbox")
  '(token                 "Misc.grid_bbox")
  '(token                 "Multicombobox.grid_bbox")
  '(token                 "Multicombobox_X.grid_bbox")
  '(token                 "Notebook.grid_bbox")
  '(token                 "Num_Spinner.grid_bbox")
  '(token                 "OptionMenu.grid_bbox")
  '(token                 "Progress_Gauge.grid_bbox")
  '(token                 "Progress_Gauge_T.grid_bbox")
  '(token                 "Radiobutton.grid_bbox")
  '(token                 "Scale.grid_bbox")
  '(token                 "Scrollbar.grid_bbox")
  '(token                 "Scrolled_Listbox.grid_bbox")
  '(token                 "Scrolled_Text.grid_bbox")
  '(token                 "Slide_Show.grid_bbox")
  '(token                 "Statuslabel.grid_bbox")
  '(token                 "Statuslabel.Label.grid_bbox")
  '(token                 "Statustext.grid_bbox")
  '(token                 "Statustext.Text.grid_bbox")
  '(token                 "Studbutton.grid_bbox")
  '(token                 "Tabbed_Notebook.grid_bbox")
  '(token                 "Text.grid_bbox")
  '(token                 "Tk.grid_bbox")
  '(token                 "Toplevel.grid_bbox")
  '(token                 "Tributton.grid_bbox")
  '(token                 "Up_Down_Button.grid_bbox")
  '(token                 "V_Panedwindow.grid_bbox")
  '(token                 "V_Panedwindow.H_Separator.grid_bbox")
  '(token                 "V_Scrollable.grid_bbox")
  '(token                 "V_Separator.grid_bbox")
  '(token                 "V_Strut.grid_bbox")
  '(token                 "Widget.grid_bbox")
  '(token                 "_C_Frame.grid_bbox")
  '(token                 "_Combobox.Scrolled_Listbox.grid_bbox")
  '(token                 "_Panedwindow.grid_bbox")
  '(token                 "_Scrollable.grid_bbox")
  '(token                 "_Separator.grid_bbox")
  '(token                 "_Spinnerentry.grid_bbox")
  '(token                 "_Statusframe.grid_bbox")
  '(replacement           "grid_bbox («Misc.grid_bbox:column», «Misc.grid_bbox:row»)")
;;; grid_bbox(column,row)
)

(lse-define-fill-in "Misc.grid_columnconfigure:index" 
  '(description           "Argument 1 of Misc.grid_columnconfigure")
  '(leading               ",")
;;; Misc.grid_columnconfigure:index
)

(lse-define-fill-in "Misc.grid_columnconfigure:cnf" 
  '(description           "Argument 2 of Misc.grid_columnconfigure (default = {})")
  '(leading               ",")
;;; Misc.grid_columnconfigure:cnf
)

(lse-define-fill-in "grid_columnconfigure(index,cnf,kw)" 
  '(token)
  '(token                 "Balloon.grid_columnconfigure")
  '(token                 "BaseWidget.grid_columnconfigure")
  '(token                 "Button.grid_columnconfigure")
  '(token                 "Buttonbox.grid_columnconfigure")
  '(token                 "C_Entry.grid_columnconfigure")
  '(token                 "C_Frame.grid_columnconfigure")
  '(token                 "C_Listbox.grid_columnconfigure")
  '(token                 "C_Menu.grid_columnconfigure")
  '(token                 "C_Text.grid_columnconfigure")
  '(token                 "Canvas.grid_columnconfigure")
  '(token                 "Checkbutton.grid_columnconfigure")
  '(token                 "Combo_Tuple.grid_columnconfigure")
  '(token                 "Combo_Tuple_X.grid_columnconfigure")
  '(token                 "Combobox.grid_columnconfigure")
  '(token                 "Entry.grid_columnconfigure")
  '(token                 "Entrybox.grid_columnconfigure")
  '(token                 "Filename_Entry.grid_columnconfigure")
  '(token                 "Frame.grid_columnconfigure")
  '(token                 "Grid.grid_columnconfigure")
  '(token                 "H_Panedwindow.grid_columnconfigure")
  '(token                 "H_Panedwindow.V_Separator.grid_columnconfigure")
  '(token                 "H_Scrollable.grid_columnconfigure")
  '(token                 "H_Separator.grid_columnconfigure")
  '(token                 "H_Strut.grid_columnconfigure")
  '(token                 "Label.grid_columnconfigure")
  '(token                 "Listbox.grid_columnconfigure")
  '(token                 "Listbox_Tuple.grid_columnconfigure")
  '(token                 "Listdropentry.grid_columnconfigure")
  '(token                 "Listdropspinner.grid_columnconfigure")
  '(token                 "Listspinner.grid_columnconfigure")
  '(token                 "Menu.grid_columnconfigure")
  '(token                 "Menubutton.grid_columnconfigure")
  '(token                 "Message.grid_columnconfigure")
  '(token                 "Message_Window.grid_columnconfigure")
  '(token                 "Misc.grid_columnconfigure")
  '(token                 "Multicombobox.grid_columnconfigure")
  '(token                 "Multicombobox_X.grid_columnconfigure")
  '(token                 "Notebook.grid_columnconfigure")
  '(token                 "Num_Spinner.grid_columnconfigure")
  '(token                 "OptionMenu.grid_columnconfigure")
  '(token                 "Progress_Gauge.grid_columnconfigure")
  '(token                 "Progress_Gauge_T.grid_columnconfigure")
  '(token                 "Radiobutton.grid_columnconfigure")
  '(token                 "Scale.grid_columnconfigure")
  '(token                 "Scrollbar.grid_columnconfigure")
  '(token                 "Scrolled_Listbox.grid_columnconfigure")
  '(token                 "Scrolled_Text.grid_columnconfigure")
  '(token                 "Slide_Show.grid_columnconfigure")
  '(token                 "Statuslabel.grid_columnconfigure")
  '(token                 "Statuslabel.Label.grid_columnconfigure")
  '(token                 "Statustext.grid_columnconfigure")
  '(token                 "Statustext.Text.grid_columnconfigure")
  '(token                 "Studbutton.grid_columnconfigure")
  '(token                 "Tabbed_Notebook.grid_columnconfigure")
  '(token                 "Text.grid_columnconfigure")
  '(token                 "Tk.grid_columnconfigure")
  '(token                 "Toplevel.grid_columnconfigure")
  '(token                 "Tributton.grid_columnconfigure")
  '(token                 "Up_Down_Button.grid_columnconfigure")
  '(token                 "V_Panedwindow.grid_columnconfigure")
  '(token                 "V_Panedwindow.H_Separator.grid_columnconfigure")
  '(token                 "V_Scrollable.grid_columnconfigure")
  '(token                 "V_Separator.grid_columnconfigure")
  '(token                 "V_Strut.grid_columnconfigure")
  '(token                 "Widget.grid_columnconfigure")
  '(token                 "_C_Frame.grid_columnconfigure")
  '(token                 "_Combobox.Scrolled_Listbox.grid_columnconfigure")
  '(token                 "_Panedwindow.grid_columnconfigure")
  '(token                 "_Scrollable.grid_columnconfigure")
  '(token                 "_Separator.grid_columnconfigure")
  '(token                 "_Spinnerentry.grid_columnconfigure")
  '(token                 "_Statusframe.grid_columnconfigure")
  '(replacement           "grid_columnconfigure («Misc.grid_columnconfigure:index», ««Misc.grid_columnconfigure:cnf»», ««py-named-arg»»···)")
;;; grid_columnconfigure(index,cnf,kw)
)

(lse-define-fill-in "Grid.grid_configure:cnf" 
  '(description           "Argument 1 of Grid.grid_configure (default = {})")
  '(leading               ",")
;;; Grid.grid_configure:cnf
)

(lse-define-fill-in "grid_configure(cnf,kw)" 
  '(token)
  '(token                 "Button.grid_configure")
  '(token                 "Buttonbox.grid_configure")
  '(token                 "C_Entry.grid_configure")
  '(token                 "C_Frame.grid_configure")
  '(token                 "C_Listbox.grid_configure")
  '(token                 "C_Menu.grid_configure")
  '(token                 "C_Text.grid_configure")
  '(token                 "Canvas.grid_configure")
  '(token                 "Checkbutton.grid_configure")
  '(token                 "Combo_Tuple.grid_configure")
  '(token                 "Combo_Tuple_X.grid_configure")
  '(token                 "Combobox.grid_configure")
  '(token                 "Entry.grid_configure")
  '(token                 "Entrybox.grid_configure")
  '(token                 "Filename_Entry.grid_configure")
  '(token                 "Frame.grid_configure")
  '(token                 "Grid.grid_configure")
  '(token                 "H_Panedwindow.grid_configure")
  '(token                 "H_Panedwindow.V_Separator.grid_configure")
  '(token                 "H_Scrollable.grid_configure")
  '(token                 "H_Separator.grid_configure")
  '(token                 "H_Strut.grid_configure")
  '(token                 "Label.grid_configure")
  '(token                 "Listbox.grid_configure")
  '(token                 "Listbox_Tuple.grid_configure")
  '(token                 "Listdropentry.grid_configure")
  '(token                 "Listdropspinner.grid_configure")
  '(token                 "Listspinner.grid_configure")
  '(token                 "Menu.grid_configure")
  '(token                 "Menubutton.grid_configure")
  '(token                 "Message.grid_configure")
  '(token                 "Message_Window.grid_configure")
  '(token                 "Multicombobox.grid_configure")
  '(token                 "Multicombobox_X.grid_configure")
  '(token                 "Notebook.grid_configure")
  '(token                 "Num_Spinner.grid_configure")
  '(token                 "OptionMenu.grid_configure")
  '(token                 "Progress_Gauge.grid_configure")
  '(token                 "Radiobutton.grid_configure")
  '(token                 "Scale.grid_configure")
  '(token                 "Scrollbar.grid_configure")
  '(token                 "Scrolled_Listbox.grid_configure")
  '(token                 "Scrolled_Text.grid_configure")
  '(token                 "Slide_Show.grid_configure")
  '(token                 "Statuslabel.grid_configure")
  '(token                 "Statuslabel.Label.grid_configure")
  '(token                 "Statustext.grid_configure")
  '(token                 "Statustext.Text.grid_configure")
  '(token                 "Studbutton.grid_configure")
  '(token                 "Tabbed_Notebook.grid_configure")
  '(token                 "Text.grid_configure")
  '(token                 "Tributton.grid_configure")
  '(token                 "Up_Down_Button.grid_configure")
  '(token                 "V_Panedwindow.grid_configure")
  '(token                 "V_Panedwindow.H_Separator.grid_configure")
  '(token                 "V_Scrollable.grid_configure")
  '(token                 "V_Separator.grid_configure")
  '(token                 "V_Strut.grid_configure")
  '(token                 "Widget.grid_configure")
  '(token                 "_C_Frame.grid_configure")
  '(token                 "_Combobox.Scrolled_Listbox.grid_configure")
  '(token                 "_Panedwindow.grid_configure")
  '(token                 "_Scrollable.grid_configure")
  '(token                 "_Separator.grid_configure")
  '(token                 "_Spinnerentry.grid_configure")
  '(token                 "_Statusframe.grid_configure")
  '(replacement           "grid_configure (««Grid.grid_configure:cnf»», ««py-named-arg»»···)")
;;; grid_configure(cnf,kw)
)

(lse-define-fill-in "grid_forget()" 
  '(token)
  '(token                 "Button.grid_forget")
  '(token                 "Buttonbox.grid_forget")
  '(token                 "C_Entry.grid_forget")
  '(token                 "C_Frame.grid_forget")
  '(token                 "C_Listbox.grid_forget")
  '(token                 "C_Menu.grid_forget")
  '(token                 "C_Text.grid_forget")
  '(token                 "Canvas.grid_forget")
  '(token                 "Checkbutton.grid_forget")
  '(token                 "Combo_Tuple.grid_forget")
  '(token                 "Combo_Tuple_X.grid_forget")
  '(token                 "Combobox.grid_forget")
  '(token                 "Entry.grid_forget")
  '(token                 "Entrybox.grid_forget")
  '(token                 "Filename_Entry.grid_forget")
  '(token                 "Frame.grid_forget")
  '(token                 "Grid.grid_forget")
  '(token                 "H_Panedwindow.grid_forget")
  '(token                 "H_Panedwindow.V_Separator.grid_forget")
  '(token                 "H_Scrollable.grid_forget")
  '(token                 "H_Separator.grid_forget")
  '(token                 "H_Strut.grid_forget")
  '(token                 "Label.grid_forget")
  '(token                 "Listbox.grid_forget")
  '(token                 "Listbox_Tuple.grid_forget")
  '(token                 "Listdropentry.grid_forget")
  '(token                 "Listdropspinner.grid_forget")
  '(token                 "Listspinner.grid_forget")
  '(token                 "Menu.grid_forget")
  '(token                 "Menubutton.grid_forget")
  '(token                 "Message.grid_forget")
  '(token                 "Message_Window.grid_forget")
  '(token                 "Multicombobox.grid_forget")
  '(token                 "Multicombobox_X.grid_forget")
  '(token                 "Notebook.grid_forget")
  '(token                 "Num_Spinner.grid_forget")
  '(token                 "OptionMenu.grid_forget")
  '(token                 "Progress_Gauge.grid_forget")
  '(token                 "Radiobutton.grid_forget")
  '(token                 "Scale.grid_forget")
  '(token                 "Scrollbar.grid_forget")
  '(token                 "Scrolled_Listbox.grid_forget")
  '(token                 "Scrolled_Text.grid_forget")
  '(token                 "Slide_Show.grid_forget")
  '(token                 "Statuslabel.grid_forget")
  '(token                 "Statuslabel.Label.grid_forget")
  '(token                 "Statustext.grid_forget")
  '(token                 "Statustext.Text.grid_forget")
  '(token                 "Studbutton.grid_forget")
  '(token                 "Tabbed_Notebook.grid_forget")
  '(token                 "Text.grid_forget")
  '(token                 "Tributton.grid_forget")
  '(token                 "Up_Down_Button.grid_forget")
  '(token                 "V_Panedwindow.grid_forget")
  '(token                 "V_Panedwindow.H_Separator.grid_forget")
  '(token                 "V_Scrollable.grid_forget")
  '(token                 "V_Separator.grid_forget")
  '(token                 "V_Strut.grid_forget")
  '(token                 "Widget.grid_forget")
  '(token                 "_C_Frame.grid_forget")
  '(token                 "_Combobox.Scrolled_Listbox.grid_forget")
  '(token                 "_Panedwindow.grid_forget")
  '(token                 "_Scrollable.grid_forget")
  '(token                 "_Separator.grid_forget")
  '(token                 "_Spinnerentry.grid_forget")
  '(token                 "_Statusframe.grid_forget")
  '(replacement           "grid_forget ()")
;;; grid_forget()
)

(lse-define-fill-in "grid_info()" 
  '(token)
  '(token                 "Button.grid_info")
  '(token                 "Buttonbox.grid_info")
  '(token                 "C_Entry.grid_info")
  '(token                 "C_Frame.grid_info")
  '(token                 "C_Listbox.grid_info")
  '(token                 "C_Menu.grid_info")
  '(token                 "C_Text.grid_info")
  '(token                 "Canvas.grid_info")
  '(token                 "Checkbutton.grid_info")
  '(token                 "Combo_Tuple.grid_info")
  '(token                 "Combo_Tuple_X.grid_info")
  '(token                 "Combobox.grid_info")
  '(token                 "Entry.grid_info")
  '(token                 "Entrybox.grid_info")
  '(token                 "Filename_Entry.grid_info")
  '(token                 "Frame.grid_info")
  '(token                 "Grid.grid_info")
  '(token                 "H_Panedwindow.grid_info")
  '(token                 "H_Panedwindow.V_Separator.grid_info")
  '(token                 "H_Scrollable.grid_info")
  '(token                 "H_Separator.grid_info")
  '(token                 "H_Strut.grid_info")
  '(token                 "Label.grid_info")
  '(token                 "Listbox.grid_info")
  '(token                 "Listbox_Tuple.grid_info")
  '(token                 "Listdropentry.grid_info")
  '(token                 "Listdropspinner.grid_info")
  '(token                 "Listspinner.grid_info")
  '(token                 "Menu.grid_info")
  '(token                 "Menubutton.grid_info")
  '(token                 "Message.grid_info")
  '(token                 "Message_Window.grid_info")
  '(token                 "Multicombobox.grid_info")
  '(token                 "Multicombobox_X.grid_info")
  '(token                 "Notebook.grid_info")
  '(token                 "Num_Spinner.grid_info")
  '(token                 "OptionMenu.grid_info")
  '(token                 "Progress_Gauge.grid_info")
  '(token                 "Radiobutton.grid_info")
  '(token                 "Scale.grid_info")
  '(token                 "Scrollbar.grid_info")
  '(token                 "Scrolled_Listbox.grid_info")
  '(token                 "Scrolled_Text.grid_info")
  '(token                 "Slide_Show.grid_info")
  '(token                 "Statuslabel.grid_info")
  '(token                 "Statuslabel.Label.grid_info")
  '(token                 "Statustext.grid_info")
  '(token                 "Statustext.Text.grid_info")
  '(token                 "Studbutton.grid_info")
  '(token                 "Tabbed_Notebook.grid_info")
  '(token                 "Text.grid_info")
  '(token                 "Tributton.grid_info")
  '(token                 "Up_Down_Button.grid_info")
  '(token                 "V_Panedwindow.grid_info")
  '(token                 "V_Panedwindow.H_Separator.grid_info")
  '(token                 "V_Scrollable.grid_info")
  '(token                 "V_Separator.grid_info")
  '(token                 "V_Strut.grid_info")
  '(token                 "Widget.grid_info")
  '(token                 "_C_Frame.grid_info")
  '(token                 "_Combobox.Scrolled_Listbox.grid_info")
  '(token                 "_Panedwindow.grid_info")
  '(token                 "_Scrollable.grid_info")
  '(token                 "_Separator.grid_info")
  '(token                 "_Spinnerentry.grid_info")
  '(token                 "_Statusframe.grid_info")
  '(replacement           "grid_info ()")
;;; grid_info()
)

(lse-define-fill-in "Grid.grid_location:x" 
  '(description           "Argument 1 of Grid.grid_location")
  '(leading               ",")
;;; Grid.grid_location:x
)

(lse-define-fill-in "Grid.grid_location:y" 
  '(description           "Argument 2 of Grid.grid_location")
  '(leading               ",")
;;; Grid.grid_location:y
)

(lse-define-fill-in "grid_location(x,y)" 
  '(token)
  '(token                 "Button.grid_location")
  '(token                 "Buttonbox.grid_location")
  '(token                 "C_Entry.grid_location")
  '(token                 "C_Frame.grid_location")
  '(token                 "C_Listbox.grid_location")
  '(token                 "C_Menu.grid_location")
  '(token                 "C_Text.grid_location")
  '(token                 "Canvas.grid_location")
  '(token                 "Checkbutton.grid_location")
  '(token                 "Combo_Tuple.grid_location")
  '(token                 "Combo_Tuple_X.grid_location")
  '(token                 "Combobox.grid_location")
  '(token                 "Entry.grid_location")
  '(token                 "Entrybox.grid_location")
  '(token                 "Filename_Entry.grid_location")
  '(token                 "Frame.grid_location")
  '(token                 "Grid.grid_location")
  '(token                 "H_Panedwindow.grid_location")
  '(token                 "H_Panedwindow.V_Separator.grid_location")
  '(token                 "H_Scrollable.grid_location")
  '(token                 "H_Separator.grid_location")
  '(token                 "H_Strut.grid_location")
  '(token                 "Label.grid_location")
  '(token                 "Listbox.grid_location")
  '(token                 "Listbox_Tuple.grid_location")
  '(token                 "Listdropentry.grid_location")
  '(token                 "Listdropspinner.grid_location")
  '(token                 "Listspinner.grid_location")
  '(token                 "Menu.grid_location")
  '(token                 "Menubutton.grid_location")
  '(token                 "Message.grid_location")
  '(token                 "Message_Window.grid_location")
  '(token                 "Multicombobox.grid_location")
  '(token                 "Multicombobox_X.grid_location")
  '(token                 "Notebook.grid_location")
  '(token                 "Num_Spinner.grid_location")
  '(token                 "OptionMenu.grid_location")
  '(token                 "Progress_Gauge.grid_location")
  '(token                 "Radiobutton.grid_location")
  '(token                 "Scale.grid_location")
  '(token                 "Scrollbar.grid_location")
  '(token                 "Scrolled_Listbox.grid_location")
  '(token                 "Scrolled_Text.grid_location")
  '(token                 "Slide_Show.grid_location")
  '(token                 "Statuslabel.grid_location")
  '(token                 "Statuslabel.Label.grid_location")
  '(token                 "Statustext.grid_location")
  '(token                 "Statustext.Text.grid_location")
  '(token                 "Studbutton.grid_location")
  '(token                 "Tabbed_Notebook.grid_location")
  '(token                 "Text.grid_location")
  '(token                 "Tributton.grid_location")
  '(token                 "Up_Down_Button.grid_location")
  '(token                 "V_Panedwindow.grid_location")
  '(token                 "V_Panedwindow.H_Separator.grid_location")
  '(token                 "V_Scrollable.grid_location")
  '(token                 "V_Separator.grid_location")
  '(token                 "V_Strut.grid_location")
  '(token                 "Widget.grid_location")
  '(token                 "_C_Frame.grid_location")
  '(token                 "_Combobox.Scrolled_Listbox.grid_location")
  '(token                 "_Panedwindow.grid_location")
  '(token                 "_Scrollable.grid_location")
  '(token                 "_Separator.grid_location")
  '(token                 "_Spinnerentry.grid_location")
  '(token                 "_Statusframe.grid_location")
  '(replacement           "grid_location («Grid.grid_location:x», «Grid.grid_location:y»)")
;;; grid_location(x,y)
)

(lse-define-fill-in "Misc.grid_propagate:flag" 
  '(description           "Argument 1 of Misc.grid_propagate (default = ['_noarg_'])")
  '(leading               ",")
;;; Misc.grid_propagate:flag
)

(lse-define-fill-in "grid_propagate(flag)" 
  '(token)
  '(token                 "Balloon.grid_propagate")
  '(token                 "BaseWidget.grid_propagate")
  '(token                 "Button.grid_propagate")
  '(token                 "Buttonbox.grid_propagate")
  '(token                 "C_Entry.grid_propagate")
  '(token                 "C_Frame.grid_propagate")
  '(token                 "C_Listbox.grid_propagate")
  '(token                 "C_Menu.grid_propagate")
  '(token                 "C_Text.grid_propagate")
  '(token                 "Canvas.grid_propagate")
  '(token                 "Checkbutton.grid_propagate")
  '(token                 "Combo_Tuple.grid_propagate")
  '(token                 "Combo_Tuple_X.grid_propagate")
  '(token                 "Combobox.grid_propagate")
  '(token                 "Entry.grid_propagate")
  '(token                 "Entrybox.grid_propagate")
  '(token                 "Filename_Entry.grid_propagate")
  '(token                 "Frame.grid_propagate")
  '(token                 "Grid.grid_propagate")
  '(token                 "H_Panedwindow.grid_propagate")
  '(token                 "H_Panedwindow.V_Separator.grid_propagate")
  '(token                 "H_Scrollable.grid_propagate")
  '(token                 "H_Separator.grid_propagate")
  '(token                 "H_Strut.grid_propagate")
  '(token                 "Label.grid_propagate")
  '(token                 "Listbox.grid_propagate")
  '(token                 "Listbox_Tuple.grid_propagate")
  '(token                 "Listdropentry.grid_propagate")
  '(token                 "Listdropspinner.grid_propagate")
  '(token                 "Listspinner.grid_propagate")
  '(token                 "Menu.grid_propagate")
  '(token                 "Menubutton.grid_propagate")
  '(token                 "Message.grid_propagate")
  '(token                 "Message_Window.grid_propagate")
  '(token                 "Misc.grid_propagate")
  '(token                 "Multicombobox.grid_propagate")
  '(token                 "Multicombobox_X.grid_propagate")
  '(token                 "Notebook.grid_propagate")
  '(token                 "Num_Spinner.grid_propagate")
  '(token                 "OptionMenu.grid_propagate")
  '(token                 "Progress_Gauge.grid_propagate")
  '(token                 "Progress_Gauge_T.grid_propagate")
  '(token                 "Radiobutton.grid_propagate")
  '(token                 "Scale.grid_propagate")
  '(token                 "Scrollbar.grid_propagate")
  '(token                 "Scrolled_Listbox.grid_propagate")
  '(token                 "Scrolled_Text.grid_propagate")
  '(token                 "Slide_Show.grid_propagate")
  '(token                 "Statuslabel.grid_propagate")
  '(token                 "Statuslabel.Label.grid_propagate")
  '(token                 "Statustext.grid_propagate")
  '(token                 "Statustext.Text.grid_propagate")
  '(token                 "Studbutton.grid_propagate")
  '(token                 "Tabbed_Notebook.grid_propagate")
  '(token                 "Text.grid_propagate")
  '(token                 "Tk.grid_propagate")
  '(token                 "Toplevel.grid_propagate")
  '(token                 "Tributton.grid_propagate")
  '(token                 "Up_Down_Button.grid_propagate")
  '(token                 "V_Panedwindow.grid_propagate")
  '(token                 "V_Panedwindow.H_Separator.grid_propagate")
  '(token                 "V_Scrollable.grid_propagate")
  '(token                 "V_Separator.grid_propagate")
  '(token                 "V_Strut.grid_propagate")
  '(token                 "Widget.grid_propagate")
  '(token                 "_C_Frame.grid_propagate")
  '(token                 "_Combobox.Scrolled_Listbox.grid_propagate")
  '(token                 "_Panedwindow.grid_propagate")
  '(token                 "_Scrollable.grid_propagate")
  '(token                 "_Separator.grid_propagate")
  '(token                 "_Spinnerentry.grid_propagate")
  '(token                 "_Statusframe.grid_propagate")
  '(replacement           "grid_propagate (««Misc.grid_propagate:flag»»)")
;;; grid_propagate(flag)
)

(lse-define-fill-in "Misc.grid_rowconfigure:index" 
  '(description           "Argument 1 of Misc.grid_rowconfigure")
  '(leading               ",")
;;; Misc.grid_rowconfigure:index
)

(lse-define-fill-in "Misc.grid_rowconfigure:cnf" 
  '(description           "Argument 2 of Misc.grid_rowconfigure (default = {})")
  '(leading               ",")
;;; Misc.grid_rowconfigure:cnf
)

(lse-define-fill-in "grid_rowconfigure(index,cnf,kw)" 
  '(token)
  '(token                 "Balloon.grid_rowconfigure")
  '(token                 "BaseWidget.grid_rowconfigure")
  '(token                 "Button.grid_rowconfigure")
  '(token                 "Buttonbox.grid_rowconfigure")
  '(token                 "C_Entry.grid_rowconfigure")
  '(token                 "C_Frame.grid_rowconfigure")
  '(token                 "C_Listbox.grid_rowconfigure")
  '(token                 "C_Menu.grid_rowconfigure")
  '(token                 "C_Text.grid_rowconfigure")
  '(token                 "Canvas.grid_rowconfigure")
  '(token                 "Checkbutton.grid_rowconfigure")
  '(token                 "Combo_Tuple.grid_rowconfigure")
  '(token                 "Combo_Tuple_X.grid_rowconfigure")
  '(token                 "Combobox.grid_rowconfigure")
  '(token                 "Entry.grid_rowconfigure")
  '(token                 "Entrybox.grid_rowconfigure")
  '(token                 "Filename_Entry.grid_rowconfigure")
  '(token                 "Frame.grid_rowconfigure")
  '(token                 "Grid.grid_rowconfigure")
  '(token                 "H_Panedwindow.grid_rowconfigure")
  '(token                 "H_Panedwindow.V_Separator.grid_rowconfigure")
  '(token                 "H_Scrollable.grid_rowconfigure")
  '(token                 "H_Separator.grid_rowconfigure")
  '(token                 "H_Strut.grid_rowconfigure")
  '(token                 "Label.grid_rowconfigure")
  '(token                 "Listbox.grid_rowconfigure")
  '(token                 "Listbox_Tuple.grid_rowconfigure")
  '(token                 "Listdropentry.grid_rowconfigure")
  '(token                 "Listdropspinner.grid_rowconfigure")
  '(token                 "Listspinner.grid_rowconfigure")
  '(token                 "Menu.grid_rowconfigure")
  '(token                 "Menubutton.grid_rowconfigure")
  '(token                 "Message.grid_rowconfigure")
  '(token                 "Message_Window.grid_rowconfigure")
  '(token                 "Misc.grid_rowconfigure")
  '(token                 "Multicombobox.grid_rowconfigure")
  '(token                 "Multicombobox_X.grid_rowconfigure")
  '(token                 "Notebook.grid_rowconfigure")
  '(token                 "Num_Spinner.grid_rowconfigure")
  '(token                 "OptionMenu.grid_rowconfigure")
  '(token                 "Progress_Gauge.grid_rowconfigure")
  '(token                 "Progress_Gauge_T.grid_rowconfigure")
  '(token                 "Radiobutton.grid_rowconfigure")
  '(token                 "Scale.grid_rowconfigure")
  '(token                 "Scrollbar.grid_rowconfigure")
  '(token                 "Scrolled_Listbox.grid_rowconfigure")
  '(token                 "Scrolled_Text.grid_rowconfigure")
  '(token                 "Slide_Show.grid_rowconfigure")
  '(token                 "Statuslabel.grid_rowconfigure")
  '(token                 "Statuslabel.Label.grid_rowconfigure")
  '(token                 "Statustext.grid_rowconfigure")
  '(token                 "Statustext.Text.grid_rowconfigure")
  '(token                 "Studbutton.grid_rowconfigure")
  '(token                 "Tabbed_Notebook.grid_rowconfigure")
  '(token                 "Text.grid_rowconfigure")
  '(token                 "Tk.grid_rowconfigure")
  '(token                 "Toplevel.grid_rowconfigure")
  '(token                 "Tributton.grid_rowconfigure")
  '(token                 "Up_Down_Button.grid_rowconfigure")
  '(token                 "V_Panedwindow.grid_rowconfigure")
  '(token                 "V_Panedwindow.H_Separator.grid_rowconfigure")
  '(token                 "V_Scrollable.grid_rowconfigure")
  '(token                 "V_Separator.grid_rowconfigure")
  '(token                 "V_Strut.grid_rowconfigure")
  '(token                 "Widget.grid_rowconfigure")
  '(token                 "_C_Frame.grid_rowconfigure")
  '(token                 "_Combobox.Scrolled_Listbox.grid_rowconfigure")
  '(token                 "_Panedwindow.grid_rowconfigure")
  '(token                 "_Scrollable.grid_rowconfigure")
  '(token                 "_Separator.grid_rowconfigure")
  '(token                 "_Spinnerentry.grid_rowconfigure")
  '(token                 "_Statusframe.grid_rowconfigure")
  '(replacement           "grid_rowconfigure («Misc.grid_rowconfigure:index», ««Misc.grid_rowconfigure:cnf»», ««py-named-arg»»···)")
;;; grid_rowconfigure(index,cnf,kw)
)

(lse-define-fill-in "grid_size()" 
  '(token)
  '(token                 "Balloon.grid_size")
  '(token                 "BaseWidget.grid_size")
  '(token                 "Button.grid_size")
  '(token                 "Buttonbox.grid_size")
  '(token                 "C_Entry.grid_size")
  '(token                 "C_Frame.grid_size")
  '(token                 "C_Listbox.grid_size")
  '(token                 "C_Menu.grid_size")
  '(token                 "C_Text.grid_size")
  '(token                 "Canvas.grid_size")
  '(token                 "Checkbutton.grid_size")
  '(token                 "Combo_Tuple.grid_size")
  '(token                 "Combo_Tuple_X.grid_size")
  '(token                 "Combobox.grid_size")
  '(token                 "Entry.grid_size")
  '(token                 "Entrybox.grid_size")
  '(token                 "Filename_Entry.grid_size")
  '(token                 "Frame.grid_size")
  '(token                 "Grid.grid_size")
  '(token                 "H_Panedwindow.grid_size")
  '(token                 "H_Panedwindow.V_Separator.grid_size")
  '(token                 "H_Scrollable.grid_size")
  '(token                 "H_Separator.grid_size")
  '(token                 "H_Strut.grid_size")
  '(token                 "Label.grid_size")
  '(token                 "Listbox.grid_size")
  '(token                 "Listbox_Tuple.grid_size")
  '(token                 "Listdropentry.grid_size")
  '(token                 "Listdropspinner.grid_size")
  '(token                 "Listspinner.grid_size")
  '(token                 "Menu.grid_size")
  '(token                 "Menubutton.grid_size")
  '(token                 "Message.grid_size")
  '(token                 "Message_Window.grid_size")
  '(token                 "Misc.grid_size")
  '(token                 "Multicombobox.grid_size")
  '(token                 "Multicombobox_X.grid_size")
  '(token                 "Notebook.grid_size")
  '(token                 "Num_Spinner.grid_size")
  '(token                 "OptionMenu.grid_size")
  '(token                 "Progress_Gauge.grid_size")
  '(token                 "Progress_Gauge_T.grid_size")
  '(token                 "Radiobutton.grid_size")
  '(token                 "Scale.grid_size")
  '(token                 "Scrollbar.grid_size")
  '(token                 "Scrolled_Listbox.grid_size")
  '(token                 "Scrolled_Text.grid_size")
  '(token                 "Slide_Show.grid_size")
  '(token                 "Statuslabel.grid_size")
  '(token                 "Statuslabel.Label.grid_size")
  '(token                 "Statustext.grid_size")
  '(token                 "Statustext.Text.grid_size")
  '(token                 "Studbutton.grid_size")
  '(token                 "Tabbed_Notebook.grid_size")
  '(token                 "Text.grid_size")
  '(token                 "Tk.grid_size")
  '(token                 "Toplevel.grid_size")
  '(token                 "Tributton.grid_size")
  '(token                 "Up_Down_Button.grid_size")
  '(token                 "V_Panedwindow.grid_size")
  '(token                 "V_Panedwindow.H_Separator.grid_size")
  '(token                 "V_Scrollable.grid_size")
  '(token                 "V_Separator.grid_size")
  '(token                 "V_Strut.grid_size")
  '(token                 "Widget.grid_size")
  '(token                 "_C_Frame.grid_size")
  '(token                 "_Combobox.Scrolled_Listbox.grid_size")
  '(token                 "_Panedwindow.grid_size")
  '(token                 "_Scrollable.grid_size")
  '(token                 "_Separator.grid_size")
  '(token                 "_Spinnerentry.grid_size")
  '(token                 "_Statusframe.grid_size")
  '(replacement           "grid_size ()")
;;; grid_size()
)

(lse-define-fill-in "Misc.grid_slaves:row" 
  '(description           "Argument 1 of Misc.grid_slaves (default = None)")
  '(leading               ",")
;;; Misc.grid_slaves:row
)

(lse-define-fill-in "Misc.grid_slaves:column" 
  '(description           "Argument 2 of Misc.grid_slaves (default = None)")
  '(leading               ",")
;;; Misc.grid_slaves:column
)

(lse-define-fill-in "grid_slaves(row,column)" 
  '(token)
  '(token                 "Balloon.grid_slaves")
  '(token                 "BaseWidget.grid_slaves")
  '(token                 "Button.grid_slaves")
  '(token                 "Buttonbox.grid_slaves")
  '(token                 "C_Entry.grid_slaves")
  '(token                 "C_Frame.grid_slaves")
  '(token                 "C_Listbox.grid_slaves")
  '(token                 "C_Menu.grid_slaves")
  '(token                 "C_Text.grid_slaves")
  '(token                 "Canvas.grid_slaves")
  '(token                 "Checkbutton.grid_slaves")
  '(token                 "Combo_Tuple.grid_slaves")
  '(token                 "Combo_Tuple_X.grid_slaves")
  '(token                 "Combobox.grid_slaves")
  '(token                 "Entry.grid_slaves")
  '(token                 "Entrybox.grid_slaves")
  '(token                 "Filename_Entry.grid_slaves")
  '(token                 "Frame.grid_slaves")
  '(token                 "Grid.grid_slaves")
  '(token                 "H_Panedwindow.grid_slaves")
  '(token                 "H_Panedwindow.V_Separator.grid_slaves")
  '(token                 "H_Scrollable.grid_slaves")
  '(token                 "H_Separator.grid_slaves")
  '(token                 "H_Strut.grid_slaves")
  '(token                 "Label.grid_slaves")
  '(token                 "Listbox.grid_slaves")
  '(token                 "Listbox_Tuple.grid_slaves")
  '(token                 "Listdropentry.grid_slaves")
  '(token                 "Listdropspinner.grid_slaves")
  '(token                 "Listspinner.grid_slaves")
  '(token                 "Menu.grid_slaves")
  '(token                 "Menubutton.grid_slaves")
  '(token                 "Message.grid_slaves")
  '(token                 "Message_Window.grid_slaves")
  '(token                 "Misc.grid_slaves")
  '(token                 "Multicombobox.grid_slaves")
  '(token                 "Multicombobox_X.grid_slaves")
  '(token                 "Notebook.grid_slaves")
  '(token                 "Num_Spinner.grid_slaves")
  '(token                 "OptionMenu.grid_slaves")
  '(token                 "Progress_Gauge.grid_slaves")
  '(token                 "Progress_Gauge_T.grid_slaves")
  '(token                 "Radiobutton.grid_slaves")
  '(token                 "Scale.grid_slaves")
  '(token                 "Scrollbar.grid_slaves")
  '(token                 "Scrolled_Listbox.grid_slaves")
  '(token                 "Scrolled_Text.grid_slaves")
  '(token                 "Slide_Show.grid_slaves")
  '(token                 "Statuslabel.grid_slaves")
  '(token                 "Statuslabel.Label.grid_slaves")
  '(token                 "Statustext.grid_slaves")
  '(token                 "Statustext.Text.grid_slaves")
  '(token                 "Studbutton.grid_slaves")
  '(token                 "Tabbed_Notebook.grid_slaves")
  '(token                 "Text.grid_slaves")
  '(token                 "Tk.grid_slaves")
  '(token                 "Toplevel.grid_slaves")
  '(token                 "Tributton.grid_slaves")
  '(token                 "Up_Down_Button.grid_slaves")
  '(token                 "V_Panedwindow.grid_slaves")
  '(token                 "V_Panedwindow.H_Separator.grid_slaves")
  '(token                 "V_Scrollable.grid_slaves")
  '(token                 "V_Separator.grid_slaves")
  '(token                 "V_Strut.grid_slaves")
  '(token                 "Widget.grid_slaves")
  '(token                 "_C_Frame.grid_slaves")
  '(token                 "_Combobox.Scrolled_Listbox.grid_slaves")
  '(token                 "_Panedwindow.grid_slaves")
  '(token                 "_Scrollable.grid_slaves")
  '(token                 "_Separator.grid_slaves")
  '(token                 "_Spinnerentry.grid_slaves")
  '(token                 "_Statusframe.grid_slaves")
  '(replacement           "grid_slaves (««Misc.grid_slaves:row»», ««Misc.grid_slaves:column»»)")
;;; grid_slaves(row,column)
)

(lse-define-fill-in "Wm.group:pathName" 
  '(description           "Argument 1 of Wm.group (default = None)")
  '(leading               ",")
;;; Wm.group:pathName
)

(lse-define-fill-in "group(pathName)" 
  '(token)
  '(token                 "Balloon.group")
  '(token                 "Progress_Gauge_T.group")
  '(token                 "Tk.group")
  '(token                 "Toplevel.group")
  '(token                 "Wm.group")
  '(replacement           "group (««Wm.group:pathName»»)")
;;; group(pathName)
)

(lse-define-fill-in "CanvasItem.has_key:key" 
  '(description           "Argument 1 of CanvasItem.has_key")
  '(leading               ",")
;;; CanvasItem.has_key:key
)

(lse-define-fill-in "has_key(key)" 
  '(token)
  '(token                 "Arc.has_key")
  '(token                 "Bitmap.has_key")
  '(token                 "CanvasItem.has_key")
  '(token                 "CanvasText.has_key")
  '(token                 "ImageItem.has_key")
  '(token                 "Line.has_key")
  '(token                 "Oval.has_key")
  '(token                 "Polygon.has_key")
  '(token                 "Rectangle.has_key")
  '(token                 "Window.has_key")
  '(replacement           "has_key («CanvasItem.has_key:key»)")
;;; has_key(key)
)

(lse-define-fill-in "height()" 
  '(token)
  '(token                 "BitmapImage.height")
  '(token                 "Image.height")
  '(token                 "PhotoImage.height")
  '(replacement           "height ()")
;;; height()
)

(lse-define-fill-in "C_Menu.help:event" 
  '(description           "Argument 1 of C_Menu.help (default = None)")
  '(leading               ",")
;;; C_Menu.help:event
)

(lse-define-fill-in "help(event)" 
  '(token)
  '(token                 "C_Menu.help")
  '(replacement           "help (««C_Menu.help:event»»)")
;;; help(event)
)

(lse-define-fill-in "C_Entry.highlight_focus:event" 
  '(description           "Argument 1 of C_Entry.highlight_focus (default = None)")
  '(leading               ",")
;;; C_Entry.highlight_focus:event
)

(lse-define-fill-in "highlight_focus(event)" 
  '(token)
  '(token                 "C_Entry.highlight_focus")
  '(token                 "Combobox.highlight_focus")
  '(token                 "Filename_Entry.highlight_focus")
  '(token                 "Listdropentry.highlight_focus")
  '(token                 "Listdropspinner.highlight_focus")
  '(token                 "Listspinner.highlight_focus")
  '(token                 "Num_Spinner.highlight_focus")
  '(token                 "_Spinnerentry.highlight_focus")
  '(replacement           "highlight_focus (««C_Entry.highlight_focus:event»»)")
;;; highlight_focus(event)
)

(lse-define-fill-in "_Scrollable.hull_pack:args" 
  '(description           "Argument 1 of _Scrollable.hull_pack")
  '(leading               ",")
  '(separator             ", ")
;;; _Scrollable.hull_pack:args
)

(lse-define-fill-in "hull_pack(args,kw)" 
  '(token)
  '(token                 "H_Scrollable.hull_pack")
  '(token                 "V_Scrollable.hull_pack")
  '(token                 "_Scrollable.hull_pack")
  '(replacement           "hull_pack (««_Scrollable.hull_pack:args»»···, ««py-named-arg»»···)")
;;; hull_pack(args,kw)
)

(lse-define-fill-in "Wm.iconbitmap:bitmap" 
  '(description           "Argument 1 of Wm.iconbitmap (default = None)")
  '(leading               ",")
;;; Wm.iconbitmap:bitmap
)

(lse-define-fill-in "iconbitmap(bitmap)" 
  '(token)
  '(token                 "Balloon.iconbitmap")
  '(token                 "Progress_Gauge_T.iconbitmap")
  '(token                 "Tk.iconbitmap")
  '(token                 "Toplevel.iconbitmap")
  '(token                 "Wm.iconbitmap")
  '(replacement           "iconbitmap (««Wm.iconbitmap:bitmap»»)")
;;; iconbitmap(bitmap)
)

(lse-define-fill-in "iconify()" 
  '(token)
  '(token                 "Balloon.iconify")
  '(token                 "Progress_Gauge_T.iconify")
  '(token                 "Tk.iconify")
  '(token                 "Toplevel.iconify")
  '(token                 "Wm.iconify")
  '(replacement           "iconify ()")
;;; iconify()
)

(lse-define-fill-in "Wm.iconmask:bitmap" 
  '(description           "Argument 1 of Wm.iconmask (default = None)")
  '(leading               ",")
;;; Wm.iconmask:bitmap
)

(lse-define-fill-in "iconmask(bitmap)" 
  '(token)
  '(token                 "Balloon.iconmask")
  '(token                 "Progress_Gauge_T.iconmask")
  '(token                 "Tk.iconmask")
  '(token                 "Toplevel.iconmask")
  '(token                 "Wm.iconmask")
  '(replacement           "iconmask (««Wm.iconmask:bitmap»»)")
;;; iconmask(bitmap)
)

(lse-define-fill-in "Wm.iconname:newName" 
  '(description           "Argument 1 of Wm.iconname (default = None)")
  '(leading               ",")
;;; Wm.iconname:newName
)

(lse-define-fill-in "iconname(newName)" 
  '(token)
  '(token                 "Balloon.iconname")
  '(token                 "Progress_Gauge_T.iconname")
  '(token                 "Tk.iconname")
  '(token                 "Toplevel.iconname")
  '(token                 "Wm.iconname")
  '(replacement           "iconname (««Wm.iconname:newName»»)")
;;; iconname(newName)
)

(lse-define-fill-in "Wm.iconposition:x" 
  '(description           "Argument 1 of Wm.iconposition (default = None)")
  '(leading               ",")
;;; Wm.iconposition:x
)

(lse-define-fill-in "Wm.iconposition:y" 
  '(description           "Argument 2 of Wm.iconposition (default = None)")
  '(leading               ",")
;;; Wm.iconposition:y
)

(lse-define-fill-in "iconposition(x,y)" 
  '(token)
  '(token                 "Balloon.iconposition")
  '(token                 "Progress_Gauge_T.iconposition")
  '(token                 "Tk.iconposition")
  '(token                 "Toplevel.iconposition")
  '(token                 "Wm.iconposition")
  '(replacement           "iconposition (««Wm.iconposition:x»», ««Wm.iconposition:y»»)")
;;; iconposition(x,y)
)

(lse-define-fill-in "Wm.iconwindow:pathName" 
  '(description           "Argument 1 of Wm.iconwindow (default = None)")
  '(leading               ",")
;;; Wm.iconwindow:pathName
)

(lse-define-fill-in "iconwindow(pathName)" 
  '(token)
  '(token                 "Balloon.iconwindow")
  '(token                 "Progress_Gauge_T.iconwindow")
  '(token                 "Tk.iconwindow")
  '(token                 "Toplevel.iconwindow")
  '(token                 "Wm.iconwindow")
  '(replacement           "iconwindow (««Wm.iconwindow:pathName»»)")
;;; iconwindow(pathName)
)

(lse-define-fill-in "Canvas.icursor:args" 
  '(description           "Argument 1 of Canvas.icursor")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.icursor:args
)

(lse-define-fill-in "icursor(args)" 
  '(token)
  '(token                 "Canvas.icursor")
  '(replacement           "icursor (««Canvas.icursor:args»»···)")
;;; icursor(args)
)

(lse-define-fill-in "CanvasItem.icursor:index" 
  '(description           "Argument 1 of CanvasItem.icursor")
  '(leading               ",")
;;; CanvasItem.icursor:index
)

(lse-define-fill-in "icursor(index)" 
  '(token)
  '(token                 "Arc.icursor")
  '(token                 "Bitmap.icursor")
  '(token                 "CanvasItem.icursor")
  '(token                 "CanvasText.icursor")
  '(token                 "Entry.icursor")
  '(token                 "Group.icursor")
  '(token                 "ImageItem.icursor")
  '(token                 "Line.icursor")
  '(token                 "Oval.icursor")
  '(token                 "Polygon.icursor")
  '(token                 "Rectangle.icursor")
  '(token                 "Window.icursor")
  '(replacement           "icursor («CanvasItem.icursor:index»)")
;;; icursor(index)
)

(lse-define-fill-in "Scrollbar.identify:x" 
  '(description           "Argument 1 of Scrollbar.identify")
  '(leading               ",")
;;; Scrollbar.identify:x
)

(lse-define-fill-in "Scrollbar.identify:y" 
  '(description           "Argument 2 of Scrollbar.identify")
  '(leading               ",")
;;; Scrollbar.identify:y
)

(lse-define-fill-in "identify(x,y)" 
  '(token)
  '(token                 "Scrollbar.identify")
  '(replacement           "identify («Scrollbar.identify:x», «Scrollbar.identify:y»)")
;;; identify(x,y)
)

(lse-define-fill-in "C_Text.ignore:event" 
  '(description           "Argument 1 of C_Text.ignore (default = None)")
  '(leading               ",")
;;; C_Text.ignore:event
)

(lse-define-fill-in "ignore(event)" 
  '(token)
  '(token                 "C_Text.ignore")
  '(token                 "Message_Window.ignore")
  '(token                 "Scrolled_Text.ignore")
  '(replacement           "ignore (««C_Text.ignore:event»»)")
;;; ignore(event)
)

(lse-define-fill-in "CTK.ignore_event:event" 
  '(description           "Argument 1 of CTK.ignore_event (default = None)")
  '(leading               ",")
;;; CTK.ignore_event:event
)

(lse-define-fill-in "CTK.ignore_event" 
  '(token)
  '(replacement           "CTK.ignore_event (««CTK.ignore_event:event»»)")
;;; CTK.ignore_event
)

(lse-define-fill-in "image_names()" 
  '(token)
  '(token                 "Balloon.image_names")
  '(token                 "BaseWidget.image_names")
  '(token                 "Button.image_names")
  '(token                 "Buttonbox.image_names")
  '(token                 "C_Entry.image_names")
  '(token                 "C_Frame.image_names")
  '(token                 "C_Listbox.image_names")
  '(token                 "C_Menu.image_names")
  '(token                 "C_Text.image_names")
  '(token                 "Canvas.image_names")
  '(token                 "Checkbutton.image_names")
  '(token                 "Combo_Tuple.image_names")
  '(token                 "Combo_Tuple_X.image_names")
  '(token                 "Combobox.image_names")
  '(token                 "Entry.image_names")
  '(token                 "Entrybox.image_names")
  '(token                 "Filename_Entry.image_names")
  '(token                 "Frame.image_names")
  '(token                 "H_Panedwindow.image_names")
  '(token                 "H_Panedwindow.V_Separator.image_names")
  '(token                 "H_Scrollable.image_names")
  '(token                 "H_Separator.image_names")
  '(token                 "H_Strut.image_names")
  '(token                 "Label.image_names")
  '(token                 "Listbox.image_names")
  '(token                 "Listbox_Tuple.image_names")
  '(token                 "Listdropentry.image_names")
  '(token                 "Listdropspinner.image_names")
  '(token                 "Listspinner.image_names")
  '(token                 "Menu.image_names")
  '(token                 "Menubutton.image_names")
  '(token                 "Message.image_names")
  '(token                 "Message_Window.image_names")
  '(token                 "Misc.image_names")
  '(token                 "Multicombobox.image_names")
  '(token                 "Multicombobox_X.image_names")
  '(token                 "Notebook.image_names")
  '(token                 "Num_Spinner.image_names")
  '(token                 "OptionMenu.image_names")
  '(token                 "Progress_Gauge.image_names")
  '(token                 "Progress_Gauge_T.image_names")
  '(token                 "Radiobutton.image_names")
  '(token                 "Scale.image_names")
  '(token                 "Scrollbar.image_names")
  '(token                 "Scrolled_Listbox.image_names")
  '(token                 "Scrolled_Text.image_names")
  '(token                 "Slide_Show.image_names")
  '(token                 "Statuslabel.image_names")
  '(token                 "Statuslabel.Label.image_names")
  '(token                 "Statustext.image_names")
  '(token                 "Statustext.Text.image_names")
  '(token                 "Studbutton.image_names")
  '(token                 "Tabbed_Notebook.image_names")
  '(token                 "Text.image_names")
  '(token                 "Tk.image_names")
  '(token                 "Toplevel.image_names")
  '(token                 "Tributton.image_names")
  '(token                 "Up_Down_Button.image_names")
  '(token                 "V_Panedwindow.image_names")
  '(token                 "V_Panedwindow.H_Separator.image_names")
  '(token                 "V_Scrollable.image_names")
  '(token                 "V_Separator.image_names")
  '(token                 "V_Strut.image_names")
  '(token                 "Widget.image_names")
  '(token                 "_C_Frame.image_names")
  '(token                 "_Combobox.Scrolled_Listbox.image_names")
  '(token                 "_Panedwindow.image_names")
  '(token                 "_Scrollable.image_names")
  '(token                 "_Separator.image_names")
  '(token                 "_Spinnerentry.image_names")
  '(token                 "_Statusframe.image_names")
  '(replacement           "image_names ()")
;;; image_names()
)

(lse-define-fill-in "image_types()" 
  '(token)
  '(token                 "Balloon.image_types")
  '(token                 "BaseWidget.image_types")
  '(token                 "Button.image_types")
  '(token                 "Buttonbox.image_types")
  '(token                 "C_Entry.image_types")
  '(token                 "C_Frame.image_types")
  '(token                 "C_Listbox.image_types")
  '(token                 "C_Menu.image_types")
  '(token                 "C_Text.image_types")
  '(token                 "Canvas.image_types")
  '(token                 "Checkbutton.image_types")
  '(token                 "Combo_Tuple.image_types")
  '(token                 "Combo_Tuple_X.image_types")
  '(token                 "Combobox.image_types")
  '(token                 "Entry.image_types")
  '(token                 "Entrybox.image_types")
  '(token                 "Filename_Entry.image_types")
  '(token                 "Frame.image_types")
  '(token                 "H_Panedwindow.image_types")
  '(token                 "H_Panedwindow.V_Separator.image_types")
  '(token                 "H_Scrollable.image_types")
  '(token                 "H_Separator.image_types")
  '(token                 "H_Strut.image_types")
  '(token                 "Label.image_types")
  '(token                 "Listbox.image_types")
  '(token                 "Listbox_Tuple.image_types")
  '(token                 "Listdropentry.image_types")
  '(token                 "Listdropspinner.image_types")
  '(token                 "Listspinner.image_types")
  '(token                 "Menu.image_types")
  '(token                 "Menubutton.image_types")
  '(token                 "Message.image_types")
  '(token                 "Message_Window.image_types")
  '(token                 "Misc.image_types")
  '(token                 "Multicombobox.image_types")
  '(token                 "Multicombobox_X.image_types")
  '(token                 "Notebook.image_types")
  '(token                 "Num_Spinner.image_types")
  '(token                 "OptionMenu.image_types")
  '(token                 "Progress_Gauge.image_types")
  '(token                 "Progress_Gauge_T.image_types")
  '(token                 "Radiobutton.image_types")
  '(token                 "Scale.image_types")
  '(token                 "Scrollbar.image_types")
  '(token                 "Scrolled_Listbox.image_types")
  '(token                 "Scrolled_Text.image_types")
  '(token                 "Slide_Show.image_types")
  '(token                 "Statuslabel.image_types")
  '(token                 "Statuslabel.Label.image_types")
  '(token                 "Statustext.image_types")
  '(token                 "Statustext.Text.image_types")
  '(token                 "Studbutton.image_types")
  '(token                 "Tabbed_Notebook.image_types")
  '(token                 "Text.image_types")
  '(token                 "Tk.image_types")
  '(token                 "Toplevel.image_types")
  '(token                 "Tributton.image_types")
  '(token                 "Up_Down_Button.image_types")
  '(token                 "V_Panedwindow.image_types")
  '(token                 "V_Panedwindow.H_Separator.image_types")
  '(token                 "V_Scrollable.image_types")
  '(token                 "V_Separator.image_types")
  '(token                 "V_Strut.image_types")
  '(token                 "Widget.image_types")
  '(token                 "_C_Frame.image_types")
  '(token                 "_Combobox.Scrolled_Listbox.image_types")
  '(token                 "_Panedwindow.image_types")
  '(token                 "_Scrollable.image_types")
  '(token                 "_Separator.image_types")
  '(token                 "_Spinnerentry.image_types")
  '(token                 "_Statusframe.image_types")
  '(replacement           "image_types ()")
;;; image_types()
)

(lse-define-fill-in "Progress_Gauge_T.inc:args" 
  '(description           "Argument 1 of Progress_Gauge_T.inc")
  '(leading               ",")
  '(separator             ", ")
;;; Progress_Gauge_T.inc:args
)

(lse-define-fill-in "inc(args,kw)" 
  '(token)
  '(token                 "Progress_Gauge_T.inc")
  '(replacement           "inc (««Progress_Gauge_T.inc:args»»···, ««py-named-arg»»···)")
;;; inc(args,kw)
)

(lse-define-fill-in "Progress_Gauge.inc:delta" 
  '(description           "Argument 1 of Progress_Gauge.inc (default = 1)")
  '(leading               ",")
;;; Progress_Gauge.inc:delta
)

(lse-define-fill-in "inc(delta)" 
  '(token)
  '(token                 "Progress_Gauge.inc")
  '(replacement           "inc (««Progress_Gauge.inc:delta»»)")
;;; inc(delta)
)

(lse-define-fill-in "index()" 
  '(token)
  '(token                 "C_Listbox.index")
  '(token                 "Scrolled_Listbox.index")
  '(token                 "_Combobox.Scrolled_Listbox.index")
  '(replacement           "index ()")
;;; index()
)

(lse-define-fill-in "Canvas.index:args" 
  '(description           "Argument 1 of Canvas.index")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.index:args
)

(lse-define-fill-in "index(args)" 
  '(token)
  '(token                 "Canvas.index")
  '(replacement           "index (««Canvas.index:args»»···)")
;;; index(args)
)

(lse-define-fill-in "CanvasItem.index:index" 
  '(description           "Argument 1 of CanvasItem.index")
  '(leading               ",")
;;; CanvasItem.index:index
)

(lse-define-fill-in "index(index)" 
  '(token)
  '(token                 "Arc.index")
  '(token                 "Bitmap.index")
  '(token                 "CanvasItem.index")
  '(token                 "CanvasText.index")
  '(token                 "Entry.index")
  '(token                 "Group.index")
  '(token                 "ImageItem.index")
  '(token                 "Line.index")
  '(token                 "Listbox.index")
  '(token                 "Menu.index")
  '(token                 "Oval.index")
  '(token                 "Polygon.index")
  '(token                 "Rectangle.index")
  '(token                 "Statustext.Text.index")
  '(token                 "Text.index")
  '(token                 "Window.index")
  '(replacement           "index («CanvasItem.index:index»)")
;;; index(index)
)

(lse-define-fill-in "_Listspinner.index:value" 
  '(description           "Argument 1 of _Listspinner.index")
  '(leading               ",")
;;; _Listspinner.index:value
)

(lse-define-fill-in "index(value)" 
  '(token)
  '(token                 "Listdropspinner.index")
  '(token                 "Listspinner.index")
  '(token                 "_Listspinner.index")
  '(replacement           "index («_Listspinner.index:value»)")
;;; index(value)
)

(lse-define-fill-in "info()" 
  '(token)
  '(token                 "Button.info")
  '(token                 "Buttonbox.info")
  '(token                 "C_Entry.info")
  '(token                 "C_Frame.info")
  '(token                 "C_Listbox.info")
  '(token                 "C_Menu.info")
  '(token                 "C_Text.info")
  '(token                 "Canvas.info")
  '(token                 "Checkbutton.info")
  '(token                 "Combo_Tuple.info")
  '(token                 "Combo_Tuple_X.info")
  '(token                 "Combobox.info")
  '(token                 "Entry.info")
  '(token                 "Entrybox.info")
  '(token                 "Filename_Entry.info")
  '(token                 "Frame.info")
  '(token                 "Grid.info")
  '(token                 "H_Panedwindow.info")
  '(token                 "H_Panedwindow.V_Separator.info")
  '(token                 "H_Scrollable.info")
  '(token                 "H_Separator.info")
  '(token                 "H_Strut.info")
  '(token                 "Label.info")
  '(token                 "Listbox.info")
  '(token                 "Listbox_Tuple.info")
  '(token                 "Listdropentry.info")
  '(token                 "Listdropspinner.info")
  '(token                 "Listspinner.info")
  '(token                 "Menu.info")
  '(token                 "Menubutton.info")
  '(token                 "Message.info")
  '(token                 "Message_Window.info")
  '(token                 "Multicombobox.info")
  '(token                 "Multicombobox_X.info")
  '(token                 "Notebook.info")
  '(token                 "Num_Spinner.info")
  '(token                 "OptionMenu.info")
  '(token                 "Pack.info")
  '(token                 "Place.info")
  '(token                 "Progress_Gauge.info")
  '(token                 "Radiobutton.info")
  '(token                 "Scale.info")
  '(token                 "Scrollbar.info")
  '(token                 "Scrolled_Listbox.info")
  '(token                 "Scrolled_Text.info")
  '(token                 "Slide_Show.info")
  '(token                 "Statuslabel.info")
  '(token                 "Statuslabel.Label.info")
  '(token                 "Statustext.info")
  '(token                 "Statustext.Text.info")
  '(token                 "Studbutton.info")
  '(token                 "Tabbed_Notebook.info")
  '(token                 "Text.info")
  '(token                 "Tributton.info")
  '(token                 "Up_Down_Button.info")
  '(token                 "V_Panedwindow.info")
  '(token                 "V_Panedwindow.H_Separator.info")
  '(token                 "V_Scrollable.info")
  '(token                 "V_Separator.info")
  '(token                 "V_Strut.info")
  '(token                 "Widget.info")
  '(token                 "_C_Frame.info")
  '(token                 "_Combobox.Scrolled_Listbox.info")
  '(token                 "_Panedwindow.info")
  '(token                 "_Scrollable.info")
  '(token                 "_Separator.info")
  '(token                 "_Spinnerentry.info")
  '(token                 "_Statusframe.info")
  '(replacement           "info ()")
;;; info()
)

(lse-define-fill-in "init_finish()" 
  '(description
    "Completes initialization of `Combo_Tuple'. This must be called"
           "after all listboxes and entries were added and before the"
           "`Combo_Tuple' is used."
        ""
   )
  '(token)
  '(token                 "Combo_Tuple.init_finish")
  '(token                 "Combo_Tuple_X.init_finish")
  '(replacement           "init_finish ()")
;;; init_finish()
)

(lse-define-fill-in "C_Listbox.insert:args" 
  '(description           "Argument 1 of C_Listbox.insert")
  '(leading               ",")
  '(separator             ", ")
;;; C_Listbox.insert:args
)

(lse-define-fill-in "insert(args)" 
  '(token)
  '(token                 "C_Listbox.insert")
  '(token                 "Canvas.insert")
  '(token                 "Scrolled_Listbox.insert")
  '(token                 "_Combobox.Scrolled_Listbox.insert")
  '(replacement           "insert (««C_Listbox.insert:args»»···)")
;;; insert(args)
)

(lse-define-fill-in "C_Text.insert:args" 
  '(description           "Argument 1 of C_Text.insert")
  '(leading               ",")
  '(separator             ", ")
;;; C_Text.insert:args
)

(lse-define-fill-in "insert(args,kw)" 
  '(description           "Insert text into `self.body'.")
  '(token)
  '(token                 "C_Text.insert")
  '(token                 "Message_Window.insert")
  '(token                 "Scrolled_Text.insert")
  '(replacement           "insert (««C_Text.insert:args»»···, ««py-named-arg»»···)")
;;; insert(args,kw)
)

(lse-define-fill-in "Group.insert:beforeThis" 
  '(description           "Argument 1 of Group.insert")
  '(leading               ",")
;;; Group.insert:beforeThis
)

(lse-define-fill-in "Group.insert:string" 
  '(description           "Argument 2 of Group.insert")
  '(leading               ",")
;;; Group.insert:string
)

(lse-define-fill-in "insert(beforeThis,string)" 
  '(token)
  '(token                 "Group.insert")
  '(replacement           "insert («Group.insert:beforeThis», «Group.insert:string»)")
;;; insert(beforeThis,string)
)

(lse-define-fill-in "CanvasItem.insert:beforethis" 
  '(description           "Argument 1 of CanvasItem.insert")
  '(leading               ",")
;;; CanvasItem.insert:beforethis
)

(lse-define-fill-in "CanvasItem.insert:string" 
  '(description           "Argument 2 of CanvasItem.insert")
  '(leading               ",")
;;; CanvasItem.insert:string
)

(lse-define-fill-in "insert(beforethis,string)" 
  '(token)
  '(token                 "Arc.insert")
  '(token                 "Bitmap.insert")
  '(token                 "CanvasItem.insert")
  '(token                 "CanvasText.insert")
  '(token                 "ImageItem.insert")
  '(token                 "Line.insert")
  '(token                 "Oval.insert")
  '(token                 "Polygon.insert")
  '(token                 "Rectangle.insert")
  '(token                 "Window.insert")
  '(replacement           "insert («CanvasItem.insert:beforethis», «CanvasItem.insert:string»)")
;;; insert(beforethis,string)
)

(lse-define-fill-in "Combo_Entry.insert:i" 
  '(description           "Argument 1 of Combo_Entry.insert")
  '(leading               ",")
;;; Combo_Entry.insert:i
)

(lse-define-fill-in "Combo_Entry.insert:elem" 
  '(description           "Argument 2 of Combo_Entry.insert")
  '(leading               ",")
;;; Combo_Entry.insert:elem
)

(lse-define-fill-in "insert(i,elem)" 
  '(token)
  '(token                 "Combo_Entry.insert")
  '(token                 "Combobox.insert")
  '(token                 "Multicombobox.insert")
  '(token                 "Multicombobox_X.insert")
  '(token                 "_Combobox.insert")
  '(replacement           "insert («Combo_Entry.insert:i», «Combo_Entry.insert:elem»)")
;;; insert(i,elem)
)

(lse-define-fill-in "Statustext.Text.insert:index" 
  '(description           "Argument 1 of Statustext.Text.insert")
  '(leading               ",")
;;; Statustext.Text.insert:index
)

(lse-define-fill-in "Statustext.Text.insert:chars" 
  '(description           "Argument 2 of Statustext.Text.insert")
  '(leading               ",")
;;; Statustext.Text.insert:chars
)

(lse-define-fill-in "Statustext.Text.insert:args" 
  '(description           "Argument 3 of Statustext.Text.insert")
  '(leading               ",")
  '(separator             ", ")
;;; Statustext.Text.insert:args
)

(lse-define-fill-in "insert(index,chars,args)" 
  '(token)
  '(token                 "Statustext.Text.insert")
  '(token                 "Text.insert")
  '(replacement           "insert («Statustext.Text.insert:index», «Statustext.Text.insert:chars», ««Statustext.Text.insert:args»»···)")
;;; insert(index,chars,args)
)

(lse-define-fill-in "Listbox.insert:index" 
  '(description           "Argument 1 of Listbox.insert")
  '(leading               ",")
;;; Listbox.insert:index
)

(lse-define-fill-in "Listbox.insert:elements" 
  '(description           "Argument 2 of Listbox.insert")
  '(leading               ",")
  '(separator             ", ")
;;; Listbox.insert:elements
)

(lse-define-fill-in "insert(index,elements)" 
  '(token)
  '(token                 "Listbox.insert")
  '(replacement           "insert («Listbox.insert:index», ««Listbox.insert:elements»»···)")
;;; insert(index,elements)
)

(lse-define-fill-in "Menu.insert:index" 
  '(description           "Argument 1 of Menu.insert")
  '(leading               ",")
;;; Menu.insert:index
)

(lse-define-fill-in "Menu.insert:itemType" 
  '(description           "Argument 2 of Menu.insert")
  '(leading               ",")
;;; Menu.insert:itemType
)

(lse-define-fill-in "Menu.insert:cnf" 
  '(description           "Argument 3 of Menu.insert (default = {})")
  '(leading               ",")
;;; Menu.insert:cnf
)

(lse-define-fill-in "insert(index,itemType,cnf,kw)" 
  '(token)
  '(token                 "C_Menu.insert")
  '(token                 "Menu.insert")
  '(replacement           "insert («Menu.insert:index», «Menu.insert:itemType», ««Menu.insert:cnf»», ««py-named-arg»»···)")
;;; insert(index,itemType,cnf,kw)
)

(lse-define-fill-in "_Listbox_Tuple.insert:index" 
  '(description           "Argument 1 of _Listbox_Tuple.insert")
  '(leading               ",")
;;; _Listbox_Tuple.insert:index
)

(lse-define-fill-in "_Listbox_Tuple.insert:lists" 
  '(description           "Argument 2 of _Listbox_Tuple.insert")
  '(leading               ",")
  '(separator             ", ")
;;; _Listbox_Tuple.insert:lists
)

(lse-define-fill-in "insert(index,lists)" 
  '(token)
  '(token                 "Combo_Tuple.insert")
  '(token                 "Combo_Tuple_X.insert")
  '(token                 "Listbox_Tuple.insert")
  '(token                 "_Listbox_Tuple.insert")
  '(replacement           "insert («_Listbox_Tuple.insert:index», ««_Listbox_Tuple.insert:lists»»···)")
;;; insert(index,lists)
)

(lse-define-fill-in "Entry.insert:index" 
  '(description           "Argument 1 of Entry.insert")
  '(leading               ",")
;;; Entry.insert:index
)

(lse-define-fill-in "Entry.insert:string" 
  '(description           "Argument 2 of Entry.insert")
  '(leading               ",")
;;; Entry.insert:string
)

(lse-define-fill-in "insert(index,string)" 
  '(token)
  '(token                 "Entry.insert")
  '(replacement           "insert («Entry.insert:index», «Entry.insert:string»)")
;;; insert(index,string)
)

(lse-define-fill-in "Message_Window.insert:pos" 
  '(description           "Argument 1 of Message_Window.insert")
  '(leading               ",")
;;; Message_Window.insert:pos
)

(lse-define-fill-in "Message_Window.insert:text" 
  '(description           "Argument 2 of Message_Window.insert")
  '(leading               ",")
;;; Message_Window.insert:text
)

(lse-define-fill-in "Message_Window.insert:tags" 
  '(description           "Argument 3 of Message_Window.insert")
  '(leading               ",")
  '(separator             ", ")
;;; Message_Window.insert:tags
)

(lse-define-fill-in "insert(pos,text,tags)" 
  '(token)
  '(token                 "Message_Window.insert")
  '(replacement           "insert («Message_Window.insert:pos», «Message_Window.insert:text», ««Message_Window.insert:tags»»···)")
;;; insert(pos,text,tags)
)

(lse-define-fill-in "Menu.insert_cascade:index" 
  '(description           "Argument 1 of Menu.insert_cascade")
  '(leading               ",")
;;; Menu.insert_cascade:index
)

(lse-define-fill-in "Menu.insert_cascade:cnf" 
  '(description           "Argument 2 of Menu.insert_cascade (default = {})")
  '(leading               ",")
;;; Menu.insert_cascade:cnf
)

(lse-define-fill-in "insert_cascade(index,cnf,kw)" 
  '(token)
  '(token                 "C_Menu.insert_cascade")
  '(token                 "Menu.insert_cascade")
  '(replacement           "insert_cascade («Menu.insert_cascade:index», ««Menu.insert_cascade:cnf»», ««py-named-arg»»···)")
;;; insert_cascade(index,cnf,kw)
)

(lse-define-fill-in "Menu.insert_checkbutton:index" 
  '(description           "Argument 1 of Menu.insert_checkbutton")
  '(leading               ",")
;;; Menu.insert_checkbutton:index
)

(lse-define-fill-in "Menu.insert_checkbutton:cnf" 
  '(description           "Argument 2 of Menu.insert_checkbutton (default = {})")
  '(leading               ",")
;;; Menu.insert_checkbutton:cnf
)

(lse-define-fill-in "insert_checkbutton(index,cnf,kw)" 
  '(token)
  '(token                 "C_Menu.insert_checkbutton")
  '(token                 "Menu.insert_checkbutton")
  '(replacement           "insert_checkbutton («Menu.insert_checkbutton:index», ««Menu.insert_checkbutton:cnf»», ««py-named-arg»»···)")
;;; insert_checkbutton(index,cnf,kw)
)

(lse-define-fill-in "Menu.insert_command:index" 
  '(description           "Argument 1 of Menu.insert_command")
  '(leading               ",")
;;; Menu.insert_command:index
)

(lse-define-fill-in "Menu.insert_command:cnf" 
  '(description           "Argument 2 of Menu.insert_command (default = {})")
  '(leading               ",")
;;; Menu.insert_command:cnf
)

(lse-define-fill-in "insert_command(index,cnf,kw)" 
  '(token)
  '(token                 "C_Menu.insert_command")
  '(token                 "Menu.insert_command")
  '(replacement           "insert_command («Menu.insert_command:index», ««Menu.insert_command:cnf»», ««py-named-arg»»···)")
;;; insert_command(index,cnf,kw)
)

(lse-define-fill-in "Menu.insert_radiobutton:index" 
  '(description           "Argument 1 of Menu.insert_radiobutton")
  '(leading               ",")
;;; Menu.insert_radiobutton:index
)

(lse-define-fill-in "Menu.insert_radiobutton:cnf" 
  '(description           "Argument 2 of Menu.insert_radiobutton (default = {})")
  '(leading               ",")
;;; Menu.insert_radiobutton:cnf
)

(lse-define-fill-in "insert_radiobutton(index,cnf,kw)" 
  '(token)
  '(token                 "C_Menu.insert_radiobutton")
  '(token                 "Menu.insert_radiobutton")
  '(replacement           "insert_radiobutton («Menu.insert_radiobutton:index», ««Menu.insert_radiobutton:cnf»», ««py-named-arg»»···)")
;;; insert_radiobutton(index,cnf,kw)
)

(lse-define-fill-in "Menu.insert_separator:index" 
  '(description           "Argument 1 of Menu.insert_separator")
  '(leading               ",")
;;; Menu.insert_separator:index
)

(lse-define-fill-in "Menu.insert_separator:cnf" 
  '(description           "Argument 2 of Menu.insert_separator (default = {})")
  '(leading               ",")
;;; Menu.insert_separator:cnf
)

(lse-define-fill-in "insert_separator(index,cnf,kw)" 
  '(token)
  '(token                 "C_Menu.insert_separator")
  '(token                 "Menu.insert_separator")
  '(replacement           "insert_separator («Menu.insert_separator:index», ««Menu.insert_separator:cnf»», ««py-named-arg»»···)")
;;; insert_separator(index,cnf,kw)
)

(lse-define-fill-in "invoke()" 
  '(token)
  '(token                 "Button.invoke")
  '(token                 "Checkbutton.invoke")
  '(token                 "Radiobutton.invoke")
  '(token                 "Studbutton.invoke")
  '(token                 "Tributton.invoke")
  '(replacement           "invoke ()")
;;; invoke()
)

(lse-define-fill-in "Buttonbox.invoke:button" 
  '(description           "Argument 1 of Buttonbox.invoke")
  '(leading               ",")
;;; Buttonbox.invoke:button
)

(lse-define-fill-in "invoke(button)" 
  '(token)
  '(token                 "Buttonbox.invoke")
  '(replacement           "invoke («Buttonbox.invoke:button»)")
;;; invoke(button)
)

(lse-define-fill-in "Menu.invoke:index" 
  '(description           "Argument 1 of Menu.invoke")
  '(leading               ",")
;;; Menu.invoke:index
)

(lse-define-fill-in "invoke(index)" 
  '(token)
  '(token                 "C_Menu.invoke")
  '(token                 "Menu.invoke")
  '(replacement           "invoke («Menu.invoke:index»)")
;;; invoke(index)
)

(lse-define-fill-in "Canvas.itemcget:tagOrId" 
  '(description           "Argument 1 of Canvas.itemcget")
  '(leading               ",")
;;; Canvas.itemcget:tagOrId
)

(lse-define-fill-in "Canvas.itemcget:option" 
  '(description           "Argument 2 of Canvas.itemcget")
  '(leading               ",")
;;; Canvas.itemcget:option
)

(lse-define-fill-in "itemcget(tagOrId,option)" 
  '(token)
  '(token                 "Canvas.itemcget")
  '(replacement           "itemcget («Canvas.itemcget:tagOrId», «Canvas.itemcget:option»)")
;;; itemcget(tagOrId,option)
)

(lse-define-fill-in "Canvas.itemconfig:tagOrId" 
  '(description           "Argument 1 of Canvas.itemconfig")
  '(leading               ",")
;;; Canvas.itemconfig:tagOrId
)

(lse-define-fill-in "Canvas.itemconfig:cnf" 
  '(description           "Argument 2 of Canvas.itemconfig (default = None)")
  '(leading               ",")
;;; Canvas.itemconfig:cnf
)

(lse-define-fill-in "itemconfig(tagOrId,cnf,kw)" 
  '(token)
  '(token                 "Canvas.itemconfig")
  '(replacement           "itemconfig («Canvas.itemconfig:tagOrId», ««Canvas.itemconfig:cnf»», ««py-named-arg»»···)")
;;; itemconfig(tagOrId,cnf,kw)
)

(lse-define-fill-in "Canvas.itemconfigure:tagOrId" 
  '(description           "Argument 1 of Canvas.itemconfigure")
  '(leading               ",")
;;; Canvas.itemconfigure:tagOrId
)

(lse-define-fill-in "Canvas.itemconfigure:cnf" 
  '(description           "Argument 2 of Canvas.itemconfigure (default = None)")
  '(leading               ",")
;;; Canvas.itemconfigure:cnf
)

(lse-define-fill-in "itemconfigure(tagOrId,cnf,kw)" 
  '(token)
  '(token                 "Canvas.itemconfigure")
  '(replacement           "itemconfigure («Canvas.itemconfigure:tagOrId», ««Canvas.itemconfigure:cnf»», ««py-named-arg»»···)")
;;; itemconfigure(tagOrId,cnf,kw)
)

(lse-define-fill-in "C_Listbox.key_next:event" 
  '(description           "Argument 1 of C_Listbox.key_next")
  '(leading               ",")
;;; C_Listbox.key_next:event
)

(lse-define-fill-in "key_next(event)" 
  '(token)
  '(token                 "C_Listbox.key_next")
  '(token                 "Scrolled_Listbox.key_next")
  '(token                 "_Combobox.Scrolled_Listbox.key_next")
  '(replacement           "key_next («C_Listbox.key_next:event»)")
;;; key_next(event)
)

(lse-define-fill-in "C_Listbox.key_prior:event" 
  '(description           "Argument 1 of C_Listbox.key_prior")
  '(leading               ",")
;;; C_Listbox.key_prior:event
)

(lse-define-fill-in "key_prior(event)" 
  '(token)
  '(token                 "C_Listbox.key_prior")
  '(token                 "Scrolled_Listbox.key_prior")
  '(token                 "_Combobox.Scrolled_Listbox.key_prior")
  '(replacement           "key_prior («C_Listbox.key_prior:event»)")
;;; key_prior(event)
)

(lse-define-fill-in "Combo_Entry.key_select:event" 
  '(description           "Argument 1 of Combo_Entry.key_select (default = None)")
  '(leading               ",")
;;; Combo_Entry.key_select:event
)

(lse-define-fill-in "key_select(event)" 
  '(token)
  '(token                 "Combo_Entry.key_select")
  '(token                 "Combobox.key_select")
  '(token                 "Multicombobox.key_select")
  '(token                 "Multicombobox_X.key_select")
  '(token                 "_Combobox.key_select")
  '(token                 "_Listbox_Tuple.key_select")
  '(token                 "_Listdrop.key_select")
  '(replacement           "key_select (««Combo_Entry.key_select:event»»)")
;;; key_select(event)
)

(lse-define-fill-in "Combo_Tuple.key_select_after:event" 
  '(description           "Argument 1 of Combo_Tuple.key_select_after (default = None)")
  '(leading               ",")
;;; Combo_Tuple.key_select_after:event
)

(lse-define-fill-in "key_select_after(event)" 
  '(token)
  '(token                 "Combo_Tuple.key_select_after")
  '(token                 "Combo_Tuple_X.key_select_after")
  '(replacement           "key_select_after (««Combo_Tuple.key_select_after:event»»)")
;;; key_select_after(event)
)

(lse-define-fill-in "keys()" 
  '(token)
  '(token                 "Arc.keys")
  '(token                 "Bitmap.keys")
  '(token                 "CanvasItem.keys")
  '(token                 "CanvasText.keys")
  '(token                 "ImageItem.keys")
  '(token                 "Line.keys")
  '(token                 "Misc.keys")
  '(token                 "Oval.keys")
  '(token                 "Polygon.keys")
  '(token                 "Rectangle.keys")
  '(token                 "Window.keys")
  '(replacement           "keys ()")
;;; keys()
)

(lse-define-fill-in "Misc.lift:aboveThis" 
  '(description           "Argument 1 of Misc.lift (default = None)")
  '(leading               ",")
;;; Misc.lift:aboveThis
)

(lse-define-fill-in "lift(aboveThis)" 
  '(token)
  '(token                 "Balloon.lift")
  '(token                 "BaseWidget.lift")
  '(token                 "Button.lift")
  '(token                 "Buttonbox.lift")
  '(token                 "C_Entry.lift")
  '(token                 "C_Frame.lift")
  '(token                 "C_Listbox.lift")
  '(token                 "C_Menu.lift")
  '(token                 "C_Text.lift")
  '(token                 "Canvas.lift")
  '(token                 "Checkbutton.lift")
  '(token                 "Combo_Tuple.lift")
  '(token                 "Combo_Tuple_X.lift")
  '(token                 "Combobox.lift")
  '(token                 "Entry.lift")
  '(token                 "Entrybox.lift")
  '(token                 "Filename_Entry.lift")
  '(token                 "Frame.lift")
  '(token                 "Group.lift")
  '(token                 "H_Panedwindow.lift")
  '(token                 "H_Panedwindow.V_Separator.lift")
  '(token                 "H_Scrollable.lift")
  '(token                 "H_Separator.lift")
  '(token                 "H_Strut.lift")
  '(token                 "Label.lift")
  '(token                 "Listbox.lift")
  '(token                 "Listbox_Tuple.lift")
  '(token                 "Listdropentry.lift")
  '(token                 "Listdropspinner.lift")
  '(token                 "Listspinner.lift")
  '(token                 "Menu.lift")
  '(token                 "Menubutton.lift")
  '(token                 "Message.lift")
  '(token                 "Message_Window.lift")
  '(token                 "Misc.lift")
  '(token                 "Multicombobox.lift")
  '(token                 "Multicombobox_X.lift")
  '(token                 "Notebook.lift")
  '(token                 "Num_Spinner.lift")
  '(token                 "OptionMenu.lift")
  '(token                 "Progress_Gauge.lift")
  '(token                 "Progress_Gauge_T.lift")
  '(token                 "Radiobutton.lift")
  '(token                 "Scale.lift")
  '(token                 "Scrollbar.lift")
  '(token                 "Scrolled_Listbox.lift")
  '(token                 "Scrolled_Text.lift")
  '(token                 "Slide_Show.lift")
  '(token                 "Statuslabel.lift")
  '(token                 "Statuslabel.Label.lift")
  '(token                 "Statustext.lift")
  '(token                 "Statustext.Text.lift")
  '(token                 "Studbutton.lift")
  '(token                 "Tabbed_Notebook.lift")
  '(token                 "Text.lift")
  '(token                 "Tk.lift")
  '(token                 "Toplevel.lift")
  '(token                 "Tributton.lift")
  '(token                 "Up_Down_Button.lift")
  '(token                 "V_Panedwindow.lift")
  '(token                 "V_Panedwindow.H_Separator.lift")
  '(token                 "V_Scrollable.lift")
  '(token                 "V_Separator.lift")
  '(token                 "V_Strut.lift")
  '(token                 "Widget.lift")
  '(token                 "_C_Frame.lift")
  '(token                 "_Combobox.Scrolled_Listbox.lift")
  '(token                 "_Panedwindow.lift")
  '(token                 "_Scrollable.lift")
  '(token                 "_Separator.lift")
  '(token                 "_Spinnerentry.lift")
  '(token                 "_Statusframe.lift")
  '(replacement           "lift (««Misc.lift:aboveThis»»)")
;;; lift(aboveThis)
)

(lse-define-fill-in "Canvas.lift:args" 
  '(description           "Argument 1 of Canvas.lift")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.lift:args
)

(lse-define-fill-in "lift(args)" 
  '(token)
  '(token                 "Canvas.lift")
  '(replacement           "lift (««Canvas.lift:args»»···)")
;;; lift(args)
)

(lse-define-fill-in "Grid.location:x" 
  '(description           "Argument 1 of Grid.location")
  '(leading               ",")
;;; Grid.location:x
)

(lse-define-fill-in "Grid.location:y" 
  '(description           "Argument 2 of Grid.location")
  '(leading               ",")
;;; Grid.location:y
)

(lse-define-fill-in "location(x,y)" 
  '(token)
  '(token                 "Button.location")
  '(token                 "Buttonbox.location")
  '(token                 "C_Entry.location")
  '(token                 "C_Frame.location")
  '(token                 "C_Listbox.location")
  '(token                 "C_Menu.location")
  '(token                 "C_Text.location")
  '(token                 "Canvas.location")
  '(token                 "Checkbutton.location")
  '(token                 "Combo_Tuple.location")
  '(token                 "Combo_Tuple_X.location")
  '(token                 "Combobox.location")
  '(token                 "Entry.location")
  '(token                 "Entrybox.location")
  '(token                 "Filename_Entry.location")
  '(token                 "Frame.location")
  '(token                 "Grid.location")
  '(token                 "H_Panedwindow.location")
  '(token                 "H_Panedwindow.V_Separator.location")
  '(token                 "H_Scrollable.location")
  '(token                 "H_Separator.location")
  '(token                 "H_Strut.location")
  '(token                 "Label.location")
  '(token                 "Listbox.location")
  '(token                 "Listbox_Tuple.location")
  '(token                 "Listdropentry.location")
  '(token                 "Listdropspinner.location")
  '(token                 "Listspinner.location")
  '(token                 "Menu.location")
  '(token                 "Menubutton.location")
  '(token                 "Message.location")
  '(token                 "Message_Window.location")
  '(token                 "Multicombobox.location")
  '(token                 "Multicombobox_X.location")
  '(token                 "Notebook.location")
  '(token                 "Num_Spinner.location")
  '(token                 "OptionMenu.location")
  '(token                 "Progress_Gauge.location")
  '(token                 "Radiobutton.location")
  '(token                 "Scale.location")
  '(token                 "Scrollbar.location")
  '(token                 "Scrolled_Listbox.location")
  '(token                 "Scrolled_Text.location")
  '(token                 "Slide_Show.location")
  '(token                 "Statuslabel.location")
  '(token                 "Statuslabel.Label.location")
  '(token                 "Statustext.location")
  '(token                 "Statustext.Text.location")
  '(token                 "Studbutton.location")
  '(token                 "Tabbed_Notebook.location")
  '(token                 "Text.location")
  '(token                 "Tributton.location")
  '(token                 "Up_Down_Button.location")
  '(token                 "V_Panedwindow.location")
  '(token                 "V_Panedwindow.H_Separator.location")
  '(token                 "V_Scrollable.location")
  '(token                 "V_Separator.location")
  '(token                 "V_Strut.location")
  '(token                 "Widget.location")
  '(token                 "_C_Frame.location")
  '(token                 "_Combobox.Scrolled_Listbox.location")
  '(token                 "_Panedwindow.location")
  '(token                 "_Scrollable.location")
  '(token                 "_Separator.location")
  '(token                 "_Spinnerentry.location")
  '(token                 "_Statusframe.location")
  '(replacement           "location («Grid.location:x», «Grid.location:y»)")
;;; location(x,y)
)

(lse-define-fill-in "Canvas.lower:args" 
  '(description           "Argument 1 of Canvas.lower")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.lower:args
)

(lse-define-fill-in "lower(args)" 
  '(token)
  '(token                 "Canvas.lower")
  '(replacement           "lower (««Canvas.lower:args»»···)")
;;; lower(args)
)

(lse-define-fill-in "Misc.lower:belowThis" 
  '(description           "Argument 1 of Misc.lower (default = None)")
  '(leading               ",")
;;; Misc.lower:belowThis
)

(lse-define-fill-in "lower(belowThis)" 
  '(token)
  '(token                 "Balloon.lower")
  '(token                 "BaseWidget.lower")
  '(token                 "Button.lower")
  '(token                 "Buttonbox.lower")
  '(token                 "C_Entry.lower")
  '(token                 "C_Frame.lower")
  '(token                 "C_Listbox.lower")
  '(token                 "C_Menu.lower")
  '(token                 "C_Text.lower")
  '(token                 "Canvas.lower")
  '(token                 "Checkbutton.lower")
  '(token                 "Combo_Tuple.lower")
  '(token                 "Combo_Tuple_X.lower")
  '(token                 "Combobox.lower")
  '(token                 "Entry.lower")
  '(token                 "Entrybox.lower")
  '(token                 "Filename_Entry.lower")
  '(token                 "Frame.lower")
  '(token                 "Group.lower")
  '(token                 "H_Panedwindow.lower")
  '(token                 "H_Panedwindow.V_Separator.lower")
  '(token                 "H_Scrollable.lower")
  '(token                 "H_Separator.lower")
  '(token                 "H_Strut.lower")
  '(token                 "Label.lower")
  '(token                 "Listbox.lower")
  '(token                 "Listbox_Tuple.lower")
  '(token                 "Listdropentry.lower")
  '(token                 "Listdropspinner.lower")
  '(token                 "Listspinner.lower")
  '(token                 "Menu.lower")
  '(token                 "Menubutton.lower")
  '(token                 "Message.lower")
  '(token                 "Message_Window.lower")
  '(token                 "Misc.lower")
  '(token                 "Multicombobox.lower")
  '(token                 "Multicombobox_X.lower")
  '(token                 "Notebook.lower")
  '(token                 "Num_Spinner.lower")
  '(token                 "OptionMenu.lower")
  '(token                 "Progress_Gauge.lower")
  '(token                 "Progress_Gauge_T.lower")
  '(token                 "Radiobutton.lower")
  '(token                 "Scale.lower")
  '(token                 "Scrollbar.lower")
  '(token                 "Scrolled_Listbox.lower")
  '(token                 "Scrolled_Text.lower")
  '(token                 "Slide_Show.lower")
  '(token                 "Statuslabel.lower")
  '(token                 "Statuslabel.Label.lower")
  '(token                 "Statustext.lower")
  '(token                 "Statustext.Text.lower")
  '(token                 "Studbutton.lower")
  '(token                 "Tabbed_Notebook.lower")
  '(token                 "Text.lower")
  '(token                 "Tk.lower")
  '(token                 "Toplevel.lower")
  '(token                 "Tributton.lower")
  '(token                 "Up_Down_Button.lower")
  '(token                 "V_Panedwindow.lower")
  '(token                 "V_Panedwindow.H_Separator.lower")
  '(token                 "V_Scrollable.lower")
  '(token                 "V_Separator.lower")
  '(token                 "V_Strut.lower")
  '(token                 "Widget.lower")
  '(token                 "_C_Frame.lower")
  '(token                 "_Combobox.Scrolled_Listbox.lower")
  '(token                 "_Panedwindow.lower")
  '(token                 "_Scrollable.lower")
  '(token                 "_Separator.lower")
  '(token                 "_Spinnerentry.lower")
  '(token                 "_Statusframe.lower")
  '(replacement           "lower (««Misc.lower:belowThis»»)")
;;; lower(belowThis)
)

(lse-define-fill-in "CanvasItem.lower:belowthis" 
  '(description           "Argument 1 of CanvasItem.lower (default = None)")
  '(leading               ",")
;;; CanvasItem.lower:belowthis
)

(lse-define-fill-in "lower(belowthis)" 
  '(token)
  '(token                 "Arc.lower")
  '(token                 "Bitmap.lower")
  '(token                 "CanvasItem.lower")
  '(token                 "CanvasText.lower")
  '(token                 "ImageItem.lower")
  '(token                 "Line.lower")
  '(token                 "Oval.lower")
  '(token                 "Polygon.lower")
  '(token                 "Rectangle.lower")
  '(token                 "Window.lower")
  '(replacement           "lower (««CanvasItem.lower:belowthis»»)")
;;; lower(belowthis)
)

(lse-define-fill-in "Misc.mainloop:n" 
  '(description           "Argument 1 of Misc.mainloop (default = 0)")
  '(leading               ",")
;;; Misc.mainloop:n
)

(lse-define-fill-in "mainloop(n)" 
  '(token)
  '(token                 "Balloon.mainloop")
  '(token                 "BaseWidget.mainloop")
  '(token                 "Button.mainloop")
  '(token                 "Buttonbox.mainloop")
  '(token                 "C_Entry.mainloop")
  '(token                 "C_Frame.mainloop")
  '(token                 "C_Listbox.mainloop")
  '(token                 "C_Menu.mainloop")
  '(token                 "C_Text.mainloop")
  '(token                 "Canvas.mainloop")
  '(token                 "Checkbutton.mainloop")
  '(token                 "Combo_Tuple.mainloop")
  '(token                 "Combo_Tuple_X.mainloop")
  '(token                 "Combobox.mainloop")
  '(token                 "Entry.mainloop")
  '(token                 "Entrybox.mainloop")
  '(token                 "Filename_Entry.mainloop")
  '(token                 "Frame.mainloop")
  '(token                 "H_Panedwindow.mainloop")
  '(token                 "H_Panedwindow.V_Separator.mainloop")
  '(token                 "H_Scrollable.mainloop")
  '(token                 "H_Separator.mainloop")
  '(token                 "H_Strut.mainloop")
  '(token                 "Label.mainloop")
  '(token                 "Listbox.mainloop")
  '(token                 "Listbox_Tuple.mainloop")
  '(token                 "Listdropentry.mainloop")
  '(token                 "Listdropspinner.mainloop")
  '(token                 "Listspinner.mainloop")
  '(token                 "Menu.mainloop")
  '(token                 "Menubutton.mainloop")
  '(token                 "Message.mainloop")
  '(token                 "Message_Window.mainloop")
  '(token                 "Misc.mainloop")
  '(token                 "Multicombobox.mainloop")
  '(token                 "Multicombobox_X.mainloop")
  '(token                 "Notebook.mainloop")
  '(token                 "Num_Spinner.mainloop")
  '(token                 "OptionMenu.mainloop")
  '(token                 "Progress_Gauge.mainloop")
  '(token                 "Progress_Gauge_T.mainloop")
  '(token                 "Radiobutton.mainloop")
  '(token                 "Scale.mainloop")
  '(token                 "Scrollbar.mainloop")
  '(token                 "Scrolled_Listbox.mainloop")
  '(token                 "Scrolled_Text.mainloop")
  '(token                 "Slide_Show.mainloop")
  '(token                 "Statuslabel.mainloop")
  '(token                 "Statuslabel.Label.mainloop")
  '(token                 "Statustext.mainloop")
  '(token                 "Statustext.Text.mainloop")
  '(token                 "Studbutton.mainloop")
  '(token                 "Tabbed_Notebook.mainloop")
  '(token                 "Text.mainloop")
  '(token                 "Tk.mainloop")
  '(token                 "Toplevel.mainloop")
  '(token                 "Tributton.mainloop")
  '(token                 "Up_Down_Button.mainloop")
  '(token                 "V_Panedwindow.mainloop")
  '(token                 "V_Panedwindow.H_Separator.mainloop")
  '(token                 "V_Scrollable.mainloop")
  '(token                 "V_Separator.mainloop")
  '(token                 "V_Strut.mainloop")
  '(token                 "Widget.mainloop")
  '(token                 "_C_Frame.mainloop")
  '(token                 "_Combobox.Scrolled_Listbox.mainloop")
  '(token                 "_Panedwindow.mainloop")
  '(token                 "_Scrollable.mainloop")
  '(token                 "_Separator.mainloop")
  '(token                 "_Spinnerentry.mainloop")
  '(token                 "_Statusframe.mainloop")
  '(replacement           "mainloop (««Misc.mainloop:n»»)")
;;; mainloop(n)
)

(lse-define-fill-in "Statustext.Text.mark_gravity:markName" 
  '(description           "Argument 1 of Statustext.Text.mark_gravity")
  '(leading               ",")
;;; Statustext.Text.mark_gravity:markName
)

(lse-define-fill-in "Statustext.Text.mark_gravity:direction" 
  '(description           "Argument 2 of Statustext.Text.mark_gravity (default = None)")
  '(leading               ",")
;;; Statustext.Text.mark_gravity:direction
)

(lse-define-fill-in "mark_gravity(markName,direction)" 
  '(token)
  '(token                 "Statustext.Text.mark_gravity")
  '(token                 "Text.mark_gravity")
  '(replacement           "mark_gravity («Statustext.Text.mark_gravity:markName», ««Statustext.Text.mark_gravity:direction»»)")
;;; mark_gravity(markName,direction)
)

(lse-define-fill-in "mark_names()" 
  '(token)
  '(token                 "Statustext.Text.mark_names")
  '(token                 "Text.mark_names")
  '(replacement           "mark_names ()")
;;; mark_names()
)

(lse-define-fill-in "Statustext.Text.mark_set:markName" 
  '(description           "Argument 1 of Statustext.Text.mark_set")
  '(leading               ",")
;;; Statustext.Text.mark_set:markName
)

(lse-define-fill-in "Statustext.Text.mark_set:index" 
  '(description           "Argument 2 of Statustext.Text.mark_set")
  '(leading               ",")
;;; Statustext.Text.mark_set:index
)

(lse-define-fill-in "mark_set(markName,index)" 
  '(token)
  '(token                 "Statustext.Text.mark_set")
  '(token                 "Text.mark_set")
  '(replacement           "mark_set («Statustext.Text.mark_set:markName», «Statustext.Text.mark_set:index»)")
;;; mark_set(markName,index)
)

(lse-define-fill-in "Statustext.Text.mark_unset:markNames" 
  '(description           "Argument 1 of Statustext.Text.mark_unset")
  '(leading               ",")
  '(separator             ", ")
;;; Statustext.Text.mark_unset:markNames
)

(lse-define-fill-in "mark_unset(markNames)" 
  '(token)
  '(token                 "Statustext.Text.mark_unset")
  '(token                 "Text.mark_unset")
  '(replacement           "mark_unset (««Statustext.Text.mark_unset:markNames»»···)")
;;; mark_unset(markNames)
)

(lse-define-fill-in "Wm.maxsize:width" 
  '(description           "Argument 1 of Wm.maxsize (default = None)")
  '(leading               ",")
;;; Wm.maxsize:width
)

(lse-define-fill-in "Wm.maxsize:height" 
  '(description           "Argument 2 of Wm.maxsize (default = None)")
  '(leading               ",")
;;; Wm.maxsize:height
)

(lse-define-fill-in "maxsize(width,height)" 
  '(token)
  '(token                 "Balloon.maxsize")
  '(token                 "Progress_Gauge_T.maxsize")
  '(token                 "Tk.maxsize")
  '(token                 "Toplevel.maxsize")
  '(token                 "Wm.maxsize")
  '(replacement           "maxsize (««Wm.maxsize:width»», ««Wm.maxsize:height»»)")
;;; maxsize(width,height)
)

(lse-define-fill-in "CT_TK_mixin.menu_copy_cmd:event" 
  '(description           "Argument 1 of CT_TK_mixin.menu_copy_cmd (default = None)")
  '(leading               ",")
;;; CT_TK_mixin.menu_copy_cmd:event
)

(lse-define-fill-in "menu_copy_cmd(event)" 
  '(description           "Copy selection.")
  '(token)
  '(token                 "Balloon.menu_copy_cmd")
  '(token                 "Buttonbox.menu_copy_cmd")
  '(token                 "CT_TK_mixin.menu_copy_cmd")
  '(token                 "C_Entry.menu_copy_cmd")
  '(token                 "C_Frame.menu_copy_cmd")
  '(token                 "C_Listbox.menu_copy_cmd")
  '(token                 "C_Menu.menu_copy_cmd")
  '(token                 "C_Text.menu_copy_cmd")
  '(token                 "Combo_Tuple.menu_copy_cmd")
  '(token                 "Combo_Tuple_X.menu_copy_cmd")
  '(token                 "Combobox.menu_copy_cmd")
  '(token                 "Entrybox.menu_copy_cmd")
  '(token                 "Filename_Entry.menu_copy_cmd")
  '(token                 "H_Panedwindow.menu_copy_cmd")
  '(token                 "H_Panedwindow.V_Separator.menu_copy_cmd")
  '(token                 "H_Scrollable.menu_copy_cmd")
  '(token                 "H_Separator.menu_copy_cmd")
  '(token                 "H_Strut.menu_copy_cmd")
  '(token                 "Listbox_Tuple.menu_copy_cmd")
  '(token                 "Listdropentry.menu_copy_cmd")
  '(token                 "Listdropspinner.menu_copy_cmd")
  '(token                 "Listspinner.menu_copy_cmd")
  '(token                 "Message_Window.menu_copy_cmd")
  '(token                 "Multicombobox.menu_copy_cmd")
  '(token                 "Multicombobox_X.menu_copy_cmd")
  '(token                 "Notebook.menu_copy_cmd")
  '(token                 "Num_Spinner.menu_copy_cmd")
  '(token                 "Progress_Gauge.menu_copy_cmd")
  '(token                 "Progress_Gauge_T.menu_copy_cmd")
  '(token                 "Scrolled_Listbox.menu_copy_cmd")
  '(token                 "Scrolled_Text.menu_copy_cmd")
  '(token                 "Slide_Show.menu_copy_cmd")
  '(token                 "Statuslabel.menu_copy_cmd")
  '(token                 "Statustext.menu_copy_cmd")
  '(token                 "Tabbed_Notebook.menu_copy_cmd")
  '(token                 "Up_Down_Button.menu_copy_cmd")
  '(token                 "V_Panedwindow.menu_copy_cmd")
  '(token                 "V_Panedwindow.H_Separator.menu_copy_cmd")
  '(token                 "V_Scrollable.menu_copy_cmd")
  '(token                 "V_Separator.menu_copy_cmd")
  '(token                 "V_Strut.menu_copy_cmd")
  '(token                 "_C_Frame.menu_copy_cmd")
  '(token                 "_Combobox.menu_copy_cmd")
  '(token                 "_Combobox.Scrolled_Listbox.menu_copy_cmd")
  '(token                 "_Listdrop.menu_copy_cmd")
  '(token                 "_Listspinner.menu_copy_cmd")
  '(token                 "_Panedwindow.menu_copy_cmd")
  '(token                 "_Scrollable.menu_copy_cmd")
  '(token                 "_Separator.menu_copy_cmd")
  '(token                 "_Spinner.menu_copy_cmd")
  '(token                 "_Spinnerentry.menu_copy_cmd")
  '(token                 "_Statusframe.menu_copy_cmd")
  '(replacement           "menu_copy_cmd (««CT_TK_mixin.menu_copy_cmd:event»»)")
;;; menu_copy_cmd(event)
)

(lse-define-fill-in "CT_TK_mixin.menu_cut_cmd:event" 
  '(description           "Argument 1 of CT_TK_mixin.menu_cut_cmd (default = None)")
  '(leading               ",")
;;; CT_TK_mixin.menu_cut_cmd:event
)

(lse-define-fill-in "menu_cut_cmd(event)" 
  '(description           "Cut selection.")
  '(token)
  '(token                 "Balloon.menu_cut_cmd")
  '(token                 "Buttonbox.menu_cut_cmd")
  '(token                 "CT_TK_mixin.menu_cut_cmd")
  '(token                 "C_Entry.menu_cut_cmd")
  '(token                 "C_Frame.menu_cut_cmd")
  '(token                 "C_Listbox.menu_cut_cmd")
  '(token                 "C_Menu.menu_cut_cmd")
  '(token                 "C_Text.menu_cut_cmd")
  '(token                 "Combo_Tuple.menu_cut_cmd")
  '(token                 "Combo_Tuple_X.menu_cut_cmd")
  '(token                 "Combobox.menu_cut_cmd")
  '(token                 "Entrybox.menu_cut_cmd")
  '(token                 "Filename_Entry.menu_cut_cmd")
  '(token                 "H_Panedwindow.menu_cut_cmd")
  '(token                 "H_Panedwindow.V_Separator.menu_cut_cmd")
  '(token                 "H_Scrollable.menu_cut_cmd")
  '(token                 "H_Separator.menu_cut_cmd")
  '(token                 "H_Strut.menu_cut_cmd")
  '(token                 "Listbox_Tuple.menu_cut_cmd")
  '(token                 "Listdropentry.menu_cut_cmd")
  '(token                 "Listdropspinner.menu_cut_cmd")
  '(token                 "Listspinner.menu_cut_cmd")
  '(token                 "Message_Window.menu_cut_cmd")
  '(token                 "Multicombobox.menu_cut_cmd")
  '(token                 "Multicombobox_X.menu_cut_cmd")
  '(token                 "Notebook.menu_cut_cmd")
  '(token                 "Num_Spinner.menu_cut_cmd")
  '(token                 "Progress_Gauge.menu_cut_cmd")
  '(token                 "Progress_Gauge_T.menu_cut_cmd")
  '(token                 "Scrolled_Listbox.menu_cut_cmd")
  '(token                 "Scrolled_Text.menu_cut_cmd")
  '(token                 "Slide_Show.menu_cut_cmd")
  '(token                 "Statuslabel.menu_cut_cmd")
  '(token                 "Statustext.menu_cut_cmd")
  '(token                 "Tabbed_Notebook.menu_cut_cmd")
  '(token                 "Up_Down_Button.menu_cut_cmd")
  '(token                 "V_Panedwindow.menu_cut_cmd")
  '(token                 "V_Panedwindow.H_Separator.menu_cut_cmd")
  '(token                 "V_Scrollable.menu_cut_cmd")
  '(token                 "V_Separator.menu_cut_cmd")
  '(token                 "V_Strut.menu_cut_cmd")
  '(token                 "_C_Frame.menu_cut_cmd")
  '(token                 "_Combobox.menu_cut_cmd")
  '(token                 "_Combobox.Scrolled_Listbox.menu_cut_cmd")
  '(token                 "_Listdrop.menu_cut_cmd")
  '(token                 "_Listspinner.menu_cut_cmd")
  '(token                 "_Panedwindow.menu_cut_cmd")
  '(token                 "_Scrollable.menu_cut_cmd")
  '(token                 "_Separator.menu_cut_cmd")
  '(token                 "_Spinner.menu_cut_cmd")
  '(token                 "_Spinnerentry.menu_cut_cmd")
  '(token                 "_Statusframe.menu_cut_cmd")
  '(replacement           "menu_cut_cmd (««CT_TK_mixin.menu_cut_cmd:event»»)")
;;; menu_cut_cmd(event)
)

(lse-define-fill-in "CT_TK_mixin.menu_paste_cmd:event" 
  '(description           "Argument 1 of CT_TK_mixin.menu_paste_cmd (default = None)")
  '(leading               ",")
;;; CT_TK_mixin.menu_paste_cmd:event
)

(lse-define-fill-in "menu_paste_cmd(event)" 
  '(description           "Paste selection.")
  '(token)
  '(token                 "Balloon.menu_paste_cmd")
  '(token                 "Buttonbox.menu_paste_cmd")
  '(token                 "CT_TK_mixin.menu_paste_cmd")
  '(token                 "C_Entry.menu_paste_cmd")
  '(token                 "C_Frame.menu_paste_cmd")
  '(token                 "C_Listbox.menu_paste_cmd")
  '(token                 "C_Menu.menu_paste_cmd")
  '(token                 "C_Text.menu_paste_cmd")
  '(token                 "Combo_Tuple.menu_paste_cmd")
  '(token                 "Combo_Tuple_X.menu_paste_cmd")
  '(token                 "Combobox.menu_paste_cmd")
  '(token                 "Entrybox.menu_paste_cmd")
  '(token                 "Filename_Entry.menu_paste_cmd")
  '(token                 "H_Panedwindow.menu_paste_cmd")
  '(token                 "H_Panedwindow.V_Separator.menu_paste_cmd")
  '(token                 "H_Scrollable.menu_paste_cmd")
  '(token                 "H_Separator.menu_paste_cmd")
  '(token                 "H_Strut.menu_paste_cmd")
  '(token                 "Listbox_Tuple.menu_paste_cmd")
  '(token                 "Listdropentry.menu_paste_cmd")
  '(token                 "Listdropspinner.menu_paste_cmd")
  '(token                 "Listspinner.menu_paste_cmd")
  '(token                 "Message_Window.menu_paste_cmd")
  '(token                 "Multicombobox.menu_paste_cmd")
  '(token                 "Multicombobox_X.menu_paste_cmd")
  '(token                 "Notebook.menu_paste_cmd")
  '(token                 "Num_Spinner.menu_paste_cmd")
  '(token                 "Progress_Gauge.menu_paste_cmd")
  '(token                 "Progress_Gauge_T.menu_paste_cmd")
  '(token                 "Scrolled_Listbox.menu_paste_cmd")
  '(token                 "Scrolled_Text.menu_paste_cmd")
  '(token                 "Slide_Show.menu_paste_cmd")
  '(token                 "Statuslabel.menu_paste_cmd")
  '(token                 "Statustext.menu_paste_cmd")
  '(token                 "Tabbed_Notebook.menu_paste_cmd")
  '(token                 "Up_Down_Button.menu_paste_cmd")
  '(token                 "V_Panedwindow.menu_paste_cmd")
  '(token                 "V_Panedwindow.H_Separator.menu_paste_cmd")
  '(token                 "V_Scrollable.menu_paste_cmd")
  '(token                 "V_Separator.menu_paste_cmd")
  '(token                 "V_Strut.menu_paste_cmd")
  '(token                 "_C_Frame.menu_paste_cmd")
  '(token                 "_Combobox.menu_paste_cmd")
  '(token                 "_Combobox.Scrolled_Listbox.menu_paste_cmd")
  '(token                 "_Listdrop.menu_paste_cmd")
  '(token                 "_Listspinner.menu_paste_cmd")
  '(token                 "_Panedwindow.menu_paste_cmd")
  '(token                 "_Scrollable.menu_paste_cmd")
  '(token                 "_Separator.menu_paste_cmd")
  '(token                 "_Spinner.menu_paste_cmd")
  '(token                 "_Spinnerentry.menu_paste_cmd")
  '(token                 "_Statusframe.menu_paste_cmd")
  '(replacement           "menu_paste_cmd (««CT_TK_mixin.menu_paste_cmd:event»»)")
;;; menu_paste_cmd(event)
)

(lse-define-fill-in "Wm.minsize:width" 
  '(description           "Argument 1 of Wm.minsize (default = None)")
  '(leading               ",")
;;; Wm.minsize:width
)

(lse-define-fill-in "Wm.minsize:height" 
  '(description           "Argument 2 of Wm.minsize (default = None)")
  '(leading               ",")
;;; Wm.minsize:height
)

(lse-define-fill-in "minsize(width,height)" 
  '(token)
  '(token                 "Balloon.minsize")
  '(token                 "Progress_Gauge_T.minsize")
  '(token                 "Tk.minsize")
  '(token                 "Toplevel.minsize")
  '(token                 "Wm.minsize")
  '(replacement           "minsize (««Wm.minsize:width»», ««Wm.minsize:height»»)")
;;; minsize(width,height)
)

(lse-define-fill-in "_Listbox_Tuple.mouse_finish:event" 
  '(description           "Argument 1 of _Listbox_Tuple.mouse_finish (default = None)")
  '(leading               ",")
;;; _Listbox_Tuple.mouse_finish:event
)

(lse-define-fill-in "mouse_finish(event)" 
  '(token)
  '(token                 "Combo_Tuple.mouse_finish")
  '(token                 "Combo_Tuple_X.mouse_finish")
  '(token                 "Listbox_Tuple.mouse_finish")
  '(token                 "_Listbox_Tuple.mouse_finish")
  '(replacement           "mouse_finish (««_Listbox_Tuple.mouse_finish:event»»)")
;;; mouse_finish(event)
)

(lse-define-fill-in "C_Listbox.mouse_focus:event" 
  '(description           "Argument 1 of C_Listbox.mouse_focus (default = None)")
  '(leading               ",")
;;; C_Listbox.mouse_focus:event
)

(lse-define-fill-in "mouse_focus(event)" 
  '(token)
  '(token                 "C_Listbox.mouse_focus")
  '(token                 "Scrolled_Listbox.mouse_focus")
  '(token                 "_Combobox.Scrolled_Listbox.mouse_focus")
  '(replacement           "mouse_focus (««C_Listbox.mouse_focus:event»»)")
;;; mouse_focus(event)
)

(lse-define-fill-in "C_Listbox.mouse_select:event" 
  '(description           "Argument 1 of C_Listbox.mouse_select (default = None)")
  '(leading               ",")
;;; C_Listbox.mouse_select:event
)

(lse-define-fill-in "mouse_select(event)" 
  '(token)
  '(token                 "C_Listbox.mouse_select")
  '(token                 "Combo_Entry.mouse_select")
  '(token                 "Scrolled_Listbox.mouse_select")
  '(token                 "_Combobox.Scrolled_Listbox.mouse_select")
  '(token                 "_Listbox_Tuple.mouse_select")
  '(token                 "_Listdrop.mouse_select")
  '(replacement           "mouse_select (««C_Listbox.mouse_select:event»»)")
;;; mouse_select(event)
)

(lse-define-fill-in "Canvas.move:args" 
  '(description           "Argument 1 of Canvas.move")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.move:args
)

(lse-define-fill-in "move(args)" 
  '(token)
  '(token                 "Canvas.move")
  '(replacement           "move (««Canvas.move:args»»···)")
;;; move(args)
)

(lse-define-fill-in "Group.move:xAmount" 
  '(description           "Argument 1 of Group.move")
  '(leading               ",")
;;; Group.move:xAmount
)

(lse-define-fill-in "Group.move:yAmount" 
  '(description           "Argument 2 of Group.move")
  '(leading               ",")
;;; Group.move:yAmount
)

(lse-define-fill-in "move(xAmount,yAmount)" 
  '(token)
  '(token                 "Group.move")
  '(replacement           "move («Group.move:xAmount», «Group.move:yAmount»)")
;;; move(xAmount,yAmount)
)

(lse-define-fill-in "CanvasItem.move:xamount" 
  '(description           "Argument 1 of CanvasItem.move")
  '(leading               ",")
;;; CanvasItem.move:xamount
)

(lse-define-fill-in "CanvasItem.move:yamount" 
  '(description           "Argument 2 of CanvasItem.move")
  '(leading               ",")
;;; CanvasItem.move:yamount
)

(lse-define-fill-in "move(xamount,yamount)" 
  '(token)
  '(token                 "Arc.move")
  '(token                 "Bitmap.move")
  '(token                 "CanvasItem.move")
  '(token                 "CanvasText.move")
  '(token                 "ImageItem.move")
  '(token                 "Line.move")
  '(token                 "Oval.move")
  '(token                 "Polygon.move")
  '(token                 "Rectangle.move")
  '(token                 "Window.move")
  '(replacement           "move («CanvasItem.move:xamount», «CanvasItem.move:yamount»)")
;;; move(xamount,yamount)
)

(lse-define-fill-in "Misc.nametowidget:name" 
  '(description           "Argument 1 of Misc.nametowidget")
  '(leading               ",")
;;; Misc.nametowidget:name
)

(lse-define-fill-in "nametowidget(name)" 
  '(token)
  '(token                 "Balloon.nametowidget")
  '(token                 "BaseWidget.nametowidget")
  '(token                 "Button.nametowidget")
  '(token                 "Buttonbox.nametowidget")
  '(token                 "C_Entry.nametowidget")
  '(token                 "C_Frame.nametowidget")
  '(token                 "C_Listbox.nametowidget")
  '(token                 "C_Menu.nametowidget")
  '(token                 "C_Text.nametowidget")
  '(token                 "Canvas.nametowidget")
  '(token                 "Checkbutton.nametowidget")
  '(token                 "Combo_Tuple.nametowidget")
  '(token                 "Combo_Tuple_X.nametowidget")
  '(token                 "Combobox.nametowidget")
  '(token                 "Entry.nametowidget")
  '(token                 "Entrybox.nametowidget")
  '(token                 "Filename_Entry.nametowidget")
  '(token                 "Frame.nametowidget")
  '(token                 "H_Panedwindow.nametowidget")
  '(token                 "H_Panedwindow.V_Separator.nametowidget")
  '(token                 "H_Scrollable.nametowidget")
  '(token                 "H_Separator.nametowidget")
  '(token                 "H_Strut.nametowidget")
  '(token                 "Label.nametowidget")
  '(token                 "Listbox.nametowidget")
  '(token                 "Listbox_Tuple.nametowidget")
  '(token                 "Listdropentry.nametowidget")
  '(token                 "Listdropspinner.nametowidget")
  '(token                 "Listspinner.nametowidget")
  '(token                 "Menu.nametowidget")
  '(token                 "Menubutton.nametowidget")
  '(token                 "Message.nametowidget")
  '(token                 "Message_Window.nametowidget")
  '(token                 "Misc.nametowidget")
  '(token                 "Multicombobox.nametowidget")
  '(token                 "Multicombobox_X.nametowidget")
  '(token                 "Notebook.nametowidget")
  '(token                 "Num_Spinner.nametowidget")
  '(token                 "OptionMenu.nametowidget")
  '(token                 "Progress_Gauge.nametowidget")
  '(token                 "Progress_Gauge_T.nametowidget")
  '(token                 "Radiobutton.nametowidget")
  '(token                 "Scale.nametowidget")
  '(token                 "Scrollbar.nametowidget")
  '(token                 "Scrolled_Listbox.nametowidget")
  '(token                 "Scrolled_Text.nametowidget")
  '(token                 "Slide_Show.nametowidget")
  '(token                 "Statuslabel.nametowidget")
  '(token                 "Statuslabel.Label.nametowidget")
  '(token                 "Statustext.nametowidget")
  '(token                 "Statustext.Text.nametowidget")
  '(token                 "Studbutton.nametowidget")
  '(token                 "Tabbed_Notebook.nametowidget")
  '(token                 "Text.nametowidget")
  '(token                 "Tk.nametowidget")
  '(token                 "Toplevel.nametowidget")
  '(token                 "Tributton.nametowidget")
  '(token                 "Up_Down_Button.nametowidget")
  '(token                 "V_Panedwindow.nametowidget")
  '(token                 "V_Panedwindow.H_Separator.nametowidget")
  '(token                 "V_Scrollable.nametowidget")
  '(token                 "V_Separator.nametowidget")
  '(token                 "V_Strut.nametowidget")
  '(token                 "Widget.nametowidget")
  '(token                 "_C_Frame.nametowidget")
  '(token                 "_Combobox.Scrolled_Listbox.nametowidget")
  '(token                 "_Panedwindow.nametowidget")
  '(token                 "_Scrollable.nametowidget")
  '(token                 "_Separator.nametowidget")
  '(token                 "_Spinnerentry.nametowidget")
  '(token                 "_Statusframe.nametowidget")
  '(replacement           "nametowidget («Misc.nametowidget:name»)")
;;; nametowidget(name)
)

(lse-define-fill-in "Listbox.nearest:y" 
  '(description           "Argument 1 of Listbox.nearest")
  '(leading               ",")
;;; Listbox.nearest:y
)

(lse-define-fill-in "nearest(y)" 
  '(token)
  '(token                 "Listbox.nearest")
  '(replacement           "nearest («Listbox.nearest:y»)")
;;; nearest(y)
)

(lse-define-fill-in "Notebook.new_page:name" 
  '(description           "Add a page named `name' to the notebook.")
  '(leading               ",")
;;; Notebook.new_page:name
)

(lse-define-fill-in "new_page(name)" 
  '(description           "Add a page named `name' to the notebook.")
  '(token)
  '(token                 "Notebook.new_page")
  '(token                 "Tabbed_Notebook.new_page")
  '(replacement           "new_page («Notebook.new_page:name»)")
;;; new_page(name)
)

(lse-define-fill-in "Tabbed_Notebook.new_page:name" 
  '(description           "Add a page named `name' to the notebook.")
  '(leading               ",")
;;; Tabbed_Notebook.new_page:name
)

(lse-define-fill-in "Tabbed_Notebook.new_page:state" 
  '(description           "Argument 2 of Tabbed_Notebook.new_page (default = normal)")
  '(leading               ",")
;;; Tabbed_Notebook.new_page:state
)

(lse-define-fill-in "new_page(name,state)" 
  '(description           "Add a page named `name' to the notebook.")
  '(token)
  '(token                 "Tabbed_Notebook.new_page")
  '(replacement           "new_page («Tabbed_Notebook.new_page:name», ««Tabbed_Notebook.new_page:state»»)")
;;; new_page(name,state)
)

(lse-define-fill-in "_Spinner.next:event" 
  '(description           "Argument 1 of _Spinner.next (default = None)")
  '(leading               ",")
;;; _Spinner.next:event
)

(lse-define-fill-in "next(event)" 
  '(token)
  '(token                 "Listdropspinner.next")
  '(token                 "Listspinner.next")
  '(token                 "Num_Spinner.next")
  '(token                 "Slide_Show.next")
  '(token                 "_Spinner.next")
  '(token                 "_Spinnerentry.next")
  '(replacement           "next (««_Spinner.next:event»»)")
;;; next(event)
)

(lse-define-fill-in "C_Listbox.next_index:event" 
  '(description           "Argument 1 of C_Listbox.next_index")
  '(leading               ",")
;;; C_Listbox.next_index:event
)

(lse-define-fill-in "next_index(event)" 
  '(token)
  '(token                 "C_Listbox.next_index")
  '(token                 "Scrolled_Listbox.next_index")
  '(token                 "_Combobox.Scrolled_Listbox.next_index")
  '(replacement           "next_index («C_Listbox.next_index:event»)")
;;; next_index(event)
)

(lse-define-fill-in "normal_cursor()" 
  '(token)
  '(token                 "C_Text.normal_cursor")
  '(token                 "Message_Window.normal_cursor")
  '(token                 "Scrolled_Text.normal_cursor")
  '(token                 "_Statusframe.normal_cursor")
  '(replacement           "normal_cursor ()")
;;; normal_cursor()
)

(lse-define-fill-in "CT_TK_mixin.normal_cursor:widget" 
  '(description           "Argument 1 of CT_TK_mixin.normal_cursor (default = None)")
  '(leading               ",")
;;; CT_TK_mixin.normal_cursor:widget
)

(lse-define-fill-in "normal_cursor(widget)" 
  '(description           "Display normal cursor.")
  '(token)
  '(token                 "Balloon.normal_cursor")
  '(token                 "Buttonbox.normal_cursor")
  '(token                 "CT_TK_mixin.normal_cursor")
  '(token                 "C_Entry.normal_cursor")
  '(token                 "C_Frame.normal_cursor")
  '(token                 "C_Listbox.normal_cursor")
  '(token                 "C_Menu.normal_cursor")
  '(token                 "C_Text.normal_cursor")
  '(token                 "Combo_Tuple.normal_cursor")
  '(token                 "Combo_Tuple_X.normal_cursor")
  '(token                 "Combobox.normal_cursor")
  '(token                 "Entrybox.normal_cursor")
  '(token                 "Filename_Entry.normal_cursor")
  '(token                 "H_Panedwindow.normal_cursor")
  '(token                 "H_Panedwindow.V_Separator.normal_cursor")
  '(token                 "H_Scrollable.normal_cursor")
  '(token                 "H_Separator.normal_cursor")
  '(token                 "H_Strut.normal_cursor")
  '(token                 "Listbox_Tuple.normal_cursor")
  '(token                 "Listdropentry.normal_cursor")
  '(token                 "Listdropspinner.normal_cursor")
  '(token                 "Listspinner.normal_cursor")
  '(token                 "Message_Window.normal_cursor")
  '(token                 "Multicombobox.normal_cursor")
  '(token                 "Multicombobox_X.normal_cursor")
  '(token                 "Notebook.normal_cursor")
  '(token                 "Num_Spinner.normal_cursor")
  '(token                 "Progress_Gauge.normal_cursor")
  '(token                 "Progress_Gauge_T.normal_cursor")
  '(token                 "Scrolled_Listbox.normal_cursor")
  '(token                 "Scrolled_Text.normal_cursor")
  '(token                 "Slide_Show.normal_cursor")
  '(token                 "Statuslabel.normal_cursor")
  '(token                 "Statustext.normal_cursor")
  '(token                 "Tabbed_Notebook.normal_cursor")
  '(token                 "Up_Down_Button.normal_cursor")
  '(token                 "V_Panedwindow.normal_cursor")
  '(token                 "V_Panedwindow.H_Separator.normal_cursor")
  '(token                 "V_Scrollable.normal_cursor")
  '(token                 "V_Separator.normal_cursor")
  '(token                 "V_Strut.normal_cursor")
  '(token                 "_C_Frame.normal_cursor")
  '(token                 "_Combobox.normal_cursor")
  '(token                 "_Combobox.Scrolled_Listbox.normal_cursor")
  '(token                 "_Listdrop.normal_cursor")
  '(token                 "_Listspinner.normal_cursor")
  '(token                 "_Panedwindow.normal_cursor")
  '(token                 "_Scrollable.normal_cursor")
  '(token                 "_Separator.normal_cursor")
  '(token                 "_Spinner.normal_cursor")
  '(token                 "_Spinnerentry.normal_cursor")
  '(token                 "_Statusframe.normal_cursor")
  '(replacement           "normal_cursor (««CT_TK_mixin.normal_cursor:widget»»)")
;;; normal_cursor(widget)
)

(lse-define-fill-in "CT_TK_mixin.num_opt_val:name" 
  '(description           "Argument 1 of CT_TK_mixin.num_opt_val")
  '(leading               ",")
;;; CT_TK_mixin.num_opt_val:name
)

(lse-define-fill-in "CT_TK_mixin.num_opt_val:default" 
  '(description           "Argument 2 of CT_TK_mixin.num_opt_val")
  '(leading               ",")
;;; CT_TK_mixin.num_opt_val:default
)

(lse-define-fill-in "CT_TK_mixin.num_opt_val:className" 
  '(description           "Argument 3 of CT_TK_mixin.num_opt_val (default = None)")
  '(leading               ",")
;;; CT_TK_mixin.num_opt_val:className
)

(lse-define-fill-in "CT_TK_mixin.num_opt_val:widget" 
  '(description           "Argument 4 of CT_TK_mixin.num_opt_val (default = None)")
  '(leading               ",")
;;; CT_TK_mixin.num_opt_val:widget
)

(lse-define-fill-in "num_opt_val(name,default,className,widget)" 
  '(token)
  '(token                 "Balloon.num_opt_val")
  '(token                 "Buttonbox.num_opt_val")
  '(token                 "CT_TK_mixin.num_opt_val")
  '(token                 "C_Entry.num_opt_val")
  '(token                 "C_Frame.num_opt_val")
  '(token                 "C_Listbox.num_opt_val")
  '(token                 "C_Menu.num_opt_val")
  '(token                 "C_Text.num_opt_val")
  '(token                 "Combo_Tuple.num_opt_val")
  '(token                 "Combo_Tuple_X.num_opt_val")
  '(token                 "Combobox.num_opt_val")
  '(token                 "Entrybox.num_opt_val")
  '(token                 "Filename_Entry.num_opt_val")
  '(token                 "H_Panedwindow.num_opt_val")
  '(token                 "H_Panedwindow.V_Separator.num_opt_val")
  '(token                 "H_Scrollable.num_opt_val")
  '(token                 "H_Separator.num_opt_val")
  '(token                 "H_Strut.num_opt_val")
  '(token                 "Listbox_Tuple.num_opt_val")
  '(token                 "Listdropentry.num_opt_val")
  '(token                 "Listdropspinner.num_opt_val")
  '(token                 "Listspinner.num_opt_val")
  '(token                 "Message_Window.num_opt_val")
  '(token                 "Multicombobox.num_opt_val")
  '(token                 "Multicombobox_X.num_opt_val")
  '(token                 "Notebook.num_opt_val")
  '(token                 "Num_Spinner.num_opt_val")
  '(token                 "Progress_Gauge.num_opt_val")
  '(token                 "Progress_Gauge_T.num_opt_val")
  '(token                 "Scrolled_Listbox.num_opt_val")
  '(token                 "Scrolled_Text.num_opt_val")
  '(token                 "Slide_Show.num_opt_val")
  '(token                 "Statuslabel.num_opt_val")
  '(token                 "Statustext.num_opt_val")
  '(token                 "Tabbed_Notebook.num_opt_val")
  '(token                 "Up_Down_Button.num_opt_val")
  '(token                 "V_Panedwindow.num_opt_val")
  '(token                 "V_Panedwindow.H_Separator.num_opt_val")
  '(token                 "V_Scrollable.num_opt_val")
  '(token                 "V_Separator.num_opt_val")
  '(token                 "V_Strut.num_opt_val")
  '(token                 "_C_Frame.num_opt_val")
  '(token                 "_Combobox.num_opt_val")
  '(token                 "_Combobox.Scrolled_Listbox.num_opt_val")
  '(token                 "_Listdrop.num_opt_val")
  '(token                 "_Listspinner.num_opt_val")
  '(token                 "_Panedwindow.num_opt_val")
  '(token                 "_Scrollable.num_opt_val")
  '(token                 "_Separator.num_opt_val")
  '(token                 "_Spinner.num_opt_val")
  '(token                 "_Spinnerentry.num_opt_val")
  '(token                 "_Statusframe.num_opt_val")
  '(replacement           "num_opt_val («CT_TK_mixin.num_opt_val:name», «CT_TK_mixin.num_opt_val:default», ««CT_TK_mixin.num_opt_val:className»», ««CT_TK_mixin.num_opt_val:widget»»)")
;;; num_opt_val(name,default,className,widget)
)

(lse-define-fill-in "Misc.option_add:pattern" 
  '(description           "Argument 1 of Misc.option_add")
  '(leading               ",")
;;; Misc.option_add:pattern
)

(lse-define-fill-in "Misc.option_add:value" 
  '(description           "Argument 2 of Misc.option_add")
  '(leading               ",")
;;; Misc.option_add:value
)

(lse-define-fill-in "Misc.option_add:priority" 
  '(description           "Argument 3 of Misc.option_add (default = None)")
  '(leading               ",")
;;; Misc.option_add:priority
)

(lse-define-fill-in "option_add(pattern,value,priority)" 
  '(token)
  '(token                 "Balloon.option_add")
  '(token                 "BaseWidget.option_add")
  '(token                 "Button.option_add")
  '(token                 "Buttonbox.option_add")
  '(token                 "C_Entry.option_add")
  '(token                 "C_Frame.option_add")
  '(token                 "C_Listbox.option_add")
  '(token                 "C_Menu.option_add")
  '(token                 "C_Text.option_add")
  '(token                 "Canvas.option_add")
  '(token                 "Checkbutton.option_add")
  '(token                 "Combo_Tuple.option_add")
  '(token                 "Combo_Tuple_X.option_add")
  '(token                 "Combobox.option_add")
  '(token                 "Entry.option_add")
  '(token                 "Entrybox.option_add")
  '(token                 "Filename_Entry.option_add")
  '(token                 "Frame.option_add")
  '(token                 "H_Panedwindow.option_add")
  '(token                 "H_Panedwindow.V_Separator.option_add")
  '(token                 "H_Scrollable.option_add")
  '(token                 "H_Separator.option_add")
  '(token                 "H_Strut.option_add")
  '(token                 "Label.option_add")
  '(token                 "Listbox.option_add")
  '(token                 "Listbox_Tuple.option_add")
  '(token                 "Listdropentry.option_add")
  '(token                 "Listdropspinner.option_add")
  '(token                 "Listspinner.option_add")
  '(token                 "Menu.option_add")
  '(token                 "Menubutton.option_add")
  '(token                 "Message.option_add")
  '(token                 "Message_Window.option_add")
  '(token                 "Misc.option_add")
  '(token                 "Multicombobox.option_add")
  '(token                 "Multicombobox_X.option_add")
  '(token                 "Notebook.option_add")
  '(token                 "Num_Spinner.option_add")
  '(token                 "OptionMenu.option_add")
  '(token                 "Progress_Gauge.option_add")
  '(token                 "Progress_Gauge_T.option_add")
  '(token                 "Radiobutton.option_add")
  '(token                 "Scale.option_add")
  '(token                 "Scrollbar.option_add")
  '(token                 "Scrolled_Listbox.option_add")
  '(token                 "Scrolled_Text.option_add")
  '(token                 "Slide_Show.option_add")
  '(token                 "Statuslabel.option_add")
  '(token                 "Statuslabel.Label.option_add")
  '(token                 "Statustext.option_add")
  '(token                 "Statustext.Text.option_add")
  '(token                 "Studbutton.option_add")
  '(token                 "Tabbed_Notebook.option_add")
  '(token                 "Text.option_add")
  '(token                 "Tk.option_add")
  '(token                 "Toplevel.option_add")
  '(token                 "Tributton.option_add")
  '(token                 "Up_Down_Button.option_add")
  '(token                 "V_Panedwindow.option_add")
  '(token                 "V_Panedwindow.H_Separator.option_add")
  '(token                 "V_Scrollable.option_add")
  '(token                 "V_Separator.option_add")
  '(token                 "V_Strut.option_add")
  '(token                 "Widget.option_add")
  '(token                 "_C_Frame.option_add")
  '(token                 "_Combobox.Scrolled_Listbox.option_add")
  '(token                 "_Panedwindow.option_add")
  '(token                 "_Scrollable.option_add")
  '(token                 "_Separator.option_add")
  '(token                 "_Spinnerentry.option_add")
  '(token                 "_Statusframe.option_add")
  '(replacement           "option_add («Misc.option_add:pattern», «Misc.option_add:value», ««Misc.option_add:priority»»)")
;;; option_add(pattern,value,priority)
)

(lse-define-fill-in "option_clear()" 
  '(token)
  '(token                 "Balloon.option_clear")
  '(token                 "BaseWidget.option_clear")
  '(token                 "Button.option_clear")
  '(token                 "Buttonbox.option_clear")
  '(token                 "C_Entry.option_clear")
  '(token                 "C_Frame.option_clear")
  '(token                 "C_Listbox.option_clear")
  '(token                 "C_Menu.option_clear")
  '(token                 "C_Text.option_clear")
  '(token                 "Canvas.option_clear")
  '(token                 "Checkbutton.option_clear")
  '(token                 "Combo_Tuple.option_clear")
  '(token                 "Combo_Tuple_X.option_clear")
  '(token                 "Combobox.option_clear")
  '(token                 "Entry.option_clear")
  '(token                 "Entrybox.option_clear")
  '(token                 "Filename_Entry.option_clear")
  '(token                 "Frame.option_clear")
  '(token                 "H_Panedwindow.option_clear")
  '(token                 "H_Panedwindow.V_Separator.option_clear")
  '(token                 "H_Scrollable.option_clear")
  '(token                 "H_Separator.option_clear")
  '(token                 "H_Strut.option_clear")
  '(token                 "Label.option_clear")
  '(token                 "Listbox.option_clear")
  '(token                 "Listbox_Tuple.option_clear")
  '(token                 "Listdropentry.option_clear")
  '(token                 "Listdropspinner.option_clear")
  '(token                 "Listspinner.option_clear")
  '(token                 "Menu.option_clear")
  '(token                 "Menubutton.option_clear")
  '(token                 "Message.option_clear")
  '(token                 "Message_Window.option_clear")
  '(token                 "Misc.option_clear")
  '(token                 "Multicombobox.option_clear")
  '(token                 "Multicombobox_X.option_clear")
  '(token                 "Notebook.option_clear")
  '(token                 "Num_Spinner.option_clear")
  '(token                 "OptionMenu.option_clear")
  '(token                 "Progress_Gauge.option_clear")
  '(token                 "Progress_Gauge_T.option_clear")
  '(token                 "Radiobutton.option_clear")
  '(token                 "Scale.option_clear")
  '(token                 "Scrollbar.option_clear")
  '(token                 "Scrolled_Listbox.option_clear")
  '(token                 "Scrolled_Text.option_clear")
  '(token                 "Slide_Show.option_clear")
  '(token                 "Statuslabel.option_clear")
  '(token                 "Statuslabel.Label.option_clear")
  '(token                 "Statustext.option_clear")
  '(token                 "Statustext.Text.option_clear")
  '(token                 "Studbutton.option_clear")
  '(token                 "Tabbed_Notebook.option_clear")
  '(token                 "Text.option_clear")
  '(token                 "Tk.option_clear")
  '(token                 "Toplevel.option_clear")
  '(token                 "Tributton.option_clear")
  '(token                 "Up_Down_Button.option_clear")
  '(token                 "V_Panedwindow.option_clear")
  '(token                 "V_Panedwindow.H_Separator.option_clear")
  '(token                 "V_Scrollable.option_clear")
  '(token                 "V_Separator.option_clear")
  '(token                 "V_Strut.option_clear")
  '(token                 "Widget.option_clear")
  '(token                 "_C_Frame.option_clear")
  '(token                 "_Combobox.Scrolled_Listbox.option_clear")
  '(token                 "_Panedwindow.option_clear")
  '(token                 "_Scrollable.option_clear")
  '(token                 "_Separator.option_clear")
  '(token                 "_Spinnerentry.option_clear")
  '(token                 "_Statusframe.option_clear")
  '(replacement           "option_clear ()")
;;; option_clear()
)

(lse-define-fill-in "Misc.option_get:name" 
  '(description           "Argument 1 of Misc.option_get")
  '(leading               ",")
;;; Misc.option_get:name
)

(lse-define-fill-in "Misc.option_get:className" 
  '(description           "Argument 2 of Misc.option_get")
  '(leading               ",")
;;; Misc.option_get:className
)

(lse-define-fill-in "option_get(name,className)" 
  '(token)
  '(token                 "Balloon.option_get")
  '(token                 "BaseWidget.option_get")
  '(token                 "Button.option_get")
  '(token                 "Buttonbox.option_get")
  '(token                 "C_Entry.option_get")
  '(token                 "C_Frame.option_get")
  '(token                 "C_Listbox.option_get")
  '(token                 "C_Menu.option_get")
  '(token                 "C_Text.option_get")
  '(token                 "Canvas.option_get")
  '(token                 "Checkbutton.option_get")
  '(token                 "Combo_Tuple.option_get")
  '(token                 "Combo_Tuple_X.option_get")
  '(token                 "Combobox.option_get")
  '(token                 "Entry.option_get")
  '(token                 "Entrybox.option_get")
  '(token                 "Filename_Entry.option_get")
  '(token                 "Frame.option_get")
  '(token                 "H_Panedwindow.option_get")
  '(token                 "H_Panedwindow.V_Separator.option_get")
  '(token                 "H_Scrollable.option_get")
  '(token                 "H_Separator.option_get")
  '(token                 "H_Strut.option_get")
  '(token                 "Label.option_get")
  '(token                 "Listbox.option_get")
  '(token                 "Listbox_Tuple.option_get")
  '(token                 "Listdropentry.option_get")
  '(token                 "Listdropspinner.option_get")
  '(token                 "Listspinner.option_get")
  '(token                 "Menu.option_get")
  '(token                 "Menubutton.option_get")
  '(token                 "Message.option_get")
  '(token                 "Message_Window.option_get")
  '(token                 "Misc.option_get")
  '(token                 "Multicombobox.option_get")
  '(token                 "Multicombobox_X.option_get")
  '(token                 "Notebook.option_get")
  '(token                 "Num_Spinner.option_get")
  '(token                 "OptionMenu.option_get")
  '(token                 "Progress_Gauge.option_get")
  '(token                 "Progress_Gauge_T.option_get")
  '(token                 "Radiobutton.option_get")
  '(token                 "Scale.option_get")
  '(token                 "Scrollbar.option_get")
  '(token                 "Scrolled_Listbox.option_get")
  '(token                 "Scrolled_Text.option_get")
  '(token                 "Slide_Show.option_get")
  '(token                 "Statuslabel.option_get")
  '(token                 "Statuslabel.Label.option_get")
  '(token                 "Statustext.option_get")
  '(token                 "Statustext.Text.option_get")
  '(token                 "Studbutton.option_get")
  '(token                 "Tabbed_Notebook.option_get")
  '(token                 "Text.option_get")
  '(token                 "Tk.option_get")
  '(token                 "Toplevel.option_get")
  '(token                 "Tributton.option_get")
  '(token                 "Up_Down_Button.option_get")
  '(token                 "V_Panedwindow.option_get")
  '(token                 "V_Panedwindow.H_Separator.option_get")
  '(token                 "V_Scrollable.option_get")
  '(token                 "V_Separator.option_get")
  '(token                 "V_Strut.option_get")
  '(token                 "Widget.option_get")
  '(token                 "_C_Frame.option_get")
  '(token                 "_Combobox.Scrolled_Listbox.option_get")
  '(token                 "_Panedwindow.option_get")
  '(token                 "_Scrollable.option_get")
  '(token                 "_Separator.option_get")
  '(token                 "_Spinnerentry.option_get")
  '(token                 "_Statusframe.option_get")
  '(replacement           "option_get («Misc.option_get:name», «Misc.option_get:className»)")
;;; option_get(name,className)
)

(lse-define-fill-in "Misc.option_readfile:fileName" 
  '(description           "Argument 1 of Misc.option_readfile")
  '(leading               ",")
;;; Misc.option_readfile:fileName
)

(lse-define-fill-in "Misc.option_readfile:priority" 
  '(description           "Argument 2 of Misc.option_readfile (default = None)")
  '(leading               ",")
;;; Misc.option_readfile:priority
)

(lse-define-fill-in "option_readfile(fileName,priority)" 
  '(token)
  '(token                 "Balloon.option_readfile")
  '(token                 "BaseWidget.option_readfile")
  '(token                 "Button.option_readfile")
  '(token                 "Buttonbox.option_readfile")
  '(token                 "C_Entry.option_readfile")
  '(token                 "C_Frame.option_readfile")
  '(token                 "C_Listbox.option_readfile")
  '(token                 "C_Menu.option_readfile")
  '(token                 "C_Text.option_readfile")
  '(token                 "Canvas.option_readfile")
  '(token                 "Checkbutton.option_readfile")
  '(token                 "Combo_Tuple.option_readfile")
  '(token                 "Combo_Tuple_X.option_readfile")
  '(token                 "Combobox.option_readfile")
  '(token                 "Entry.option_readfile")
  '(token                 "Entrybox.option_readfile")
  '(token                 "Filename_Entry.option_readfile")
  '(token                 "Frame.option_readfile")
  '(token                 "H_Panedwindow.option_readfile")
  '(token                 "H_Panedwindow.V_Separator.option_readfile")
  '(token                 "H_Scrollable.option_readfile")
  '(token                 "H_Separator.option_readfile")
  '(token                 "H_Strut.option_readfile")
  '(token                 "Label.option_readfile")
  '(token                 "Listbox.option_readfile")
  '(token                 "Listbox_Tuple.option_readfile")
  '(token                 "Listdropentry.option_readfile")
  '(token                 "Listdropspinner.option_readfile")
  '(token                 "Listspinner.option_readfile")
  '(token                 "Menu.option_readfile")
  '(token                 "Menubutton.option_readfile")
  '(token                 "Message.option_readfile")
  '(token                 "Message_Window.option_readfile")
  '(token                 "Misc.option_readfile")
  '(token                 "Multicombobox.option_readfile")
  '(token                 "Multicombobox_X.option_readfile")
  '(token                 "Notebook.option_readfile")
  '(token                 "Num_Spinner.option_readfile")
  '(token                 "OptionMenu.option_readfile")
  '(token                 "Progress_Gauge.option_readfile")
  '(token                 "Progress_Gauge_T.option_readfile")
  '(token                 "Radiobutton.option_readfile")
  '(token                 "Scale.option_readfile")
  '(token                 "Scrollbar.option_readfile")
  '(token                 "Scrolled_Listbox.option_readfile")
  '(token                 "Scrolled_Text.option_readfile")
  '(token                 "Slide_Show.option_readfile")
  '(token                 "Statuslabel.option_readfile")
  '(token                 "Statuslabel.Label.option_readfile")
  '(token                 "Statustext.option_readfile")
  '(token                 "Statustext.Text.option_readfile")
  '(token                 "Studbutton.option_readfile")
  '(token                 "Tabbed_Notebook.option_readfile")
  '(token                 "Text.option_readfile")
  '(token                 "Tk.option_readfile")
  '(token                 "Toplevel.option_readfile")
  '(token                 "Tributton.option_readfile")
  '(token                 "Up_Down_Button.option_readfile")
  '(token                 "V_Panedwindow.option_readfile")
  '(token                 "V_Panedwindow.H_Separator.option_readfile")
  '(token                 "V_Scrollable.option_readfile")
  '(token                 "V_Separator.option_readfile")
  '(token                 "V_Strut.option_readfile")
  '(token                 "Widget.option_readfile")
  '(token                 "_C_Frame.option_readfile")
  '(token                 "_Combobox.Scrolled_Listbox.option_readfile")
  '(token                 "_Panedwindow.option_readfile")
  '(token                 "_Scrollable.option_readfile")
  '(token                 "_Separator.option_readfile")
  '(token                 "_Spinnerentry.option_readfile")
  '(token                 "_Statusframe.option_readfile")
  '(replacement           "option_readfile («Misc.option_readfile:fileName», ««Misc.option_readfile:priority»»)")
;;; option_readfile(fileName,priority)
)

(lse-define-fill-in "CT_TK_mixin.option_value:name" 
  '(description           "Return value for option `name' from TK option database or `default'")
  '(leading               ",")
;;; CT_TK_mixin.option_value:name
)

(lse-define-fill-in "CT_TK_mixin.option_value:default" 
  '(description           "Return value for option `name' from TK option database or `default'")
  '(leading               ",")
;;; CT_TK_mixin.option_value:default
)

(lse-define-fill-in "CT_TK_mixin.option_value:className" 
  '(description           "Argument 3 of CT_TK_mixin.option_value (default = None)")
  '(leading               ",")
;;; CT_TK_mixin.option_value:className
)

(lse-define-fill-in "CT_TK_mixin.option_value:widget" 
  '(description           "Argument 4 of CT_TK_mixin.option_value (default = None)")
  '(leading               ",")
;;; CT_TK_mixin.option_value:widget
)

(lse-define-fill-in "option_value(name,default,className,widget)" 
  '(description           "Return value for option `name' from TK option database or `default'")
  '(token)
  '(token                 "Balloon.option_value")
  '(token                 "Buttonbox.option_value")
  '(token                 "CT_TK_mixin.option_value")
  '(token                 "C_Entry.option_value")
  '(token                 "C_Frame.option_value")
  '(token                 "C_Listbox.option_value")
  '(token                 "C_Menu.option_value")
  '(token                 "C_Text.option_value")
  '(token                 "Combo_Tuple.option_value")
  '(token                 "Combo_Tuple_X.option_value")
  '(token                 "Combobox.option_value")
  '(token                 "Entrybox.option_value")
  '(token                 "Filename_Entry.option_value")
  '(token                 "H_Panedwindow.option_value")
  '(token                 "H_Panedwindow.V_Separator.option_value")
  '(token                 "H_Scrollable.option_value")
  '(token                 "H_Separator.option_value")
  '(token                 "H_Strut.option_value")
  '(token                 "Listbox_Tuple.option_value")
  '(token                 "Listdropentry.option_value")
  '(token                 "Listdropspinner.option_value")
  '(token                 "Listspinner.option_value")
  '(token                 "Message_Window.option_value")
  '(token                 "Multicombobox.option_value")
  '(token                 "Multicombobox_X.option_value")
  '(token                 "Notebook.option_value")
  '(token                 "Num_Spinner.option_value")
  '(token                 "Progress_Gauge.option_value")
  '(token                 "Progress_Gauge_T.option_value")
  '(token                 "Scrolled_Listbox.option_value")
  '(token                 "Scrolled_Text.option_value")
  '(token                 "Slide_Show.option_value")
  '(token                 "Statuslabel.option_value")
  '(token                 "Statustext.option_value")
  '(token                 "Tabbed_Notebook.option_value")
  '(token                 "Up_Down_Button.option_value")
  '(token                 "V_Panedwindow.option_value")
  '(token                 "V_Panedwindow.H_Separator.option_value")
  '(token                 "V_Scrollable.option_value")
  '(token                 "V_Separator.option_value")
  '(token                 "V_Strut.option_value")
  '(token                 "_C_Frame.option_value")
  '(token                 "_Combobox.option_value")
  '(token                 "_Combobox.Scrolled_Listbox.option_value")
  '(token                 "_Listdrop.option_value")
  '(token                 "_Listspinner.option_value")
  '(token                 "_Panedwindow.option_value")
  '(token                 "_Scrollable.option_value")
  '(token                 "_Separator.option_value")
  '(token                 "_Spinner.option_value")
  '(token                 "_Spinnerentry.option_value")
  '(token                 "_Statusframe.option_value")
  '(replacement           "option_value («CT_TK_mixin.option_value:name», «CT_TK_mixin.option_value:default», ««CT_TK_mixin.option_value:className»», ««CT_TK_mixin.option_value:widget»»)")
;;; option_value(name,default,className,widget)
)

(lse-define-fill-in "Wm.overrideredirect:boolean" 
  '(description           "Argument 1 of Wm.overrideredirect (default = None)")
  '(leading               ",")
;;; Wm.overrideredirect:boolean
)

(lse-define-fill-in "overrideredirect(boolean)" 
  '(token)
  '(token                 "Balloon.overrideredirect")
  '(token                 "Progress_Gauge_T.overrideredirect")
  '(token                 "Tk.overrideredirect")
  '(token                 "Toplevel.overrideredirect")
  '(token                 "Wm.overrideredirect")
  '(replacement           "overrideredirect (««Wm.overrideredirect:boolean»»)")
;;; overrideredirect(boolean)
)

(lse-define-fill-in "Pack.pack:cnf" 
  '(description           "Argument 1 of Pack.pack (default = {})")
  '(leading               ",")
;;; Pack.pack:cnf
)

(lse-define-fill-in "pack(cnf,kw)" 
  '(token)
  '(token                 "Button.pack")
  '(token                 "Buttonbox.pack")
  '(token                 "C_Entry.pack")
  '(token                 "C_Frame.pack")
  '(token                 "C_Listbox.pack")
  '(token                 "C_Menu.pack")
  '(token                 "C_Text.pack")
  '(token                 "Canvas.pack")
  '(token                 "Checkbutton.pack")
  '(token                 "Combo_Tuple.pack")
  '(token                 "Combo_Tuple_X.pack")
  '(token                 "Combobox.pack")
  '(token                 "Entry.pack")
  '(token                 "Entrybox.pack")
  '(token                 "Filename_Entry.pack")
  '(token                 "Frame.pack")
  '(token                 "H_Panedwindow.pack")
  '(token                 "H_Panedwindow.V_Separator.pack")
  '(token                 "H_Scrollable.pack")
  '(token                 "H_Separator.pack")
  '(token                 "H_Strut.pack")
  '(token                 "Label.pack")
  '(token                 "Listbox.pack")
  '(token                 "Listbox_Tuple.pack")
  '(token                 "Listdropentry.pack")
  '(token                 "Listdropspinner.pack")
  '(token                 "Listspinner.pack")
  '(token                 "Menu.pack")
  '(token                 "Menubutton.pack")
  '(token                 "Message.pack")
  '(token                 "Message_Window.pack")
  '(token                 "Multicombobox.pack")
  '(token                 "Multicombobox_X.pack")
  '(token                 "Notebook.pack")
  '(token                 "Num_Spinner.pack")
  '(token                 "OptionMenu.pack")
  '(token                 "Pack.pack")
  '(token                 "Progress_Gauge.pack")
  '(token                 "Radiobutton.pack")
  '(token                 "Scale.pack")
  '(token                 "Scrollbar.pack")
  '(token                 "Scrolled_Listbox.pack")
  '(token                 "Scrolled_Text.pack")
  '(token                 "Slide_Show.pack")
  '(token                 "Statuslabel.pack")
  '(token                 "Statuslabel.Label.pack")
  '(token                 "Statustext.pack")
  '(token                 "Statustext.Text.pack")
  '(token                 "Studbutton.pack")
  '(token                 "Tabbed_Notebook.pack")
  '(token                 "Text.pack")
  '(token                 "Tributton.pack")
  '(token                 "Up_Down_Button.pack")
  '(token                 "V_Panedwindow.pack")
  '(token                 "V_Panedwindow.H_Separator.pack")
  '(token                 "V_Scrollable.pack")
  '(token                 "V_Separator.pack")
  '(token                 "V_Strut.pack")
  '(token                 "Widget.pack")
  '(token                 "_C_Frame.pack")
  '(token                 "_Combobox.Scrolled_Listbox.pack")
  '(token                 "_Panedwindow.pack")
  '(token                 "_Scrollable.pack")
  '(token                 "_Separator.pack")
  '(token                 "_Spinnerentry.pack")
  '(token                 "_Statusframe.pack")
  '(replacement           "pack (««Pack.pack:cnf»», ««py-named-arg»»···)")
;;; pack(cnf,kw)
)

(lse-define-fill-in "pack(kw)" 
  '(token)
  '(token                 "H_Panedwindow.V_Separator.pack")
  '(token                 "H_Separator.pack")
  '(token                 "V_Panedwindow.H_Separator.pack")
  '(token                 "V_Separator.pack")
  '(token                 "_Separator.pack")
  '(replacement           "pack (««py-named-arg»»···)")
;;; pack(kw)
)

(lse-define-fill-in "Pack.pack_configure:cnf" 
  '(description           "Argument 1 of Pack.pack_configure (default = {})")
  '(leading               ",")
;;; Pack.pack_configure:cnf
)

(lse-define-fill-in "pack_configure(cnf,kw)" 
  '(token)
  '(token                 "Button.pack_configure")
  '(token                 "Buttonbox.pack_configure")
  '(token                 "C_Entry.pack_configure")
  '(token                 "C_Frame.pack_configure")
  '(token                 "C_Listbox.pack_configure")
  '(token                 "C_Menu.pack_configure")
  '(token                 "C_Text.pack_configure")
  '(token                 "Canvas.pack_configure")
  '(token                 "Checkbutton.pack_configure")
  '(token                 "Combo_Tuple.pack_configure")
  '(token                 "Combo_Tuple_X.pack_configure")
  '(token                 "Combobox.pack_configure")
  '(token                 "Entry.pack_configure")
  '(token                 "Entrybox.pack_configure")
  '(token                 "Filename_Entry.pack_configure")
  '(token                 "Frame.pack_configure")
  '(token                 "H_Panedwindow.pack_configure")
  '(token                 "H_Panedwindow.V_Separator.pack_configure")
  '(token                 "H_Scrollable.pack_configure")
  '(token                 "H_Separator.pack_configure")
  '(token                 "H_Strut.pack_configure")
  '(token                 "Label.pack_configure")
  '(token                 "Listbox.pack_configure")
  '(token                 "Listbox_Tuple.pack_configure")
  '(token                 "Listdropentry.pack_configure")
  '(token                 "Listdropspinner.pack_configure")
  '(token                 "Listspinner.pack_configure")
  '(token                 "Menu.pack_configure")
  '(token                 "Menubutton.pack_configure")
  '(token                 "Message.pack_configure")
  '(token                 "Message_Window.pack_configure")
  '(token                 "Multicombobox.pack_configure")
  '(token                 "Multicombobox_X.pack_configure")
  '(token                 "Notebook.pack_configure")
  '(token                 "Num_Spinner.pack_configure")
  '(token                 "OptionMenu.pack_configure")
  '(token                 "Pack.pack_configure")
  '(token                 "Progress_Gauge.pack_configure")
  '(token                 "Radiobutton.pack_configure")
  '(token                 "Scale.pack_configure")
  '(token                 "Scrollbar.pack_configure")
  '(token                 "Scrolled_Listbox.pack_configure")
  '(token                 "Scrolled_Text.pack_configure")
  '(token                 "Slide_Show.pack_configure")
  '(token                 "Statuslabel.pack_configure")
  '(token                 "Statuslabel.Label.pack_configure")
  '(token                 "Statustext.pack_configure")
  '(token                 "Statustext.Text.pack_configure")
  '(token                 "Studbutton.pack_configure")
  '(token                 "Tabbed_Notebook.pack_configure")
  '(token                 "Text.pack_configure")
  '(token                 "Tributton.pack_configure")
  '(token                 "Up_Down_Button.pack_configure")
  '(token                 "V_Panedwindow.pack_configure")
  '(token                 "V_Panedwindow.H_Separator.pack_configure")
  '(token                 "V_Scrollable.pack_configure")
  '(token                 "V_Separator.pack_configure")
  '(token                 "V_Strut.pack_configure")
  '(token                 "Widget.pack_configure")
  '(token                 "_C_Frame.pack_configure")
  '(token                 "_Combobox.Scrolled_Listbox.pack_configure")
  '(token                 "_Panedwindow.pack_configure")
  '(token                 "_Scrollable.pack_configure")
  '(token                 "_Separator.pack_configure")
  '(token                 "_Spinnerentry.pack_configure")
  '(token                 "_Statusframe.pack_configure")
  '(replacement           "pack_configure (««Pack.pack_configure:cnf»», ««py-named-arg»»···)")
;;; pack_configure(cnf,kw)
)

(lse-define-fill-in "pack_forget()" 
  '(token)
  '(token                 "Button.pack_forget")
  '(token                 "Buttonbox.pack_forget")
  '(token                 "C_Entry.pack_forget")
  '(token                 "C_Frame.pack_forget")
  '(token                 "C_Listbox.pack_forget")
  '(token                 "C_Menu.pack_forget")
  '(token                 "C_Text.pack_forget")
  '(token                 "Canvas.pack_forget")
  '(token                 "Checkbutton.pack_forget")
  '(token                 "Combo_Tuple.pack_forget")
  '(token                 "Combo_Tuple_X.pack_forget")
  '(token                 "Combobox.pack_forget")
  '(token                 "Entry.pack_forget")
  '(token                 "Entrybox.pack_forget")
  '(token                 "Filename_Entry.pack_forget")
  '(token                 "Frame.pack_forget")
  '(token                 "H_Panedwindow.pack_forget")
  '(token                 "H_Panedwindow.V_Separator.pack_forget")
  '(token                 "H_Scrollable.pack_forget")
  '(token                 "H_Separator.pack_forget")
  '(token                 "H_Strut.pack_forget")
  '(token                 "Label.pack_forget")
  '(token                 "Listbox.pack_forget")
  '(token                 "Listbox_Tuple.pack_forget")
  '(token                 "Listdropentry.pack_forget")
  '(token                 "Listdropspinner.pack_forget")
  '(token                 "Listspinner.pack_forget")
  '(token                 "Menu.pack_forget")
  '(token                 "Menubutton.pack_forget")
  '(token                 "Message.pack_forget")
  '(token                 "Message_Window.pack_forget")
  '(token                 "Multicombobox.pack_forget")
  '(token                 "Multicombobox_X.pack_forget")
  '(token                 "Notebook.pack_forget")
  '(token                 "Num_Spinner.pack_forget")
  '(token                 "OptionMenu.pack_forget")
  '(token                 "Pack.pack_forget")
  '(token                 "Progress_Gauge.pack_forget")
  '(token                 "Radiobutton.pack_forget")
  '(token                 "Scale.pack_forget")
  '(token                 "Scrollbar.pack_forget")
  '(token                 "Scrolled_Listbox.pack_forget")
  '(token                 "Scrolled_Text.pack_forget")
  '(token                 "Slide_Show.pack_forget")
  '(token                 "Statuslabel.pack_forget")
  '(token                 "Statuslabel.Label.pack_forget")
  '(token                 "Statustext.pack_forget")
  '(token                 "Statustext.Text.pack_forget")
  '(token                 "Studbutton.pack_forget")
  '(token                 "Tabbed_Notebook.pack_forget")
  '(token                 "Text.pack_forget")
  '(token                 "Tributton.pack_forget")
  '(token                 "Up_Down_Button.pack_forget")
  '(token                 "V_Panedwindow.pack_forget")
  '(token                 "V_Panedwindow.H_Separator.pack_forget")
  '(token                 "V_Scrollable.pack_forget")
  '(token                 "V_Separator.pack_forget")
  '(token                 "V_Strut.pack_forget")
  '(token                 "Widget.pack_forget")
  '(token                 "_C_Frame.pack_forget")
  '(token                 "_Combobox.Scrolled_Listbox.pack_forget")
  '(token                 "_Panedwindow.pack_forget")
  '(token                 "_Scrollable.pack_forget")
  '(token                 "_Separator.pack_forget")
  '(token                 "_Spinnerentry.pack_forget")
  '(token                 "_Statusframe.pack_forget")
  '(replacement           "pack_forget ()")
;;; pack_forget()
)

(lse-define-fill-in "pack_info()" 
  '(token)
  '(token                 "Button.pack_info")
  '(token                 "Buttonbox.pack_info")
  '(token                 "C_Entry.pack_info")
  '(token                 "C_Frame.pack_info")
  '(token                 "C_Listbox.pack_info")
  '(token                 "C_Menu.pack_info")
  '(token                 "C_Text.pack_info")
  '(token                 "Canvas.pack_info")
  '(token                 "Checkbutton.pack_info")
  '(token                 "Combo_Tuple.pack_info")
  '(token                 "Combo_Tuple_X.pack_info")
  '(token                 "Combobox.pack_info")
  '(token                 "Entry.pack_info")
  '(token                 "Entrybox.pack_info")
  '(token                 "Filename_Entry.pack_info")
  '(token                 "Frame.pack_info")
  '(token                 "H_Panedwindow.pack_info")
  '(token                 "H_Panedwindow.V_Separator.pack_info")
  '(token                 "H_Scrollable.pack_info")
  '(token                 "H_Separator.pack_info")
  '(token                 "H_Strut.pack_info")
  '(token                 "Label.pack_info")
  '(token                 "Listbox.pack_info")
  '(token                 "Listbox_Tuple.pack_info")
  '(token                 "Listdropentry.pack_info")
  '(token                 "Listdropspinner.pack_info")
  '(token                 "Listspinner.pack_info")
  '(token                 "Menu.pack_info")
  '(token                 "Menubutton.pack_info")
  '(token                 "Message.pack_info")
  '(token                 "Message_Window.pack_info")
  '(token                 "Multicombobox.pack_info")
  '(token                 "Multicombobox_X.pack_info")
  '(token                 "Notebook.pack_info")
  '(token                 "Num_Spinner.pack_info")
  '(token                 "OptionMenu.pack_info")
  '(token                 "Pack.pack_info")
  '(token                 "Progress_Gauge.pack_info")
  '(token                 "Radiobutton.pack_info")
  '(token                 "Scale.pack_info")
  '(token                 "Scrollbar.pack_info")
  '(token                 "Scrolled_Listbox.pack_info")
  '(token                 "Scrolled_Text.pack_info")
  '(token                 "Slide_Show.pack_info")
  '(token                 "Statuslabel.pack_info")
  '(token                 "Statuslabel.Label.pack_info")
  '(token                 "Statustext.pack_info")
  '(token                 "Statustext.Text.pack_info")
  '(token                 "Studbutton.pack_info")
  '(token                 "Tabbed_Notebook.pack_info")
  '(token                 "Text.pack_info")
  '(token                 "Tributton.pack_info")
  '(token                 "Up_Down_Button.pack_info")
  '(token                 "V_Panedwindow.pack_info")
  '(token                 "V_Panedwindow.H_Separator.pack_info")
  '(token                 "V_Scrollable.pack_info")
  '(token                 "V_Separator.pack_info")
  '(token                 "V_Strut.pack_info")
  '(token                 "Widget.pack_info")
  '(token                 "_C_Frame.pack_info")
  '(token                 "_Combobox.Scrolled_Listbox.pack_info")
  '(token                 "_Panedwindow.pack_info")
  '(token                 "_Scrollable.pack_info")
  '(token                 "_Separator.pack_info")
  '(token                 "_Spinnerentry.pack_info")
  '(token                 "_Statusframe.pack_info")
  '(replacement           "pack_info ()")
;;; pack_info()
)

(lse-define-fill-in "Misc.pack_propagate:flag" 
  '(description           "Argument 1 of Misc.pack_propagate (default = ['_noarg_'])")
  '(leading               ",")
;;; Misc.pack_propagate:flag
)

(lse-define-fill-in "pack_propagate(flag)" 
  '(token)
  '(token                 "Balloon.pack_propagate")
  '(token                 "BaseWidget.pack_propagate")
  '(token                 "Button.pack_propagate")
  '(token                 "Buttonbox.pack_propagate")
  '(token                 "C_Entry.pack_propagate")
  '(token                 "C_Frame.pack_propagate")
  '(token                 "C_Listbox.pack_propagate")
  '(token                 "C_Menu.pack_propagate")
  '(token                 "C_Text.pack_propagate")
  '(token                 "Canvas.pack_propagate")
  '(token                 "Checkbutton.pack_propagate")
  '(token                 "Combo_Tuple.pack_propagate")
  '(token                 "Combo_Tuple_X.pack_propagate")
  '(token                 "Combobox.pack_propagate")
  '(token                 "Entry.pack_propagate")
  '(token                 "Entrybox.pack_propagate")
  '(token                 "Filename_Entry.pack_propagate")
  '(token                 "Frame.pack_propagate")
  '(token                 "H_Panedwindow.pack_propagate")
  '(token                 "H_Panedwindow.V_Separator.pack_propagate")
  '(token                 "H_Scrollable.pack_propagate")
  '(token                 "H_Separator.pack_propagate")
  '(token                 "H_Strut.pack_propagate")
  '(token                 "Label.pack_propagate")
  '(token                 "Listbox.pack_propagate")
  '(token                 "Listbox_Tuple.pack_propagate")
  '(token                 "Listdropentry.pack_propagate")
  '(token                 "Listdropspinner.pack_propagate")
  '(token                 "Listspinner.pack_propagate")
  '(token                 "Menu.pack_propagate")
  '(token                 "Menubutton.pack_propagate")
  '(token                 "Message.pack_propagate")
  '(token                 "Message_Window.pack_propagate")
  '(token                 "Misc.pack_propagate")
  '(token                 "Multicombobox.pack_propagate")
  '(token                 "Multicombobox_X.pack_propagate")
  '(token                 "Notebook.pack_propagate")
  '(token                 "Num_Spinner.pack_propagate")
  '(token                 "OptionMenu.pack_propagate")
  '(token                 "Pack.pack_propagate")
  '(token                 "Progress_Gauge.pack_propagate")
  '(token                 "Progress_Gauge_T.pack_propagate")
  '(token                 "Radiobutton.pack_propagate")
  '(token                 "Scale.pack_propagate")
  '(token                 "Scrollbar.pack_propagate")
  '(token                 "Scrolled_Listbox.pack_propagate")
  '(token                 "Scrolled_Text.pack_propagate")
  '(token                 "Slide_Show.pack_propagate")
  '(token                 "Statuslabel.pack_propagate")
  '(token                 "Statuslabel.Label.pack_propagate")
  '(token                 "Statustext.pack_propagate")
  '(token                 "Statustext.Text.pack_propagate")
  '(token                 "Studbutton.pack_propagate")
  '(token                 "Tabbed_Notebook.pack_propagate")
  '(token                 "Text.pack_propagate")
  '(token                 "Tk.pack_propagate")
  '(token                 "Toplevel.pack_propagate")
  '(token                 "Tributton.pack_propagate")
  '(token                 "Up_Down_Button.pack_propagate")
  '(token                 "V_Panedwindow.pack_propagate")
  '(token                 "V_Panedwindow.H_Separator.pack_propagate")
  '(token                 "V_Scrollable.pack_propagate")
  '(token                 "V_Separator.pack_propagate")
  '(token                 "V_Strut.pack_propagate")
  '(token                 "Widget.pack_propagate")
  '(token                 "_C_Frame.pack_propagate")
  '(token                 "_Combobox.Scrolled_Listbox.pack_propagate")
  '(token                 "_Panedwindow.pack_propagate")
  '(token                 "_Scrollable.pack_propagate")
  '(token                 "_Separator.pack_propagate")
  '(token                 "_Spinnerentry.pack_propagate")
  '(token                 "_Statusframe.pack_propagate")
  '(replacement           "pack_propagate (««Misc.pack_propagate:flag»»)")
;;; pack_propagate(flag)
)

(lse-define-fill-in "pack_slaves()" 
  '(token)
  '(token                 "Balloon.pack_slaves")
  '(token                 "BaseWidget.pack_slaves")
  '(token                 "Button.pack_slaves")
  '(token                 "Buttonbox.pack_slaves")
  '(token                 "C_Entry.pack_slaves")
  '(token                 "C_Frame.pack_slaves")
  '(token                 "C_Listbox.pack_slaves")
  '(token                 "C_Menu.pack_slaves")
  '(token                 "C_Text.pack_slaves")
  '(token                 "Canvas.pack_slaves")
  '(token                 "Checkbutton.pack_slaves")
  '(token                 "Combo_Tuple.pack_slaves")
  '(token                 "Combo_Tuple_X.pack_slaves")
  '(token                 "Combobox.pack_slaves")
  '(token                 "Entry.pack_slaves")
  '(token                 "Entrybox.pack_slaves")
  '(token                 "Filename_Entry.pack_slaves")
  '(token                 "Frame.pack_slaves")
  '(token                 "H_Panedwindow.pack_slaves")
  '(token                 "H_Panedwindow.V_Separator.pack_slaves")
  '(token                 "H_Scrollable.pack_slaves")
  '(token                 "H_Separator.pack_slaves")
  '(token                 "H_Strut.pack_slaves")
  '(token                 "Label.pack_slaves")
  '(token                 "Listbox.pack_slaves")
  '(token                 "Listbox_Tuple.pack_slaves")
  '(token                 "Listdropentry.pack_slaves")
  '(token                 "Listdropspinner.pack_slaves")
  '(token                 "Listspinner.pack_slaves")
  '(token                 "Menu.pack_slaves")
  '(token                 "Menubutton.pack_slaves")
  '(token                 "Message.pack_slaves")
  '(token                 "Message_Window.pack_slaves")
  '(token                 "Misc.pack_slaves")
  '(token                 "Multicombobox.pack_slaves")
  '(token                 "Multicombobox_X.pack_slaves")
  '(token                 "Notebook.pack_slaves")
  '(token                 "Num_Spinner.pack_slaves")
  '(token                 "OptionMenu.pack_slaves")
  '(token                 "Pack.pack_slaves")
  '(token                 "Progress_Gauge.pack_slaves")
  '(token                 "Progress_Gauge_T.pack_slaves")
  '(token                 "Radiobutton.pack_slaves")
  '(token                 "Scale.pack_slaves")
  '(token                 "Scrollbar.pack_slaves")
  '(token                 "Scrolled_Listbox.pack_slaves")
  '(token                 "Scrolled_Text.pack_slaves")
  '(token                 "Slide_Show.pack_slaves")
  '(token                 "Statuslabel.pack_slaves")
  '(token                 "Statuslabel.Label.pack_slaves")
  '(token                 "Statustext.pack_slaves")
  '(token                 "Statustext.Text.pack_slaves")
  '(token                 "Studbutton.pack_slaves")
  '(token                 "Tabbed_Notebook.pack_slaves")
  '(token                 "Text.pack_slaves")
  '(token                 "Tk.pack_slaves")
  '(token                 "Toplevel.pack_slaves")
  '(token                 "Tributton.pack_slaves")
  '(token                 "Up_Down_Button.pack_slaves")
  '(token                 "V_Panedwindow.pack_slaves")
  '(token                 "V_Panedwindow.H_Separator.pack_slaves")
  '(token                 "V_Scrollable.pack_slaves")
  '(token                 "V_Separator.pack_slaves")
  '(token                 "V_Strut.pack_slaves")
  '(token                 "Widget.pack_slaves")
  '(token                 "_C_Frame.pack_slaves")
  '(token                 "_Combobox.Scrolled_Listbox.pack_slaves")
  '(token                 "_Panedwindow.pack_slaves")
  '(token                 "_Scrollable.pack_slaves")
  '(token                 "_Separator.pack_slaves")
  '(token                 "_Spinnerentry.pack_slaves")
  '(token                 "_Statusframe.pack_slaves")
  '(replacement           "pack_slaves ()")
;;; pack_slaves()
)

(lse-define-fill-in "CTK.path" 
  '(description           "Returns path where module resides")
  '(token)
  '(replacement           "CTK.path ()")
;;; CTK.path
)

(lse-define-fill-in "Place.place:cnf" 
  '(description           "Argument 1 of Place.place (default = {})")
  '(leading               ",")
;;; Place.place:cnf
)

(lse-define-fill-in "place(cnf,kw)" 
  '(token)
  '(token                 "Button.place")
  '(token                 "Buttonbox.place")
  '(token                 "C_Entry.place")
  '(token                 "C_Frame.place")
  '(token                 "C_Listbox.place")
  '(token                 "C_Menu.place")
  '(token                 "C_Text.place")
  '(token                 "Canvas.place")
  '(token                 "Checkbutton.place")
  '(token                 "Combo_Tuple.place")
  '(token                 "Combo_Tuple_X.place")
  '(token                 "Combobox.place")
  '(token                 "Entry.place")
  '(token                 "Entrybox.place")
  '(token                 "Filename_Entry.place")
  '(token                 "Frame.place")
  '(token                 "H_Panedwindow.place")
  '(token                 "H_Panedwindow.V_Separator.place")
  '(token                 "H_Scrollable.place")
  '(token                 "H_Separator.place")
  '(token                 "H_Strut.place")
  '(token                 "Label.place")
  '(token                 "Listbox.place")
  '(token                 "Listbox_Tuple.place")
  '(token                 "Listdropentry.place")
  '(token                 "Listdropspinner.place")
  '(token                 "Listspinner.place")
  '(token                 "Menu.place")
  '(token                 "Menubutton.place")
  '(token                 "Message.place")
  '(token                 "Message_Window.place")
  '(token                 "Multicombobox.place")
  '(token                 "Multicombobox_X.place")
  '(token                 "Notebook.place")
  '(token                 "Num_Spinner.place")
  '(token                 "OptionMenu.place")
  '(token                 "Place.place")
  '(token                 "Progress_Gauge.place")
  '(token                 "Radiobutton.place")
  '(token                 "Scale.place")
  '(token                 "Scrollbar.place")
  '(token                 "Scrolled_Listbox.place")
  '(token                 "Scrolled_Text.place")
  '(token                 "Slide_Show.place")
  '(token                 "Statuslabel.place")
  '(token                 "Statuslabel.Label.place")
  '(token                 "Statustext.place")
  '(token                 "Statustext.Text.place")
  '(token                 "Studbutton.place")
  '(token                 "Tabbed_Notebook.place")
  '(token                 "Text.place")
  '(token                 "Tributton.place")
  '(token                 "Up_Down_Button.place")
  '(token                 "V_Panedwindow.place")
  '(token                 "V_Panedwindow.H_Separator.place")
  '(token                 "V_Scrollable.place")
  '(token                 "V_Separator.place")
  '(token                 "V_Strut.place")
  '(token                 "Widget.place")
  '(token                 "_C_Frame.place")
  '(token                 "_Combobox.Scrolled_Listbox.place")
  '(token                 "_Panedwindow.place")
  '(token                 "_Scrollable.place")
  '(token                 "_Separator.place")
  '(token                 "_Spinnerentry.place")
  '(token                 "_Statusframe.place")
  '(replacement           "place (««Place.place:cnf»», ««py-named-arg»»···)")
;;; place(cnf,kw)
)

(lse-define-fill-in "Place.place_configure:cnf" 
  '(description           "Argument 1 of Place.place_configure (default = {})")
  '(leading               ",")
;;; Place.place_configure:cnf
)

(lse-define-fill-in "place_configure(cnf,kw)" 
  '(token)
  '(token                 "Button.place_configure")
  '(token                 "Buttonbox.place_configure")
  '(token                 "C_Entry.place_configure")
  '(token                 "C_Frame.place_configure")
  '(token                 "C_Listbox.place_configure")
  '(token                 "C_Menu.place_configure")
  '(token                 "C_Text.place_configure")
  '(token                 "Canvas.place_configure")
  '(token                 "Checkbutton.place_configure")
  '(token                 "Combo_Tuple.place_configure")
  '(token                 "Combo_Tuple_X.place_configure")
  '(token                 "Combobox.place_configure")
  '(token                 "Entry.place_configure")
  '(token                 "Entrybox.place_configure")
  '(token                 "Filename_Entry.place_configure")
  '(token                 "Frame.place_configure")
  '(token                 "H_Panedwindow.place_configure")
  '(token                 "H_Panedwindow.V_Separator.place_configure")
  '(token                 "H_Scrollable.place_configure")
  '(token                 "H_Separator.place_configure")
  '(token                 "H_Strut.place_configure")
  '(token                 "Label.place_configure")
  '(token                 "Listbox.place_configure")
  '(token                 "Listbox_Tuple.place_configure")
  '(token                 "Listdropentry.place_configure")
  '(token                 "Listdropspinner.place_configure")
  '(token                 "Listspinner.place_configure")
  '(token                 "Menu.place_configure")
  '(token                 "Menubutton.place_configure")
  '(token                 "Message.place_configure")
  '(token                 "Message_Window.place_configure")
  '(token                 "Multicombobox.place_configure")
  '(token                 "Multicombobox_X.place_configure")
  '(token                 "Notebook.place_configure")
  '(token                 "Num_Spinner.place_configure")
  '(token                 "OptionMenu.place_configure")
  '(token                 "Place.place_configure")
  '(token                 "Progress_Gauge.place_configure")
  '(token                 "Radiobutton.place_configure")
  '(token                 "Scale.place_configure")
  '(token                 "Scrollbar.place_configure")
  '(token                 "Scrolled_Listbox.place_configure")
  '(token                 "Scrolled_Text.place_configure")
  '(token                 "Slide_Show.place_configure")
  '(token                 "Statuslabel.place_configure")
  '(token                 "Statuslabel.Label.place_configure")
  '(token                 "Statustext.place_configure")
  '(token                 "Statustext.Text.place_configure")
  '(token                 "Studbutton.place_configure")
  '(token                 "Tabbed_Notebook.place_configure")
  '(token                 "Text.place_configure")
  '(token                 "Tributton.place_configure")
  '(token                 "Up_Down_Button.place_configure")
  '(token                 "V_Panedwindow.place_configure")
  '(token                 "V_Panedwindow.H_Separator.place_configure")
  '(token                 "V_Scrollable.place_configure")
  '(token                 "V_Separator.place_configure")
  '(token                 "V_Strut.place_configure")
  '(token                 "Widget.place_configure")
  '(token                 "_C_Frame.place_configure")
  '(token                 "_Combobox.Scrolled_Listbox.place_configure")
  '(token                 "_Panedwindow.place_configure")
  '(token                 "_Scrollable.place_configure")
  '(token                 "_Separator.place_configure")
  '(token                 "_Spinnerentry.place_configure")
  '(token                 "_Statusframe.place_configure")
  '(replacement           "place_configure (««Place.place_configure:cnf»», ««py-named-arg»»···)")
;;; place_configure(cnf,kw)
)

(lse-define-fill-in "place_forget()" 
  '(token)
  '(token                 "Button.place_forget")
  '(token                 "Buttonbox.place_forget")
  '(token                 "C_Entry.place_forget")
  '(token                 "C_Frame.place_forget")
  '(token                 "C_Listbox.place_forget")
  '(token                 "C_Menu.place_forget")
  '(token                 "C_Text.place_forget")
  '(token                 "Canvas.place_forget")
  '(token                 "Checkbutton.place_forget")
  '(token                 "Combo_Tuple.place_forget")
  '(token                 "Combo_Tuple_X.place_forget")
  '(token                 "Combobox.place_forget")
  '(token                 "Entry.place_forget")
  '(token                 "Entrybox.place_forget")
  '(token                 "Filename_Entry.place_forget")
  '(token                 "Frame.place_forget")
  '(token                 "H_Panedwindow.place_forget")
  '(token                 "H_Panedwindow.V_Separator.place_forget")
  '(token                 "H_Scrollable.place_forget")
  '(token                 "H_Separator.place_forget")
  '(token                 "H_Strut.place_forget")
  '(token                 "Label.place_forget")
  '(token                 "Listbox.place_forget")
  '(token                 "Listbox_Tuple.place_forget")
  '(token                 "Listdropentry.place_forget")
  '(token                 "Listdropspinner.place_forget")
  '(token                 "Listspinner.place_forget")
  '(token                 "Menu.place_forget")
  '(token                 "Menubutton.place_forget")
  '(token                 "Message.place_forget")
  '(token                 "Message_Window.place_forget")
  '(token                 "Multicombobox.place_forget")
  '(token                 "Multicombobox_X.place_forget")
  '(token                 "Notebook.place_forget")
  '(token                 "Num_Spinner.place_forget")
  '(token                 "OptionMenu.place_forget")
  '(token                 "Place.place_forget")
  '(token                 "Progress_Gauge.place_forget")
  '(token                 "Radiobutton.place_forget")
  '(token                 "Scale.place_forget")
  '(token                 "Scrollbar.place_forget")
  '(token                 "Scrolled_Listbox.place_forget")
  '(token                 "Scrolled_Text.place_forget")
  '(token                 "Slide_Show.place_forget")
  '(token                 "Statuslabel.place_forget")
  '(token                 "Statuslabel.Label.place_forget")
  '(token                 "Statustext.place_forget")
  '(token                 "Statustext.Text.place_forget")
  '(token                 "Studbutton.place_forget")
  '(token                 "Tabbed_Notebook.place_forget")
  '(token                 "Text.place_forget")
  '(token                 "Tributton.place_forget")
  '(token                 "Up_Down_Button.place_forget")
  '(token                 "V_Panedwindow.place_forget")
  '(token                 "V_Panedwindow.H_Separator.place_forget")
  '(token                 "V_Scrollable.place_forget")
  '(token                 "V_Separator.place_forget")
  '(token                 "V_Strut.place_forget")
  '(token                 "Widget.place_forget")
  '(token                 "_C_Frame.place_forget")
  '(token                 "_Combobox.Scrolled_Listbox.place_forget")
  '(token                 "_Panedwindow.place_forget")
  '(token                 "_Scrollable.place_forget")
  '(token                 "_Separator.place_forget")
  '(token                 "_Spinnerentry.place_forget")
  '(token                 "_Statusframe.place_forget")
  '(replacement           "place_forget ()")
;;; place_forget()
)

(lse-define-fill-in "place_info()" 
  '(token)
  '(token                 "Button.place_info")
  '(token                 "Buttonbox.place_info")
  '(token                 "C_Entry.place_info")
  '(token                 "C_Frame.place_info")
  '(token                 "C_Listbox.place_info")
  '(token                 "C_Menu.place_info")
  '(token                 "C_Text.place_info")
  '(token                 "Canvas.place_info")
  '(token                 "Checkbutton.place_info")
  '(token                 "Combo_Tuple.place_info")
  '(token                 "Combo_Tuple_X.place_info")
  '(token                 "Combobox.place_info")
  '(token                 "Entry.place_info")
  '(token                 "Entrybox.place_info")
  '(token                 "Filename_Entry.place_info")
  '(token                 "Frame.place_info")
  '(token                 "H_Panedwindow.place_info")
  '(token                 "H_Panedwindow.V_Separator.place_info")
  '(token                 "H_Scrollable.place_info")
  '(token                 "H_Separator.place_info")
  '(token                 "H_Strut.place_info")
  '(token                 "Label.place_info")
  '(token                 "Listbox.place_info")
  '(token                 "Listbox_Tuple.place_info")
  '(token                 "Listdropentry.place_info")
  '(token                 "Listdropspinner.place_info")
  '(token                 "Listspinner.place_info")
  '(token                 "Menu.place_info")
  '(token                 "Menubutton.place_info")
  '(token                 "Message.place_info")
  '(token                 "Message_Window.place_info")
  '(token                 "Multicombobox.place_info")
  '(token                 "Multicombobox_X.place_info")
  '(token                 "Notebook.place_info")
  '(token                 "Num_Spinner.place_info")
  '(token                 "OptionMenu.place_info")
  '(token                 "Place.place_info")
  '(token                 "Progress_Gauge.place_info")
  '(token                 "Radiobutton.place_info")
  '(token                 "Scale.place_info")
  '(token                 "Scrollbar.place_info")
  '(token                 "Scrolled_Listbox.place_info")
  '(token                 "Scrolled_Text.place_info")
  '(token                 "Slide_Show.place_info")
  '(token                 "Statuslabel.place_info")
  '(token                 "Statuslabel.Label.place_info")
  '(token                 "Statustext.place_info")
  '(token                 "Statustext.Text.place_info")
  '(token                 "Studbutton.place_info")
  '(token                 "Tabbed_Notebook.place_info")
  '(token                 "Text.place_info")
  '(token                 "Tributton.place_info")
  '(token                 "Up_Down_Button.place_info")
  '(token                 "V_Panedwindow.place_info")
  '(token                 "V_Panedwindow.H_Separator.place_info")
  '(token                 "V_Scrollable.place_info")
  '(token                 "V_Separator.place_info")
  '(token                 "V_Strut.place_info")
  '(token                 "Widget.place_info")
  '(token                 "_C_Frame.place_info")
  '(token                 "_Combobox.Scrolled_Listbox.place_info")
  '(token                 "_Panedwindow.place_info")
  '(token                 "_Scrollable.place_info")
  '(token                 "_Separator.place_info")
  '(token                 "_Spinnerentry.place_info")
  '(token                 "_Statusframe.place_info")
  '(replacement           "place_info ()")
;;; place_info()
)

(lse-define-fill-in "place_slaves()" 
  '(token)
  '(token                 "Balloon.place_slaves")
  '(token                 "BaseWidget.place_slaves")
  '(token                 "Button.place_slaves")
  '(token                 "Buttonbox.place_slaves")
  '(token                 "C_Entry.place_slaves")
  '(token                 "C_Frame.place_slaves")
  '(token                 "C_Listbox.place_slaves")
  '(token                 "C_Menu.place_slaves")
  '(token                 "C_Text.place_slaves")
  '(token                 "Canvas.place_slaves")
  '(token                 "Checkbutton.place_slaves")
  '(token                 "Combo_Tuple.place_slaves")
  '(token                 "Combo_Tuple_X.place_slaves")
  '(token                 "Combobox.place_slaves")
  '(token                 "Entry.place_slaves")
  '(token                 "Entrybox.place_slaves")
  '(token                 "Filename_Entry.place_slaves")
  '(token                 "Frame.place_slaves")
  '(token                 "H_Panedwindow.place_slaves")
  '(token                 "H_Panedwindow.V_Separator.place_slaves")
  '(token                 "H_Scrollable.place_slaves")
  '(token                 "H_Separator.place_slaves")
  '(token                 "H_Strut.place_slaves")
  '(token                 "Label.place_slaves")
  '(token                 "Listbox.place_slaves")
  '(token                 "Listbox_Tuple.place_slaves")
  '(token                 "Listdropentry.place_slaves")
  '(token                 "Listdropspinner.place_slaves")
  '(token                 "Listspinner.place_slaves")
  '(token                 "Menu.place_slaves")
  '(token                 "Menubutton.place_slaves")
  '(token                 "Message.place_slaves")
  '(token                 "Message_Window.place_slaves")
  '(token                 "Misc.place_slaves")
  '(token                 "Multicombobox.place_slaves")
  '(token                 "Multicombobox_X.place_slaves")
  '(token                 "Notebook.place_slaves")
  '(token                 "Num_Spinner.place_slaves")
  '(token                 "OptionMenu.place_slaves")
  '(token                 "Place.place_slaves")
  '(token                 "Progress_Gauge.place_slaves")
  '(token                 "Progress_Gauge_T.place_slaves")
  '(token                 "Radiobutton.place_slaves")
  '(token                 "Scale.place_slaves")
  '(token                 "Scrollbar.place_slaves")
  '(token                 "Scrolled_Listbox.place_slaves")
  '(token                 "Scrolled_Text.place_slaves")
  '(token                 "Slide_Show.place_slaves")
  '(token                 "Statuslabel.place_slaves")
  '(token                 "Statuslabel.Label.place_slaves")
  '(token                 "Statustext.place_slaves")
  '(token                 "Statustext.Text.place_slaves")
  '(token                 "Studbutton.place_slaves")
  '(token                 "Tabbed_Notebook.place_slaves")
  '(token                 "Text.place_slaves")
  '(token                 "Tk.place_slaves")
  '(token                 "Toplevel.place_slaves")
  '(token                 "Tributton.place_slaves")
  '(token                 "Up_Down_Button.place_slaves")
  '(token                 "V_Panedwindow.place_slaves")
  '(token                 "V_Panedwindow.H_Separator.place_slaves")
  '(token                 "V_Scrollable.place_slaves")
  '(token                 "V_Separator.place_slaves")
  '(token                 "V_Strut.place_slaves")
  '(token                 "Widget.place_slaves")
  '(token                 "_C_Frame.place_slaves")
  '(token                 "_Combobox.Scrolled_Listbox.place_slaves")
  '(token                 "_Panedwindow.place_slaves")
  '(token                 "_Scrollable.place_slaves")
  '(token                 "_Separator.place_slaves")
  '(token                 "_Spinnerentry.place_slaves")
  '(token                 "_Statusframe.place_slaves")
  '(replacement           "place_slaves ()")
;;; place_slaves()
)

(lse-define-fill-in "pop()" 
  '(token)
  '(token                 "Message_Window.pop")
  '(token                 "_Statusframe.pop")
  '(replacement           "pop ()")
;;; pop()
)

(lse-define-fill-in "Buttonbox.pop_button_help:event" 
  '(description           "Argument 1 of Buttonbox.pop_button_help (default = None)")
  '(leading               ",")
;;; Buttonbox.pop_button_help:event
)

(lse-define-fill-in "pop_button_help(event)" 
  '(token)
  '(token                 "Buttonbox.pop_button_help")
  '(replacement           "pop_button_help (««Buttonbox.pop_button_help:event»»)")
;;; pop_button_help(event)
)

(lse-define-fill-in "pop_err_msg()" 
  '(token)
  '(token                 "Message_Window.pop_err_msg")
  '(token                 "_Statusframe.pop_err_msg")
  '(replacement           "pop_err_msg ()")
;;; pop_err_msg()
)

(lse-define-fill-in "pop_help()" 
  '(token)
  '(token                 "Message_Window.pop_help")
  '(token                 "_Statusframe.pop_help")
  '(replacement           "pop_help ()")
;;; pop_help()
)

(lse-define-fill-in "Filename_Entry.popup_file_selector:event" 
  '(description           "Argument 1 of Filename_Entry.popup_file_selector (default = None)")
  '(leading               ",")
;;; Filename_Entry.popup_file_selector:event
)

(lse-define-fill-in "popup_file_selector(event)" 
  '(token)
  '(token                 "Filename_Entry.popup_file_selector")
  '(replacement           "popup_file_selector (««Filename_Entry.popup_file_selector:event»»)")
;;; popup_file_selector(event)
)

(lse-define-fill-in "Wm.positionfrom:who" 
  '(description           "Argument 1 of Wm.positionfrom (default = None)")
  '(leading               ",")
;;; Wm.positionfrom:who
)

(lse-define-fill-in "positionfrom(who)" 
  '(token)
  '(token                 "Balloon.positionfrom")
  '(token                 "Progress_Gauge_T.positionfrom")
  '(token                 "Tk.positionfrom")
  '(token                 "Toplevel.positionfrom")
  '(token                 "Wm.positionfrom")
  '(replacement           "positionfrom (««Wm.positionfrom:who»»)")
;;; positionfrom(who)
)

(lse-define-fill-in "Menu.post:x" 
  '(description           "Argument 1 of Menu.post")
  '(leading               ",")
;;; Menu.post:x
)

(lse-define-fill-in "Menu.post:y" 
  '(description           "Argument 2 of Menu.post")
  '(leading               ",")
;;; Menu.post:y
)

(lse-define-fill-in "post(x,y)" 
  '(token)
  '(token                 "C_Menu.post")
  '(token                 "Menu.post")
  '(replacement           "post («Menu.post:x», «Menu.post:y»)")
;;; post(x,y)
)

(lse-define-fill-in "Canvas.postscript:cnf" 
  '(description           "Argument 1 of Canvas.postscript (default = {})")
  '(leading               ",")
;;; Canvas.postscript:cnf
)

(lse-define-fill-in "postscript(cnf,kw)" 
  '(token)
  '(token                 "Canvas.postscript")
  '(replacement           "postscript (««Canvas.postscript:cnf»», ««py-named-arg»»···)")
;;; postscript(cnf,kw)
)

(lse-define-fill-in "_Spinner.prev:event" 
  '(description           "Argument 1 of _Spinner.prev (default = None)")
  '(leading               ",")
;;; _Spinner.prev:event
)

(lse-define-fill-in "prev(event)" 
  '(token)
  '(token                 "Listdropspinner.prev")
  '(token                 "Listspinner.prev")
  '(token                 "Num_Spinner.prev")
  '(token                 "Slide_Show.prev")
  '(token                 "_Spinner.prev")
  '(token                 "_Spinnerentry.prev")
  '(replacement           "prev (««_Spinner.prev:event»»)")
;;; prev(event)
)

(lse-define-fill-in "C_Listbox.prior_index:event" 
  '(description           "Argument 1 of C_Listbox.prior_index")
  '(leading               ",")
;;; C_Listbox.prior_index:event
)

(lse-define-fill-in "prior_index(event)" 
  '(token)
  '(token                 "C_Listbox.prior_index")
  '(token                 "Scrolled_Listbox.prior_index")
  '(token                 "_Combobox.Scrolled_Listbox.prior_index")
  '(replacement           "prior_index («C_Listbox.prior_index:event»)")
;;; prior_index(event)
)

(lse-define-fill-in "Misc.propagate:flag" 
  '(description           "Argument 1 of Misc.propagate (default = ['_noarg_'])")
  '(leading               ",")
;;; Misc.propagate:flag
)

(lse-define-fill-in "propagate(flag)" 
  '(token)
  '(token                 "Balloon.propagate")
  '(token                 "BaseWidget.propagate")
  '(token                 "Button.propagate")
  '(token                 "Buttonbox.propagate")
  '(token                 "C_Entry.propagate")
  '(token                 "C_Frame.propagate")
  '(token                 "C_Listbox.propagate")
  '(token                 "C_Menu.propagate")
  '(token                 "C_Text.propagate")
  '(token                 "Canvas.propagate")
  '(token                 "Checkbutton.propagate")
  '(token                 "Combo_Tuple.propagate")
  '(token                 "Combo_Tuple_X.propagate")
  '(token                 "Combobox.propagate")
  '(token                 "Entry.propagate")
  '(token                 "Entrybox.propagate")
  '(token                 "Filename_Entry.propagate")
  '(token                 "Frame.propagate")
  '(token                 "Grid.propagate")
  '(token                 "H_Panedwindow.propagate")
  '(token                 "H_Panedwindow.V_Separator.propagate")
  '(token                 "H_Scrollable.propagate")
  '(token                 "H_Separator.propagate")
  '(token                 "H_Strut.propagate")
  '(token                 "Label.propagate")
  '(token                 "Listbox.propagate")
  '(token                 "Listbox_Tuple.propagate")
  '(token                 "Listdropentry.propagate")
  '(token                 "Listdropspinner.propagate")
  '(token                 "Listspinner.propagate")
  '(token                 "Menu.propagate")
  '(token                 "Menubutton.propagate")
  '(token                 "Message.propagate")
  '(token                 "Message_Window.propagate")
  '(token                 "Misc.propagate")
  '(token                 "Multicombobox.propagate")
  '(token                 "Multicombobox_X.propagate")
  '(token                 "Notebook.propagate")
  '(token                 "Num_Spinner.propagate")
  '(token                 "OptionMenu.propagate")
  '(token                 "Pack.propagate")
  '(token                 "Progress_Gauge.propagate")
  '(token                 "Progress_Gauge_T.propagate")
  '(token                 "Radiobutton.propagate")
  '(token                 "Scale.propagate")
  '(token                 "Scrollbar.propagate")
  '(token                 "Scrolled_Listbox.propagate")
  '(token                 "Scrolled_Text.propagate")
  '(token                 "Slide_Show.propagate")
  '(token                 "Statuslabel.propagate")
  '(token                 "Statuslabel.Label.propagate")
  '(token                 "Statustext.propagate")
  '(token                 "Statustext.Text.propagate")
  '(token                 "Studbutton.propagate")
  '(token                 "Tabbed_Notebook.propagate")
  '(token                 "Text.propagate")
  '(token                 "Tk.propagate")
  '(token                 "Toplevel.propagate")
  '(token                 "Tributton.propagate")
  '(token                 "Up_Down_Button.propagate")
  '(token                 "V_Panedwindow.propagate")
  '(token                 "V_Panedwindow.H_Separator.propagate")
  '(token                 "V_Scrollable.propagate")
  '(token                 "V_Separator.propagate")
  '(token                 "V_Strut.propagate")
  '(token                 "Widget.propagate")
  '(token                 "_C_Frame.propagate")
  '(token                 "_Combobox.Scrolled_Listbox.propagate")
  '(token                 "_Panedwindow.propagate")
  '(token                 "_Scrollable.propagate")
  '(token                 "_Separator.propagate")
  '(token                 "_Spinnerentry.propagate")
  '(token                 "_Statusframe.propagate")
  '(replacement           "propagate (««Misc.propagate:flag»»)")
;;; propagate(flag)
)

(lse-define-fill-in "Wm.protocol:name" 
  '(description           "Argument 1 of Wm.protocol (default = None)")
  '(leading               ",")
;;; Wm.protocol:name
)

(lse-define-fill-in "Wm.protocol:func" 
  '(description           "Argument 2 of Wm.protocol (default = None)")
  '(leading               ",")
;;; Wm.protocol:func
)

(lse-define-fill-in "protocol(name,func)" 
  '(token)
  '(token                 "Balloon.protocol")
  '(token                 "Progress_Gauge_T.protocol")
  '(token                 "Tk.protocol")
  '(token                 "Toplevel.protocol")
  '(token                 "Wm.protocol")
  '(replacement           "protocol (««Wm.protocol:name»», ««Wm.protocol:func»»)")
;;; protocol(name,func)
)

(lse-define-fill-in "Message_Window.push_err_msg:text" 
  '(description           "Argument 1 of Message_Window.push_err_msg")
  '(leading               ",")
;;; Message_Window.push_err_msg:text
)

(lse-define-fill-in "push_err_msg(text)" 
  '(token)
  '(token                 "Message_Window.push_err_msg")
  '(token                 "_Statusframe.push_err_msg")
  '(replacement           "push_err_msg («Message_Window.push_err_msg:text»)")
;;; push_err_msg(text)
)

(lse-define-fill-in "Message_Window.push_help:text" 
  '(description           "Argument 1 of Message_Window.push_help")
  '(leading               ",")
;;; Message_Window.push_help:text
)

(lse-define-fill-in "push_help(text)" 
  '(token)
  '(token                 "Message_Window.push_help")
  '(token                 "_Statusframe.push_help")
  '(replacement           "push_help («Message_Window.push_help:text»)")
;;; push_help(text)
)

(lse-define-fill-in "PhotoImage.put:data" 
  '(description           "Argument 1 of PhotoImage.put")
  '(leading               ",")
;;; PhotoImage.put:data
)

(lse-define-fill-in "PhotoImage.put:to" 
  '(description           "Argument 2 of PhotoImage.put (default = None)")
  '(leading               ",")
;;; PhotoImage.put:to
)

(lse-define-fill-in "put(data,to)" 
  '(token)
  '(token                 "PhotoImage.put")
  '(replacement           "put («PhotoImage.put:data», ««PhotoImage.put:to»»)")
;;; put(data,to)
)

(lse-define-fill-in "C_Text.put:text" 
  '(description           "Argument 1 of C_Text.put")
  '(leading               ",")
;;; C_Text.put:text
)

(lse-define-fill-in "C_Text.put:tags" 
  '(description           "Argument 2 of C_Text.put")
  '(leading               ",")
  '(separator             ", ")
;;; C_Text.put:tags
)

(lse-define-fill-in "put(text,tags)" 
  '(token)
  '(token                 "C_Text.put")
  '(token                 "Message_Window.put")
  '(token                 "Scrolled_Text.put")
  '(replacement           "put («C_Text.put:text», ««C_Text.put:tags»»···)")
;;; put(text,tags)
)

(lse-define-fill-in "Buttonbox.put_button_help:event" 
  '(description           "Argument 1 of Buttonbox.put_button_help (default = None)")
  '(leading               ",")
;;; Buttonbox.put_button_help:event
)

(lse-define-fill-in "put_button_help(event)" 
  '(token)
  '(token                 "Buttonbox.put_button_help")
  '(replacement           "put_button_help (««Buttonbox.put_button_help:event»»)")
;;; put_button_help(event)
)

(lse-define-fill-in "_Statusframe.put_err_msg:text" 
  '(description           "Argument 1 of _Statusframe.put_err_msg")
  '(leading               ",")
;;; _Statusframe.put_err_msg:text
)

(lse-define-fill-in "put_err_msg(text)" 
  '(token)
  '(token                 "Statuslabel.put_err_msg")
  '(token                 "Statustext.put_err_msg")
  '(token                 "_Statusframe.put_err_msg")
  '(replacement           "put_err_msg («_Statusframe.put_err_msg:text»)")
;;; put_err_msg(text)
)

(lse-define-fill-in "Message_Window.put_help:text" 
  '(description           "Argument 1 of Message_Window.put_help")
  '(leading               ",")
;;; Message_Window.put_help:text
)

(lse-define-fill-in "put_help(text)" 
  '(token)
  '(token                 "Message_Window.put_help")
  '(token                 "_Statusframe.put_help")
  '(replacement           "put_help («Message_Window.put_help:text»)")
;;; put_help(text)
)

(lse-define-fill-in "quit()" 
  '(token)
  '(token                 "Balloon.quit")
  '(token                 "BaseWidget.quit")
  '(token                 "Button.quit")
  '(token                 "Buttonbox.quit")
  '(token                 "C_Entry.quit")
  '(token                 "C_Frame.quit")
  '(token                 "C_Listbox.quit")
  '(token                 "C_Menu.quit")
  '(token                 "C_Text.quit")
  '(token                 "Canvas.quit")
  '(token                 "Checkbutton.quit")
  '(token                 "Combo_Tuple.quit")
  '(token                 "Combo_Tuple_X.quit")
  '(token                 "Combobox.quit")
  '(token                 "Entry.quit")
  '(token                 "Entrybox.quit")
  '(token                 "Filename_Entry.quit")
  '(token                 "Frame.quit")
  '(token                 "H_Panedwindow.quit")
  '(token                 "H_Panedwindow.V_Separator.quit")
  '(token                 "H_Scrollable.quit")
  '(token                 "H_Separator.quit")
  '(token                 "H_Strut.quit")
  '(token                 "Label.quit")
  '(token                 "Listbox.quit")
  '(token                 "Listbox_Tuple.quit")
  '(token                 "Listdropentry.quit")
  '(token                 "Listdropspinner.quit")
  '(token                 "Listspinner.quit")
  '(token                 "Menu.quit")
  '(token                 "Menubutton.quit")
  '(token                 "Message.quit")
  '(token                 "Message_Window.quit")
  '(token                 "Misc.quit")
  '(token                 "Multicombobox.quit")
  '(token                 "Multicombobox_X.quit")
  '(token                 "Notebook.quit")
  '(token                 "Num_Spinner.quit")
  '(token                 "OptionMenu.quit")
  '(token                 "Progress_Gauge.quit")
  '(token                 "Progress_Gauge_T.quit")
  '(token                 "Radiobutton.quit")
  '(token                 "Scale.quit")
  '(token                 "Scrollbar.quit")
  '(token                 "Scrolled_Listbox.quit")
  '(token                 "Scrolled_Text.quit")
  '(token                 "Slide_Show.quit")
  '(token                 "Statuslabel.quit")
  '(token                 "Statuslabel.Label.quit")
  '(token                 "Statustext.quit")
  '(token                 "Statustext.Text.quit")
  '(token                 "Studbutton.quit")
  '(token                 "Tabbed_Notebook.quit")
  '(token                 "Text.quit")
  '(token                 "Tk.quit")
  '(token                 "Toplevel.quit")
  '(token                 "Tributton.quit")
  '(token                 "Up_Down_Button.quit")
  '(token                 "V_Panedwindow.quit")
  '(token                 "V_Panedwindow.H_Separator.quit")
  '(token                 "V_Scrollable.quit")
  '(token                 "V_Separator.quit")
  '(token                 "V_Strut.quit")
  '(token                 "Widget.quit")
  '(token                 "_C_Frame.quit")
  '(token                 "_Combobox.Scrolled_Listbox.quit")
  '(token                 "_Panedwindow.quit")
  '(token                 "_Scrollable.quit")
  '(token                 "_Separator.quit")
  '(token                 "_Spinnerentry.quit")
  '(token                 "_Statusframe.quit")
  '(replacement           "quit ()")
;;; quit()
)

(lse-define-fill-in "CanvasItem.raise_:abovethis" 
  '(description           "Argument 1 of CanvasItem.raise_ (default = None)")
  '(leading               ",")
;;; CanvasItem.raise_:abovethis
)

(lse-define-fill-in "raise_(abovethis)" 
  '(token)
  '(token                 "Arc.raise_")
  '(token                 "Bitmap.raise_")
  '(token                 "CanvasItem.raise_")
  '(token                 "CanvasText.raise_")
  '(token                 "ImageItem.raise_")
  '(token                 "Line.raise_")
  '(token                 "Oval.raise_")
  '(token                 "Polygon.raise_")
  '(token                 "Rectangle.raise_")
  '(token                 "Window.raise_")
  '(replacement           "raise_ (««CanvasItem.raise_:abovethis»»)")
;;; raise_(abovethis)
)

(lse-define-fill-in "CTK.read_option_file:tk" 
  '(description
    "This reads the option file(s) `filename' if it exists."
       "`read_option_file' looks for `filename' in the program's directory and"
       "python search path, the current directory, and in the users home"
       "directory (if environment variable HOME is set)."
       "`read_option_file' reads `filename' from all directories where it"
       "finds it."
       "`filename' is read by calling `tk.option_readfile'."
    ""
   )
  '(leading               ",")
;;; CTK.read_option_file:tk
)

(lse-define-fill-in "CTK.read_option_file:filename" 
  '(description
    "This reads the option file(s) `filename' if it exists."
       "`read_option_file' looks for `filename' in the program's directory and"
       "python search path, the current directory, and in the users home"
       "directory (if environment variable HOME is set)."
       "`read_option_file' reads `filename' from all directories where it"
       "finds it."
       "`filename' is read by calling `tk.option_readfile'."
    ""
   )
  '(leading               ",")
;;; CTK.read_option_file:filename
)

(lse-define-fill-in "CTK.read_option_file" 
  '(description
    "This reads the option file(s) `filename' if it exists."
       "`read_option_file' looks for `filename' in the program's directory and"
       "python search path, the current directory, and in the users home"
       "directory (if environment variable HOME is set)."
       "`read_option_file' reads `filename' from all directories where it"
       "finds it."
       "`filename' is read by calling `tk.option_readfile'."
    ""
   )
  '(token)
  '(replacement           "CTK.read_option_file («CTK.read_option_file:tk», «CTK.read_option_file:filename»)")
;;; CTK.read_option_file
)

(lse-define-fill-in "CTK.read_option_files:tk" 
  '(description           "Argument 1 of CTK.read_option_files")
  '(leading               ",")
;;; CTK.read_option_files:tk
)

(lse-define-fill-in "CTK.read_option_files:filename" 
  '(description           "Argument 2 of CTK.read_option_files")
  '(leading               ",")
;;; CTK.read_option_files:filename
)

(lse-define-fill-in "CTK.read_option_files" 
  '(description           "Read generic and platform-specific option files.")
  '(token)
  '(replacement           "CTK.read_option_files («CTK.read_option_files:tk», «CTK.read_option_files:filename»)")
;;; CTK.read_option_files
)

(lse-define-fill-in "Tk.readprofile:baseName" 
  '(description           "Argument 1 of Tk.readprofile")
  '(leading               ",")
;;; Tk.readprofile:baseName
)

(lse-define-fill-in "Tk.readprofile:className" 
  '(description           "Argument 2 of Tk.readprofile")
  '(leading               ",")
;;; Tk.readprofile:className
)

(lse-define-fill-in "readprofile(baseName,className)" 
  '(token)
  '(token                 "Tk.readprofile")
  '(replacement           "readprofile («Tk.readprofile:baseName», «Tk.readprofile:className»)")
;;; readprofile(baseName,className)
)

(lse-define-fill-in "Misc.register:func" 
  '(description           "Argument 1 of Misc.register")
  '(leading               ",")
;;; Misc.register:func
)

(lse-define-fill-in "Misc.register:subst" 
  '(description           "Argument 2 of Misc.register (default = None)")
  '(leading               ",")
;;; Misc.register:subst
)

(lse-define-fill-in "Misc.register:needcleanup" 
  '(description           "Argument 3 of Misc.register (default = 1)")
  '(leading               ",")
;;; Misc.register:needcleanup
)

(lse-define-fill-in "register(func,subst,needcleanup)" 
  '(token)
  '(token                 "Balloon.register")
  '(token                 "BaseWidget.register")
  '(token                 "Button.register")
  '(token                 "Buttonbox.register")
  '(token                 "C_Entry.register")
  '(token                 "C_Frame.register")
  '(token                 "C_Listbox.register")
  '(token                 "C_Menu.register")
  '(token                 "C_Text.register")
  '(token                 "Canvas.register")
  '(token                 "Checkbutton.register")
  '(token                 "Combo_Tuple.register")
  '(token                 "Combo_Tuple_X.register")
  '(token                 "Combobox.register")
  '(token                 "Entry.register")
  '(token                 "Entrybox.register")
  '(token                 "Filename_Entry.register")
  '(token                 "Frame.register")
  '(token                 "H_Panedwindow.register")
  '(token                 "H_Panedwindow.V_Separator.register")
  '(token                 "H_Scrollable.register")
  '(token                 "H_Separator.register")
  '(token                 "H_Strut.register")
  '(token                 "Label.register")
  '(token                 "Listbox.register")
  '(token                 "Listbox_Tuple.register")
  '(token                 "Listdropentry.register")
  '(token                 "Listdropspinner.register")
  '(token                 "Listspinner.register")
  '(token                 "Menu.register")
  '(token                 "Menubutton.register")
  '(token                 "Message.register")
  '(token                 "Message_Window.register")
  '(token                 "Misc.register")
  '(token                 "Multicombobox.register")
  '(token                 "Multicombobox_X.register")
  '(token                 "Notebook.register")
  '(token                 "Num_Spinner.register")
  '(token                 "OptionMenu.register")
  '(token                 "Progress_Gauge.register")
  '(token                 "Progress_Gauge_T.register")
  '(token                 "Radiobutton.register")
  '(token                 "Scale.register")
  '(token                 "Scrollbar.register")
  '(token                 "Scrolled_Listbox.register")
  '(token                 "Scrolled_Text.register")
  '(token                 "Slide_Show.register")
  '(token                 "Statuslabel.register")
  '(token                 "Statuslabel.Label.register")
  '(token                 "Statustext.register")
  '(token                 "Statustext.Text.register")
  '(token                 "Studbutton.register")
  '(token                 "Tabbed_Notebook.register")
  '(token                 "Text.register")
  '(token                 "Tk.register")
  '(token                 "Toplevel.register")
  '(token                 "Tributton.register")
  '(token                 "Up_Down_Button.register")
  '(token                 "V_Panedwindow.register")
  '(token                 "V_Panedwindow.H_Separator.register")
  '(token                 "V_Scrollable.register")
  '(token                 "V_Separator.register")
  '(token                 "V_Strut.register")
  '(token                 "Widget.register")
  '(token                 "_C_Frame.register")
  '(token                 "_Combobox.Scrolled_Listbox.register")
  '(token                 "_Panedwindow.register")
  '(token                 "_Scrollable.register")
  '(token                 "_Separator.register")
  '(token                 "_Spinnerentry.register")
  '(token                 "_Statusframe.register")
  '(replacement           "register («Misc.register:func», ««Misc.register:subst»», ««Misc.register:needcleanup»»)")
;;; register(func,subst,needcleanup)
)

(lse-define-fill-in "regrid()" 
  '(token)
  '(token                 "Buttonbox.regrid")
  '(replacement           "regrid ()")
;;; regrid()
)

(lse-define-fill-in "C_Listbox.reload:list" 
  '(description           "Argument 1 of C_Listbox.reload")
  '(leading               ",")
;;; C_Listbox.reload:list
)

(lse-define-fill-in "reload(list)" 
  '(token)
  '(token                 "C_Listbox.reload")
  '(token                 "Combo_Entry.reload")
  '(token                 "Listdropspinner.reload")
  '(token                 "Multicombobox.reload")
  '(token                 "Scrolled_Listbox.reload")
  '(token                 "_Combobox.Scrolled_Listbox.reload")
  '(token                 "_Listdrop.reload")
  '(token                 "_Listspinner.reload")
  '(replacement           "reload («C_Listbox.reload:list»)")
;;; reload(list)
)

(lse-define-fill-in "_Listbox_Tuple.reload:lists" 
  '(description           "Argument 1 of _Listbox_Tuple.reload")
  '(leading               ",")
  '(separator             ", ")
;;; _Listbox_Tuple.reload:lists
)

(lse-define-fill-in "reload(lists)" 
  '(token)
  '(token                 "Combo_Tuple.reload")
  '(token                 "Combo_Tuple_X.reload")
  '(token                 "Listbox_Tuple.reload")
  '(token                 "_Listbox_Tuple.reload")
  '(replacement           "reload (««_Listbox_Tuple.reload:lists»»···)")
;;; reload(lists)
)

(lse-define-fill-in "Message_Window.replace_matches:pattern" 
  '(description
    "Replaces all occurrences of regular expression `pattern' between"
           "indices `head' and `tail' with `repl'."
        ""
   )
  '(leading               ",")
;;; Message_Window.replace_matches:pattern
)

(lse-define-fill-in "Message_Window.replace_matches:repl" 
  '(description
    "Replaces all occurrences of regular expression `pattern' between"
           "indices `head' and `tail' with `repl'."
         "(default = )"
   )
  '(leading               ",")
;;; Message_Window.replace_matches:repl
)

(lse-define-fill-in "Message_Window.replace_matches:head" 
  '(description
    "Replaces all occurrences of regular expression `pattern' between"
           "indices `head' and `tail' with `repl'."
         "(default = 1.0)"
   )
  '(leading               ",")
;;; Message_Window.replace_matches:head
)

(lse-define-fill-in "Message_Window.replace_matches:tail" 
  '(description
    "Replaces all occurrences of regular expression `pattern' between"
           "indices `head' and `tail' with `repl'."
         "(default = end)"
   )
  '(leading               ",")
;;; Message_Window.replace_matches:tail
)

(lse-define-fill-in "replace_matches(pattern,repl,head,tail)" 
  '(description
    "Replaces all occurrences of regular expression `pattern' between"
           "indices `head' and `tail' with `repl'."
        ""
   )
  '(token)
  '(token                 "Message_Window.replace_matches")
  '(replacement           "replace_matches («Message_Window.replace_matches:pattern», ««Message_Window.replace_matches:repl»», ««Message_Window.replace_matches:head»», ««Message_Window.replace_matches:tail»»)")
;;; replace_matches(pattern,repl,head,tail)
)

(lse-define-fill-in "Tk.report_callback_exception:exc" 
  '(description           "Argument 1 of Tk.report_callback_exception")
  '(leading               ",")
;;; Tk.report_callback_exception:exc
)

(lse-define-fill-in "Tk.report_callback_exception:val" 
  '(description           "Argument 2 of Tk.report_callback_exception")
  '(leading               ",")
;;; Tk.report_callback_exception:val
)

(lse-define-fill-in "Tk.report_callback_exception:tb" 
  '(description           "Argument 3 of Tk.report_callback_exception")
  '(leading               ",")
;;; Tk.report_callback_exception:tb
)

(lse-define-fill-in "report_callback_exception(exc,val,tb)" 
  '(token)
  '(token                 "Tk.report_callback_exception")
  '(replacement           "report_callback_exception («Tk.report_callback_exception:exc», «Tk.report_callback_exception:val», «Tk.report_callback_exception:tb»)")
;;; report_callback_exception(exc,val,tb)
)

(lse-define-fill-in "Progress_Gauge_T.reset:args" 
  '(description           "Argument 1 of Progress_Gauge_T.reset")
  '(leading               ",")
  '(separator             ", ")
;;; Progress_Gauge_T.reset:args
)

(lse-define-fill-in "reset(args,kw)" 
  '(token)
  '(token                 "Progress_Gauge_T.reset")
  '(replacement           "reset (««Progress_Gauge_T.reset:args»»···, ««py-named-arg»»···)")
;;; reset(args,kw)
)

(lse-define-fill-in "Progress_Gauge.reset:label" 
  '(description           "Argument 1 of Progress_Gauge.reset (default = None)")
  '(leading               ",")
;;; Progress_Gauge.reset:label
)

(lse-define-fill-in "Progress_Gauge.reset:g_range" 
  '(description           "Argument 2 of Progress_Gauge.reset (default = 100)")
  '(leading               ",")
;;; Progress_Gauge.reset:g_range
)

(lse-define-fill-in "reset(label,g_range)" 
  '(token)
  '(token                 "Progress_Gauge.reset")
  '(replacement           "reset (««Progress_Gauge.reset:label»», ««Progress_Gauge.reset:g_range»»)")
;;; reset(label,g_range)
)

(lse-define-fill-in "Wm.resizable:width" 
  '(description           "Argument 1 of Wm.resizable (default = None)")
  '(leading               ",")
;;; Wm.resizable:width
)

(lse-define-fill-in "Wm.resizable:height" 
  '(description           "Argument 2 of Wm.resizable (default = None)")
  '(leading               ",")
;;; Wm.resizable:height
)

(lse-define-fill-in "resizable(width,height)" 
  '(token)
  '(token                 "Balloon.resizable")
  '(token                 "Progress_Gauge_T.resizable")
  '(token                 "Tk.resizable")
  '(token                 "Toplevel.resizable")
  '(token                 "Wm.resizable")
  '(replacement           "resizable (««Wm.resizable:width»», ««Wm.resizable:height»»)")
;;; resizable(width,height)
)

(lse-define-fill-in "Misc.rowconfigure:index" 
  '(description           "Argument 1 of Misc.rowconfigure")
  '(leading               ",")
;;; Misc.rowconfigure:index
)

(lse-define-fill-in "Misc.rowconfigure:cnf" 
  '(description           "Argument 2 of Misc.rowconfigure (default = {})")
  '(leading               ",")
;;; Misc.rowconfigure:cnf
)

(lse-define-fill-in "rowconfigure(index,cnf,kw)" 
  '(token)
  '(token                 "Balloon.rowconfigure")
  '(token                 "BaseWidget.rowconfigure")
  '(token                 "Button.rowconfigure")
  '(token                 "Buttonbox.rowconfigure")
  '(token                 "C_Entry.rowconfigure")
  '(token                 "C_Frame.rowconfigure")
  '(token                 "C_Listbox.rowconfigure")
  '(token                 "C_Menu.rowconfigure")
  '(token                 "C_Text.rowconfigure")
  '(token                 "Canvas.rowconfigure")
  '(token                 "Checkbutton.rowconfigure")
  '(token                 "Combo_Tuple.rowconfigure")
  '(token                 "Combo_Tuple_X.rowconfigure")
  '(token                 "Combobox.rowconfigure")
  '(token                 "Entry.rowconfigure")
  '(token                 "Entrybox.rowconfigure")
  '(token                 "Filename_Entry.rowconfigure")
  '(token                 "Frame.rowconfigure")
  '(token                 "Grid.rowconfigure")
  '(token                 "H_Panedwindow.rowconfigure")
  '(token                 "H_Panedwindow.V_Separator.rowconfigure")
  '(token                 "H_Scrollable.rowconfigure")
  '(token                 "H_Separator.rowconfigure")
  '(token                 "H_Strut.rowconfigure")
  '(token                 "Label.rowconfigure")
  '(token                 "Listbox.rowconfigure")
  '(token                 "Listbox_Tuple.rowconfigure")
  '(token                 "Listdropentry.rowconfigure")
  '(token                 "Listdropspinner.rowconfigure")
  '(token                 "Listspinner.rowconfigure")
  '(token                 "Menu.rowconfigure")
  '(token                 "Menubutton.rowconfigure")
  '(token                 "Message.rowconfigure")
  '(token                 "Message_Window.rowconfigure")
  '(token                 "Misc.rowconfigure")
  '(token                 "Multicombobox.rowconfigure")
  '(token                 "Multicombobox_X.rowconfigure")
  '(token                 "Notebook.rowconfigure")
  '(token                 "Num_Spinner.rowconfigure")
  '(token                 "OptionMenu.rowconfigure")
  '(token                 "Progress_Gauge.rowconfigure")
  '(token                 "Progress_Gauge_T.rowconfigure")
  '(token                 "Radiobutton.rowconfigure")
  '(token                 "Scale.rowconfigure")
  '(token                 "Scrollbar.rowconfigure")
  '(token                 "Scrolled_Listbox.rowconfigure")
  '(token                 "Scrolled_Text.rowconfigure")
  '(token                 "Slide_Show.rowconfigure")
  '(token                 "Statuslabel.rowconfigure")
  '(token                 "Statuslabel.Label.rowconfigure")
  '(token                 "Statustext.rowconfigure")
  '(token                 "Statustext.Text.rowconfigure")
  '(token                 "Studbutton.rowconfigure")
  '(token                 "Tabbed_Notebook.rowconfigure")
  '(token                 "Text.rowconfigure")
  '(token                 "Tk.rowconfigure")
  '(token                 "Toplevel.rowconfigure")
  '(token                 "Tributton.rowconfigure")
  '(token                 "Up_Down_Button.rowconfigure")
  '(token                 "V_Panedwindow.rowconfigure")
  '(token                 "V_Panedwindow.H_Separator.rowconfigure")
  '(token                 "V_Scrollable.rowconfigure")
  '(token                 "V_Separator.rowconfigure")
  '(token                 "V_Strut.rowconfigure")
  '(token                 "Widget.rowconfigure")
  '(token                 "_C_Frame.rowconfigure")
  '(token                 "_Combobox.Scrolled_Listbox.rowconfigure")
  '(token                 "_Panedwindow.rowconfigure")
  '(token                 "_Scrollable.rowconfigure")
  '(token                 "_Separator.rowconfigure")
  '(token                 "_Spinnerentry.rowconfigure")
  '(token                 "_Statusframe.rowconfigure")
  '(replacement           "rowconfigure («Misc.rowconfigure:index», ««Misc.rowconfigure:cnf»», ««py-named-arg»»···)")
;;; rowconfigure(index,cnf,kw)
)

(lse-define-fill-in "Functor.run:args" 
  '(description           "Argument 1 of Functor.run")
  '(leading               ",")
  '(separator             ", ")
;;; Functor.run:args
)

(lse-define-fill-in "run(args)" 
  '(token)
  '(token                 "Functor.run")
  '(replacement           "run (««Functor.run:args»»···)")
;;; run(args)
)

(lse-define-fill-in "Canvas.scale:args" 
  '(description           "Argument 1 of Canvas.scale")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.scale:args
)

(lse-define-fill-in "scale(args)" 
  '(token)
  '(token                 "Canvas.scale")
  '(replacement           "scale (««Canvas.scale:args»»···)")
;;; scale(args)
)

(lse-define-fill-in "Group.scale:xOrigin" 
  '(description           "Argument 1 of Group.scale")
  '(leading               ",")
;;; Group.scale:xOrigin
)

(lse-define-fill-in "Group.scale:yOrigin" 
  '(description           "Argument 2 of Group.scale")
  '(leading               ",")
;;; Group.scale:yOrigin
)

(lse-define-fill-in "Group.scale:xScale" 
  '(description           "Argument 3 of Group.scale")
  '(leading               ",")
;;; Group.scale:xScale
)

(lse-define-fill-in "Group.scale:yScale" 
  '(description           "Argument 4 of Group.scale")
  '(leading               ",")
;;; Group.scale:yScale
)

(lse-define-fill-in "scale(xOrigin,yOrigin,xScale,yScale)" 
  '(token)
  '(token                 "Group.scale")
  '(replacement           "scale («Group.scale:xOrigin», «Group.scale:yOrigin», «Group.scale:xScale», «Group.scale:yScale»)")
;;; scale(xOrigin,yOrigin,xScale,yScale)
)

(lse-define-fill-in "CanvasItem.scale:xorigin" 
  '(description           "Argument 1 of CanvasItem.scale")
  '(leading               ",")
;;; CanvasItem.scale:xorigin
)

(lse-define-fill-in "CanvasItem.scale:yorigin" 
  '(description           "Argument 2 of CanvasItem.scale")
  '(leading               ",")
;;; CanvasItem.scale:yorigin
)

(lse-define-fill-in "CanvasItem.scale:xscale" 
  '(description           "Argument 3 of CanvasItem.scale")
  '(leading               ",")
;;; CanvasItem.scale:xscale
)

(lse-define-fill-in "CanvasItem.scale:yscale" 
  '(description           "Argument 4 of CanvasItem.scale")
  '(leading               ",")
;;; CanvasItem.scale:yscale
)

(lse-define-fill-in "scale(xorigin,yorigin,xscale,yscale)" 
  '(token)
  '(token                 "Arc.scale")
  '(token                 "Bitmap.scale")
  '(token                 "CanvasItem.scale")
  '(token                 "CanvasText.scale")
  '(token                 "ImageItem.scale")
  '(token                 "Line.scale")
  '(token                 "Oval.scale")
  '(token                 "Polygon.scale")
  '(token                 "Rectangle.scale")
  '(token                 "Window.scale")
  '(replacement           "scale («CanvasItem.scale:xorigin», «CanvasItem.scale:yorigin», «CanvasItem.scale:xscale», «CanvasItem.scale:yscale»)")
;;; scale(xorigin,yorigin,xscale,yscale)
)

(lse-define-fill-in "_V_Scrolled_Tuple.scan_dragto:event" 
  '(description           "Argument 1 of _V_Scrolled_Tuple.scan_dragto")
  '(leading               ",")
;;; _V_Scrolled_Tuple.scan_dragto:event
)

(lse-define-fill-in "scan_dragto(event)" 
  '(token)
  '(token                 "Combo_Tuple.scan_dragto")
  '(token                 "Combo_Tuple_X.scan_dragto")
  '(token                 "Listbox_Tuple.scan_dragto")
  '(token                 "_Listbox_Tuple.scan_dragto")
  '(token                 "_V_Scrolled_Tuple.scan_dragto")
  '(replacement           "scan_dragto («_V_Scrolled_Tuple.scan_dragto:event»)")
;;; scan_dragto(event)
)

(lse-define-fill-in "Entry.scan_dragto:x" 
  '(description           "Argument 1 of Entry.scan_dragto")
  '(leading               ",")
;;; Entry.scan_dragto:x
)

(lse-define-fill-in "scan_dragto(x)" 
  '(token)
  '(token                 "Entry.scan_dragto")
  '(replacement           "scan_dragto («Entry.scan_dragto:x»)")
;;; scan_dragto(x)
)

(lse-define-fill-in "Canvas.scan_dragto:x" 
  '(description           "Argument 1 of Canvas.scan_dragto")
  '(leading               ",")
;;; Canvas.scan_dragto:x
)

(lse-define-fill-in "Canvas.scan_dragto:y" 
  '(description           "Argument 2 of Canvas.scan_dragto")
  '(leading               ",")
;;; Canvas.scan_dragto:y
)

(lse-define-fill-in "scan_dragto(x,y)" 
  '(token)
  '(token                 "Canvas.scan_dragto")
  '(token                 "Listbox.scan_dragto")
  '(token                 "Statustext.Text.scan_dragto")
  '(token                 "Text.scan_dragto")
  '(replacement           "scan_dragto («Canvas.scan_dragto:x», «Canvas.scan_dragto:y»)")
;;; scan_dragto(x,y)
)

(lse-define-fill-in "_V_Scrolled_Tuple.scan_mark:event" 
  '(description           "Argument 1 of _V_Scrolled_Tuple.scan_mark")
  '(leading               ",")
;;; _V_Scrolled_Tuple.scan_mark:event
)

(lse-define-fill-in "scan_mark(event)" 
  '(token)
  '(token                 "Combo_Tuple.scan_mark")
  '(token                 "Combo_Tuple_X.scan_mark")
  '(token                 "Listbox_Tuple.scan_mark")
  '(token                 "_Listbox_Tuple.scan_mark")
  '(token                 "_V_Scrolled_Tuple.scan_mark")
  '(replacement           "scan_mark («_V_Scrolled_Tuple.scan_mark:event»)")
;;; scan_mark(event)
)

(lse-define-fill-in "Entry.scan_mark:x" 
  '(description           "Argument 1 of Entry.scan_mark")
  '(leading               ",")
;;; Entry.scan_mark:x
)

(lse-define-fill-in "scan_mark(x)" 
  '(token)
  '(token                 "Entry.scan_mark")
  '(replacement           "scan_mark («Entry.scan_mark:x»)")
;;; scan_mark(x)
)

(lse-define-fill-in "Canvas.scan_mark:x" 
  '(description           "Argument 1 of Canvas.scan_mark")
  '(leading               ",")
;;; Canvas.scan_mark:x
)

(lse-define-fill-in "Canvas.scan_mark:y" 
  '(description           "Argument 2 of Canvas.scan_mark")
  '(leading               ",")
;;; Canvas.scan_mark:y
)

(lse-define-fill-in "scan_mark(x,y)" 
  '(token)
  '(token                 "Canvas.scan_mark")
  '(token                 "Listbox.scan_mark")
  '(token                 "Statustext.Text.scan_mark")
  '(token                 "Text.scan_mark")
  '(replacement           "scan_mark («Canvas.scan_mark:x», «Canvas.scan_mark:y»)")
;;; scan_mark(x,y)
)

(lse-define-fill-in "scroll_pack()" 
  '(token)
  '(token                 "V_Scrollable.scroll_pack")
  '(replacement           "scroll_pack ()")
;;; scroll_pack()
)

(lse-define-fill-in "scroll_unpack()" 
  '(token)
  '(token                 "H_Scrollable.scroll_unpack")
  '(token                 "V_Scrollable.scroll_unpack")
  '(replacement           "scroll_unpack ()")
;;; scroll_unpack()
)

(lse-define-fill-in "Statustext.Text.search:pattern" 
  '(description           "Argument 1 of Statustext.Text.search")
  '(leading               ",")
;;; Statustext.Text.search:pattern
)

(lse-define-fill-in "Statustext.Text.search:index" 
  '(description           "Argument 2 of Statustext.Text.search")
  '(leading               ",")
;;; Statustext.Text.search:index
)

(lse-define-fill-in "Statustext.Text.search:stopindex" 
  '(description           "Argument 3 of Statustext.Text.search (default = None)")
  '(leading               ",")
;;; Statustext.Text.search:stopindex
)

(lse-define-fill-in "Statustext.Text.search:forwards" 
  '(description           "Argument 4 of Statustext.Text.search (default = None)")
  '(leading               ",")
;;; Statustext.Text.search:forwards
)

(lse-define-fill-in "Statustext.Text.search:backwards" 
  '(description           "Argument 5 of Statustext.Text.search (default = None)")
  '(leading               ",")
;;; Statustext.Text.search:backwards
)

(lse-define-fill-in "Statustext.Text.search:exact" 
  '(description           "Argument 6 of Statustext.Text.search (default = None)")
  '(leading               ",")
;;; Statustext.Text.search:exact
)

(lse-define-fill-in "Statustext.Text.search:regexp" 
  '(description           "Argument 7 of Statustext.Text.search (default = None)")
  '(leading               ",")
;;; Statustext.Text.search:regexp
)

(lse-define-fill-in "Statustext.Text.search:nocase" 
  '(description           "Argument 8 of Statustext.Text.search (default = None)")
  '(leading               ",")
;;; Statustext.Text.search:nocase
)

(lse-define-fill-in "Statustext.Text.search:count" 
  '(description           "Argument 9 of Statustext.Text.search (default = None)")
  '(leading               ",")
;;; Statustext.Text.search:count
)

(lse-define-fill-in "search(pattern,index,stopindex,forwards,backwards,exact,regexp,nocase,count)" 
  '(token)
  '(token                 "Statustext.Text.search")
  '(token                 "Text.search")
  '(replacement           "search («Statustext.Text.search:pattern», «Statustext.Text.search:index», ««Statustext.Text.search:stopindex»», ««Statustext.Text.search:forwards»», ««Statustext.Text.search:backwards»», ««Statustext.Text.search:exact»», ««Statustext.Text.search:regexp»», ««Statustext.Text.search:nocase»», ««Statustext.Text.search:count»»)")
;;; search(pattern,index,stopindex,forwards,backwards,exact,regexp,nocase,count)
)

(lse-define-fill-in "Listbox.see:index" 
  '(description           "Argument 1 of Listbox.see")
  '(leading               ",")
;;; Listbox.see:index
)

(lse-define-fill-in "see(index)" 
  '(token)
  '(token                 "Listbox.see")
  '(token                 "Statustext.Text.see")
  '(token                 "Text.see")
  '(replacement           "see («Listbox.see:index»)")
;;; see(index)
)

(lse-define-fill-in "Message_Window.see:pos" 
  '(description           "Scroll text widget so that `pos' is visible.")
  '(leading               ",")
;;; Message_Window.see:pos
)

(lse-define-fill-in "see(pos)" 
  '(description           "Scroll text widget so that `pos' is visible.")
  '(token)
  '(token                 "Message_Window.see")
  '(replacement           "see («Message_Window.see:pos»)")
;;; see(pos)
)

(lse-define-fill-in "V_Scrollable.see:widget" 
  '(description           "Scrolls so that `widget' is in view.")
  '(leading               ",")
;;; V_Scrollable.see:widget
)

(lse-define-fill-in "see(widget)" 
  '(description           "Scrolls so that `widget' is in view.")
  '(token)
  '(token                 "V_Scrollable.see")
  '(replacement           "see («V_Scrollable.see:widget»)")
;;; see(widget)
)

(lse-define-fill-in "V_Scrollable.see_y_fraction:fraction" 
  '(description           "Scrolls so that vertical position `fraction' is in view.")
  '(leading               ",")
;;; V_Scrollable.see_y_fraction:fraction
)

(lse-define-fill-in "V_Scrollable.see_y_fraction:epsilon" 
  '(description           "Argument 2 of V_Scrollable.see_y_fraction")
  '(leading               ",")
;;; V_Scrollable.see_y_fraction:epsilon
)

(lse-define-fill-in "see_y_fraction(fraction,epsilon)" 
  '(description           "Scrolls so that vertical position `fraction' is in view.")
  '(token)
  '(token                 "V_Scrollable.see_y_fraction")
  '(replacement           "see_y_fraction («V_Scrollable.see_y_fraction:fraction», «V_Scrollable.see_y_fraction:epsilon»)")
;;; see_y_fraction(fraction,epsilon)
)

(lse-define-fill-in "select()" 
  '(token)
  '(token                 "Checkbutton.select")
  '(token                 "Radiobutton.select")
  '(replacement           "select ()")
;;; select()
)

(lse-define-fill-in "Combo_Entry.select:i" 
  '(description           "Argument 1 of Combo_Entry.select")
  '(leading               ",")
;;; Combo_Entry.select:i
)

(lse-define-fill-in "select(i)" 
  '(token)
  '(token                 "Combo_Entry.select")
  '(token                 "Combo_Tuple.select")
  '(token                 "Combobox.select")
  '(token                 "Multicombobox.select")
  '(token                 "Multicombobox_X.select")
  '(token                 "Slide_Show.select")
  '(token                 "_Combobox.select")
  '(replacement           "select («Combo_Entry.select:i»)")
;;; select(i)
)

(lse-define-fill-in "_Listdrop.select:i" 
  '(description           "Argument 1 of _Listdrop.select")
  '(leading               ",")
;;; _Listdrop.select:i
)

(lse-define-fill-in "_Listdrop.select:event" 
  '(description           "Argument 2 of _Listdrop.select (default = None)")
  '(leading               ",")
;;; _Listdrop.select:event
)

(lse-define-fill-in "select(i,event)" 
  '(token)
  '(token                 "Listdropentry.select")
  '(token                 "Listdropspinner.select")
  '(token                 "_Listdrop.select")
  '(replacement           "select («_Listdrop.select:i», ««_Listdrop.select:event»»)")
;;; select(i,event)
)

(lse-define-fill-in "C_Listbox.select:index" 
  '(description           "Argument 1 of C_Listbox.select")
  '(leading               ",")
;;; C_Listbox.select:index
)

(lse-define-fill-in "select(index)" 
  '(token)
  '(token                 "C_Listbox.select")
  '(token                 "Scrolled_Listbox.select")
  '(token                 "_Combobox.Scrolled_Listbox.select")
  '(token                 "_Listbox_Tuple.select")
  '(replacement           "select («C_Listbox.select:index»)")
;;; select(index)
)

(lse-define-fill-in "Notebook.select:page" 
  '(description           "Display `page'.")
  '(leading               ",")
;;; Notebook.select:page
)

(lse-define-fill-in "select(page)" 
  '(description           "Display `page'.")
  '(token)
  '(token                 "Notebook.select")
  '(token                 "Tabbed_Notebook.select")
  '(replacement           "select («Notebook.select:page»)")
;;; select(page)
)

(lse-define-fill-in "Entry.select_adjust:index" 
  '(description           "Argument 1 of Entry.select_adjust")
  '(leading               ",")
;;; Entry.select_adjust:index
)

(lse-define-fill-in "select_adjust(index)" 
  '(token)
  '(token                 "Entry.select_adjust")
  '(token                 "Group.select_adjust")
  '(replacement           "select_adjust («Entry.select_adjust:index»)")
;;; select_adjust(index)
)

(lse-define-fill-in "Canvas.select_adjust:tagOrId" 
  '(description           "Argument 1 of Canvas.select_adjust")
  '(leading               ",")
;;; Canvas.select_adjust:tagOrId
)

(lse-define-fill-in "Canvas.select_adjust:index" 
  '(description           "Argument 2 of Canvas.select_adjust")
  '(leading               ",")
;;; Canvas.select_adjust:index
)

(lse-define-fill-in "select_adjust(tagOrId,index)" 
  '(token)
  '(token                 "Canvas.select_adjust")
  '(replacement           "select_adjust («Canvas.select_adjust:tagOrId», «Canvas.select_adjust:index»)")
;;; select_adjust(tagOrId,index)
)

(lse-define-fill-in "Listbox.select_anchor:index" 
  '(description           "Argument 1 of Listbox.select_anchor")
  '(leading               ",")
;;; Listbox.select_anchor:index
)

(lse-define-fill-in "select_anchor(index)" 
  '(token)
  '(token                 "Listbox.select_anchor")
  '(replacement           "select_anchor («Listbox.select_anchor:index»)")
;;; select_anchor(index)
)

(lse-define-fill-in "select_clear()" 
  '(token)
  '(token                 "Canvas.select_clear")
  '(token                 "Entry.select_clear")
  '(replacement           "select_clear ()")
;;; select_clear()
)

(lse-define-fill-in "Listbox.select_clear:first" 
  '(description           "Argument 1 of Listbox.select_clear")
  '(leading               ",")
;;; Listbox.select_clear:first
)

(lse-define-fill-in "Listbox.select_clear:last" 
  '(description           "Argument 2 of Listbox.select_clear (default = None)")
  '(leading               ",")
;;; Listbox.select_clear:last
)

(lse-define-fill-in "select_clear(first,last)" 
  '(token)
  '(token                 "Listbox.select_clear")
  '(replacement           "select_clear («Listbox.select_clear:first», ««Listbox.select_clear:last»»)")
;;; select_clear(first,last)
)

(lse-define-fill-in "Entry.select_from:index" 
  '(description           "Argument 1 of Entry.select_from")
  '(leading               ",")
;;; Entry.select_from:index
)

(lse-define-fill-in "select_from(index)" 
  '(token)
  '(token                 "Entry.select_from")
  '(token                 "Group.select_from")
  '(replacement           "select_from («Entry.select_from:index»)")
;;; select_from(index)
)

(lse-define-fill-in "Canvas.select_from:tagOrId" 
  '(description           "Argument 1 of Canvas.select_from")
  '(leading               ",")
;;; Canvas.select_from:tagOrId
)

(lse-define-fill-in "Canvas.select_from:index" 
  '(description           "Argument 2 of Canvas.select_from")
  '(leading               ",")
;;; Canvas.select_from:index
)

(lse-define-fill-in "select_from(tagOrId,index)" 
  '(token)
  '(token                 "Canvas.select_from")
  '(replacement           "select_from («Canvas.select_from:tagOrId», «Canvas.select_from:index»)")
;;; select_from(tagOrId,index)
)

(lse-define-fill-in "Listbox.select_includes:index" 
  '(description           "Argument 1 of Listbox.select_includes")
  '(leading               ",")
;;; Listbox.select_includes:index
)

(lse-define-fill-in "select_includes(index)" 
  '(token)
  '(token                 "Listbox.select_includes")
  '(replacement           "select_includes («Listbox.select_includes:index»)")
;;; select_includes(index)
)

(lse-define-fill-in "select_item()" 
  '(token)
  '(token                 "Canvas.select_item")
  '(replacement           "select_item ()")
;;; select_item()
)

(lse-define-fill-in "select_present()" 
  '(token)
  '(token                 "Entry.select_present")
  '(replacement           "select_present ()")
;;; select_present()
)

(lse-define-fill-in "Entry.select_range:start" 
  '(description           "Argument 1 of Entry.select_range")
  '(leading               ",")
;;; Entry.select_range:start
)

(lse-define-fill-in "Entry.select_range:end" 
  '(description           "Argument 2 of Entry.select_range")
  '(leading               ",")
;;; Entry.select_range:end
)

(lse-define-fill-in "select_range(start,end)" 
  '(token)
  '(token                 "Entry.select_range")
  '(replacement           "select_range («Entry.select_range:start», «Entry.select_range:end»)")
;;; select_range(start,end)
)

(lse-define-fill-in "Listbox.select_set:first" 
  '(description           "Argument 1 of Listbox.select_set")
  '(leading               ",")
;;; Listbox.select_set:first
)

(lse-define-fill-in "Listbox.select_set:last" 
  '(description           "Argument 2 of Listbox.select_set (default = None)")
  '(leading               ",")
;;; Listbox.select_set:last
)

(lse-define-fill-in "select_set(first,last)" 
  '(token)
  '(token                 "Listbox.select_set")
  '(replacement           "select_set («Listbox.select_set:first», ««Listbox.select_set:last»»)")
;;; select_set(first,last)
)

(lse-define-fill-in "Entry.select_to:index" 
  '(description           "Argument 1 of Entry.select_to")
  '(leading               ",")
;;; Entry.select_to:index
)

(lse-define-fill-in "select_to(index)" 
  '(token)
  '(token                 "Entry.select_to")
  '(token                 "Group.select_to")
  '(replacement           "select_to («Entry.select_to:index»)")
;;; select_to(index)
)

(lse-define-fill-in "Canvas.select_to:tagOrId" 
  '(description           "Argument 1 of Canvas.select_to")
  '(leading               ",")
;;; Canvas.select_to:tagOrId
)

(lse-define-fill-in "Canvas.select_to:index" 
  '(description           "Argument 2 of Canvas.select_to")
  '(leading               ",")
;;; Canvas.select_to:index
)

(lse-define-fill-in "select_to(tagOrId,index)" 
  '(token)
  '(token                 "Canvas.select_to")
  '(replacement           "select_to («Canvas.select_to:tagOrId», «Canvas.select_to:index»)")
;;; select_to(tagOrId,index)
)

(lse-define-fill-in "Entry.selection_adjust:index" 
  '(description           "Argument 1 of Entry.selection_adjust")
  '(leading               ",")
;;; Entry.selection_adjust:index
)

(lse-define-fill-in "selection_adjust(index)" 
  '(token)
  '(token                 "Entry.selection_adjust")
  '(replacement           "selection_adjust («Entry.selection_adjust:index»)")
;;; selection_adjust(index)
)

(lse-define-fill-in "Listbox.selection_anchor:index" 
  '(description           "Argument 1 of Listbox.selection_anchor")
  '(leading               ",")
;;; Listbox.selection_anchor:index
)

(lse-define-fill-in "selection_anchor(index)" 
  '(token)
  '(token                 "Listbox.selection_anchor")
  '(replacement           "selection_anchor («Listbox.selection_anchor:index»)")
;;; selection_anchor(index)
)

(lse-define-fill-in "selection_clear()" 
  '(token)
  '(token                 "Entry.selection_clear")
  '(replacement           "selection_clear ()")
;;; selection_clear()
)

(lse-define-fill-in "Listbox.selection_clear:first" 
  '(description           "Argument 1 of Listbox.selection_clear")
  '(leading               ",")
;;; Listbox.selection_clear:first
)

(lse-define-fill-in "Listbox.selection_clear:last" 
  '(description           "Argument 2 of Listbox.selection_clear (default = None)")
  '(leading               ",")
;;; Listbox.selection_clear:last
)

(lse-define-fill-in "selection_clear(first,last)" 
  '(token)
  '(token                 "Listbox.selection_clear")
  '(replacement           "selection_clear («Listbox.selection_clear:first», ««Listbox.selection_clear:last»»)")
;;; selection_clear(first,last)
)

(lse-define-fill-in "selection_clear(kw)" 
  '(token)
  '(token                 "Balloon.selection_clear")
  '(token                 "BaseWidget.selection_clear")
  '(token                 "Button.selection_clear")
  '(token                 "Buttonbox.selection_clear")
  '(token                 "C_Entry.selection_clear")
  '(token                 "C_Frame.selection_clear")
  '(token                 "C_Listbox.selection_clear")
  '(token                 "C_Menu.selection_clear")
  '(token                 "C_Text.selection_clear")
  '(token                 "Canvas.selection_clear")
  '(token                 "Checkbutton.selection_clear")
  '(token                 "Combo_Tuple.selection_clear")
  '(token                 "Combo_Tuple_X.selection_clear")
  '(token                 "Combobox.selection_clear")
  '(token                 "Entry.selection_clear")
  '(token                 "Entrybox.selection_clear")
  '(token                 "Filename_Entry.selection_clear")
  '(token                 "Frame.selection_clear")
  '(token                 "H_Panedwindow.selection_clear")
  '(token                 "H_Panedwindow.V_Separator.selection_clear")
  '(token                 "H_Scrollable.selection_clear")
  '(token                 "H_Separator.selection_clear")
  '(token                 "H_Strut.selection_clear")
  '(token                 "Label.selection_clear")
  '(token                 "Listbox.selection_clear")
  '(token                 "Listbox_Tuple.selection_clear")
  '(token                 "Listdropentry.selection_clear")
  '(token                 "Listdropspinner.selection_clear")
  '(token                 "Listspinner.selection_clear")
  '(token                 "Menu.selection_clear")
  '(token                 "Menubutton.selection_clear")
  '(token                 "Message.selection_clear")
  '(token                 "Message_Window.selection_clear")
  '(token                 "Misc.selection_clear")
  '(token                 "Multicombobox.selection_clear")
  '(token                 "Multicombobox_X.selection_clear")
  '(token                 "Notebook.selection_clear")
  '(token                 "Num_Spinner.selection_clear")
  '(token                 "OptionMenu.selection_clear")
  '(token                 "Progress_Gauge.selection_clear")
  '(token                 "Progress_Gauge_T.selection_clear")
  '(token                 "Radiobutton.selection_clear")
  '(token                 "Scale.selection_clear")
  '(token                 "Scrollbar.selection_clear")
  '(token                 "Scrolled_Listbox.selection_clear")
  '(token                 "Scrolled_Text.selection_clear")
  '(token                 "Slide_Show.selection_clear")
  '(token                 "Statuslabel.selection_clear")
  '(token                 "Statuslabel.Label.selection_clear")
  '(token                 "Statustext.selection_clear")
  '(token                 "Statustext.Text.selection_clear")
  '(token                 "Studbutton.selection_clear")
  '(token                 "Tabbed_Notebook.selection_clear")
  '(token                 "Text.selection_clear")
  '(token                 "Tk.selection_clear")
  '(token                 "Toplevel.selection_clear")
  '(token                 "Tributton.selection_clear")
  '(token                 "Up_Down_Button.selection_clear")
  '(token                 "V_Panedwindow.selection_clear")
  '(token                 "V_Panedwindow.H_Separator.selection_clear")
  '(token                 "V_Scrollable.selection_clear")
  '(token                 "V_Separator.selection_clear")
  '(token                 "V_Strut.selection_clear")
  '(token                 "Widget.selection_clear")
  '(token                 "_C_Frame.selection_clear")
  '(token                 "_Combobox.Scrolled_Listbox.selection_clear")
  '(token                 "_Panedwindow.selection_clear")
  '(token                 "_Scrollable.selection_clear")
  '(token                 "_Separator.selection_clear")
  '(token                 "_Spinnerentry.selection_clear")
  '(token                 "_Statusframe.selection_clear")
  '(replacement           "selection_clear (««py-named-arg»»···)")
;;; selection_clear(kw)
)

(lse-define-fill-in "Entry.selection_from:index" 
  '(description           "Argument 1 of Entry.selection_from")
  '(leading               ",")
;;; Entry.selection_from:index
)

(lse-define-fill-in "selection_from(index)" 
  '(token)
  '(token                 "Entry.selection_from")
  '(replacement           "selection_from («Entry.selection_from:index»)")
;;; selection_from(index)
)

(lse-define-fill-in "selection_get(kw)" 
  '(token)
  '(token                 "Balloon.selection_get")
  '(token                 "BaseWidget.selection_get")
  '(token                 "Button.selection_get")
  '(token                 "Buttonbox.selection_get")
  '(token                 "C_Entry.selection_get")
  '(token                 "C_Frame.selection_get")
  '(token                 "C_Listbox.selection_get")
  '(token                 "C_Menu.selection_get")
  '(token                 "C_Text.selection_get")
  '(token                 "Canvas.selection_get")
  '(token                 "Checkbutton.selection_get")
  '(token                 "Combo_Tuple.selection_get")
  '(token                 "Combo_Tuple_X.selection_get")
  '(token                 "Combobox.selection_get")
  '(token                 "Entry.selection_get")
  '(token                 "Entrybox.selection_get")
  '(token                 "Filename_Entry.selection_get")
  '(token                 "Frame.selection_get")
  '(token                 "H_Panedwindow.selection_get")
  '(token                 "H_Panedwindow.V_Separator.selection_get")
  '(token                 "H_Scrollable.selection_get")
  '(token                 "H_Separator.selection_get")
  '(token                 "H_Strut.selection_get")
  '(token                 "Label.selection_get")
  '(token                 "Listbox.selection_get")
  '(token                 "Listbox_Tuple.selection_get")
  '(token                 "Listdropentry.selection_get")
  '(token                 "Listdropspinner.selection_get")
  '(token                 "Listspinner.selection_get")
  '(token                 "Menu.selection_get")
  '(token                 "Menubutton.selection_get")
  '(token                 "Message.selection_get")
  '(token                 "Message_Window.selection_get")
  '(token                 "Misc.selection_get")
  '(token                 "Multicombobox.selection_get")
  '(token                 "Multicombobox_X.selection_get")
  '(token                 "Notebook.selection_get")
  '(token                 "Num_Spinner.selection_get")
  '(token                 "OptionMenu.selection_get")
  '(token                 "Progress_Gauge.selection_get")
  '(token                 "Progress_Gauge_T.selection_get")
  '(token                 "Radiobutton.selection_get")
  '(token                 "Scale.selection_get")
  '(token                 "Scrollbar.selection_get")
  '(token                 "Scrolled_Listbox.selection_get")
  '(token                 "Scrolled_Text.selection_get")
  '(token                 "Slide_Show.selection_get")
  '(token                 "Statuslabel.selection_get")
  '(token                 "Statuslabel.Label.selection_get")
  '(token                 "Statustext.selection_get")
  '(token                 "Statustext.Text.selection_get")
  '(token                 "Studbutton.selection_get")
  '(token                 "Tabbed_Notebook.selection_get")
  '(token                 "Text.selection_get")
  '(token                 "Tk.selection_get")
  '(token                 "Toplevel.selection_get")
  '(token                 "Tributton.selection_get")
  '(token                 "Up_Down_Button.selection_get")
  '(token                 "V_Panedwindow.selection_get")
  '(token                 "V_Panedwindow.H_Separator.selection_get")
  '(token                 "V_Scrollable.selection_get")
  '(token                 "V_Separator.selection_get")
  '(token                 "V_Strut.selection_get")
  '(token                 "Widget.selection_get")
  '(token                 "_C_Frame.selection_get")
  '(token                 "_Combobox.Scrolled_Listbox.selection_get")
  '(token                 "_Panedwindow.selection_get")
  '(token                 "_Scrollable.selection_get")
  '(token                 "_Separator.selection_get")
  '(token                 "_Spinnerentry.selection_get")
  '(token                 "_Statusframe.selection_get")
  '(replacement           "selection_get (««py-named-arg»»···)")
;;; selection_get(kw)
)

(lse-define-fill-in "Misc.selection_handle:command" 
  '(description           "Argument 1 of Misc.selection_handle")
  '(leading               ",")
;;; Misc.selection_handle:command
)

(lse-define-fill-in "selection_handle(command,kw)" 
  '(token)
  '(token                 "Balloon.selection_handle")
  '(token                 "BaseWidget.selection_handle")
  '(token                 "Button.selection_handle")
  '(token                 "Buttonbox.selection_handle")
  '(token                 "C_Entry.selection_handle")
  '(token                 "C_Frame.selection_handle")
  '(token                 "C_Listbox.selection_handle")
  '(token                 "C_Menu.selection_handle")
  '(token                 "C_Text.selection_handle")
  '(token                 "Canvas.selection_handle")
  '(token                 "Checkbutton.selection_handle")
  '(token                 "Combo_Tuple.selection_handle")
  '(token                 "Combo_Tuple_X.selection_handle")
  '(token                 "Combobox.selection_handle")
  '(token                 "Entry.selection_handle")
  '(token                 "Entrybox.selection_handle")
  '(token                 "Filename_Entry.selection_handle")
  '(token                 "Frame.selection_handle")
  '(token                 "H_Panedwindow.selection_handle")
  '(token                 "H_Panedwindow.V_Separator.selection_handle")
  '(token                 "H_Scrollable.selection_handle")
  '(token                 "H_Separator.selection_handle")
  '(token                 "H_Strut.selection_handle")
  '(token                 "Label.selection_handle")
  '(token                 "Listbox.selection_handle")
  '(token                 "Listbox_Tuple.selection_handle")
  '(token                 "Listdropentry.selection_handle")
  '(token                 "Listdropspinner.selection_handle")
  '(token                 "Listspinner.selection_handle")
  '(token                 "Menu.selection_handle")
  '(token                 "Menubutton.selection_handle")
  '(token                 "Message.selection_handle")
  '(token                 "Message_Window.selection_handle")
  '(token                 "Misc.selection_handle")
  '(token                 "Multicombobox.selection_handle")
  '(token                 "Multicombobox_X.selection_handle")
  '(token                 "Notebook.selection_handle")
  '(token                 "Num_Spinner.selection_handle")
  '(token                 "OptionMenu.selection_handle")
  '(token                 "Progress_Gauge.selection_handle")
  '(token                 "Progress_Gauge_T.selection_handle")
  '(token                 "Radiobutton.selection_handle")
  '(token                 "Scale.selection_handle")
  '(token                 "Scrollbar.selection_handle")
  '(token                 "Scrolled_Listbox.selection_handle")
  '(token                 "Scrolled_Text.selection_handle")
  '(token                 "Slide_Show.selection_handle")
  '(token                 "Statuslabel.selection_handle")
  '(token                 "Statuslabel.Label.selection_handle")
  '(token                 "Statustext.selection_handle")
  '(token                 "Statustext.Text.selection_handle")
  '(token                 "Studbutton.selection_handle")
  '(token                 "Tabbed_Notebook.selection_handle")
  '(token                 "Text.selection_handle")
  '(token                 "Tk.selection_handle")
  '(token                 "Toplevel.selection_handle")
  '(token                 "Tributton.selection_handle")
  '(token                 "Up_Down_Button.selection_handle")
  '(token                 "V_Panedwindow.selection_handle")
  '(token                 "V_Panedwindow.H_Separator.selection_handle")
  '(token                 "V_Scrollable.selection_handle")
  '(token                 "V_Separator.selection_handle")
  '(token                 "V_Strut.selection_handle")
  '(token                 "Widget.selection_handle")
  '(token                 "_C_Frame.selection_handle")
  '(token                 "_Combobox.Scrolled_Listbox.selection_handle")
  '(token                 "_Panedwindow.selection_handle")
  '(token                 "_Scrollable.selection_handle")
  '(token                 "_Separator.selection_handle")
  '(token                 "_Spinnerentry.selection_handle")
  '(token                 "_Statusframe.selection_handle")
  '(replacement           "selection_handle («Misc.selection_handle:command», ««py-named-arg»»···)")
;;; selection_handle(command,kw)
)

(lse-define-fill-in "Listbox.selection_includes:index" 
  '(description           "Argument 1 of Listbox.selection_includes")
  '(leading               ",")
;;; Listbox.selection_includes:index
)

(lse-define-fill-in "selection_includes(index)" 
  '(token)
  '(token                 "Listbox.selection_includes")
  '(replacement           "selection_includes («Listbox.selection_includes:index»)")
;;; selection_includes(index)
)

(lse-define-fill-in "selection_own(kw)" 
  '(description           "Become owner of X selection.")
  '(token)
  '(token                 "Balloon.selection_own")
  '(token                 "BaseWidget.selection_own")
  '(token                 "Button.selection_own")
  '(token                 "Buttonbox.selection_own")
  '(token                 "C_Entry.selection_own")
  '(token                 "C_Frame.selection_own")
  '(token                 "C_Listbox.selection_own")
  '(token                 "C_Menu.selection_own")
  '(token                 "C_Text.selection_own")
  '(token                 "Canvas.selection_own")
  '(token                 "Checkbutton.selection_own")
  '(token                 "Combo_Tuple.selection_own")
  '(token                 "Combo_Tuple_X.selection_own")
  '(token                 "Combobox.selection_own")
  '(token                 "Entry.selection_own")
  '(token                 "Entrybox.selection_own")
  '(token                 "Filename_Entry.selection_own")
  '(token                 "Frame.selection_own")
  '(token                 "H_Panedwindow.selection_own")
  '(token                 "H_Panedwindow.V_Separator.selection_own")
  '(token                 "H_Scrollable.selection_own")
  '(token                 "H_Separator.selection_own")
  '(token                 "H_Strut.selection_own")
  '(token                 "Label.selection_own")
  '(token                 "Listbox.selection_own")
  '(token                 "Listbox_Tuple.selection_own")
  '(token                 "Listdropentry.selection_own")
  '(token                 "Listdropspinner.selection_own")
  '(token                 "Listspinner.selection_own")
  '(token                 "Menu.selection_own")
  '(token                 "Menubutton.selection_own")
  '(token                 "Message.selection_own")
  '(token                 "Message_Window.selection_own")
  '(token                 "Misc.selection_own")
  '(token                 "Multicombobox.selection_own")
  '(token                 "Multicombobox_X.selection_own")
  '(token                 "Notebook.selection_own")
  '(token                 "Num_Spinner.selection_own")
  '(token                 "OptionMenu.selection_own")
  '(token                 "Progress_Gauge.selection_own")
  '(token                 "Progress_Gauge_T.selection_own")
  '(token                 "Radiobutton.selection_own")
  '(token                 "Scale.selection_own")
  '(token                 "Scrollbar.selection_own")
  '(token                 "Scrolled_Listbox.selection_own")
  '(token                 "Scrolled_Text.selection_own")
  '(token                 "Slide_Show.selection_own")
  '(token                 "Statuslabel.selection_own")
  '(token                 "Statuslabel.Label.selection_own")
  '(token                 "Statustext.selection_own")
  '(token                 "Statustext.Text.selection_own")
  '(token                 "Studbutton.selection_own")
  '(token                 "Tabbed_Notebook.selection_own")
  '(token                 "Text.selection_own")
  '(token                 "Tk.selection_own")
  '(token                 "Toplevel.selection_own")
  '(token                 "Tributton.selection_own")
  '(token                 "Up_Down_Button.selection_own")
  '(token                 "V_Panedwindow.selection_own")
  '(token                 "V_Panedwindow.H_Separator.selection_own")
  '(token                 "V_Scrollable.selection_own")
  '(token                 "V_Separator.selection_own")
  '(token                 "V_Strut.selection_own")
  '(token                 "Widget.selection_own")
  '(token                 "_C_Frame.selection_own")
  '(token                 "_Combobox.Scrolled_Listbox.selection_own")
  '(token                 "_Panedwindow.selection_own")
  '(token                 "_Scrollable.selection_own")
  '(token                 "_Separator.selection_own")
  '(token                 "_Spinnerentry.selection_own")
  '(token                 "_Statusframe.selection_own")
  '(replacement           "selection_own (««py-named-arg»»···)")
;;; selection_own(kw)
)

(lse-define-fill-in "selection_own_get(kw)" 
  '(description           "Find owner of X selection.")
  '(token)
  '(token                 "Balloon.selection_own_get")
  '(token                 "BaseWidget.selection_own_get")
  '(token                 "Button.selection_own_get")
  '(token                 "Buttonbox.selection_own_get")
  '(token                 "C_Entry.selection_own_get")
  '(token                 "C_Frame.selection_own_get")
  '(token                 "C_Listbox.selection_own_get")
  '(token                 "C_Menu.selection_own_get")
  '(token                 "C_Text.selection_own_get")
  '(token                 "Canvas.selection_own_get")
  '(token                 "Checkbutton.selection_own_get")
  '(token                 "Combo_Tuple.selection_own_get")
  '(token                 "Combo_Tuple_X.selection_own_get")
  '(token                 "Combobox.selection_own_get")
  '(token                 "Entry.selection_own_get")
  '(token                 "Entrybox.selection_own_get")
  '(token                 "Filename_Entry.selection_own_get")
  '(token                 "Frame.selection_own_get")
  '(token                 "H_Panedwindow.selection_own_get")
  '(token                 "H_Panedwindow.V_Separator.selection_own_get")
  '(token                 "H_Scrollable.selection_own_get")
  '(token                 "H_Separator.selection_own_get")
  '(token                 "H_Strut.selection_own_get")
  '(token                 "Label.selection_own_get")
  '(token                 "Listbox.selection_own_get")
  '(token                 "Listbox_Tuple.selection_own_get")
  '(token                 "Listdropentry.selection_own_get")
  '(token                 "Listdropspinner.selection_own_get")
  '(token                 "Listspinner.selection_own_get")
  '(token                 "Menu.selection_own_get")
  '(token                 "Menubutton.selection_own_get")
  '(token                 "Message.selection_own_get")
  '(token                 "Message_Window.selection_own_get")
  '(token                 "Misc.selection_own_get")
  '(token                 "Multicombobox.selection_own_get")
  '(token                 "Multicombobox_X.selection_own_get")
  '(token                 "Notebook.selection_own_get")
  '(token                 "Num_Spinner.selection_own_get")
  '(token                 "OptionMenu.selection_own_get")
  '(token                 "Progress_Gauge.selection_own_get")
  '(token                 "Progress_Gauge_T.selection_own_get")
  '(token                 "Radiobutton.selection_own_get")
  '(token                 "Scale.selection_own_get")
  '(token                 "Scrollbar.selection_own_get")
  '(token                 "Scrolled_Listbox.selection_own_get")
  '(token                 "Scrolled_Text.selection_own_get")
  '(token                 "Slide_Show.selection_own_get")
  '(token                 "Statuslabel.selection_own_get")
  '(token                 "Statuslabel.Label.selection_own_get")
  '(token                 "Statustext.selection_own_get")
  '(token                 "Statustext.Text.selection_own_get")
  '(token                 "Studbutton.selection_own_get")
  '(token                 "Tabbed_Notebook.selection_own_get")
  '(token                 "Text.selection_own_get")
  '(token                 "Tk.selection_own_get")
  '(token                 "Toplevel.selection_own_get")
  '(token                 "Tributton.selection_own_get")
  '(token                 "Up_Down_Button.selection_own_get")
  '(token                 "V_Panedwindow.selection_own_get")
  '(token                 "V_Panedwindow.H_Separator.selection_own_get")
  '(token                 "V_Scrollable.selection_own_get")
  '(token                 "V_Separator.selection_own_get")
  '(token                 "V_Strut.selection_own_get")
  '(token                 "Widget.selection_own_get")
  '(token                 "_C_Frame.selection_own_get")
  '(token                 "_Combobox.Scrolled_Listbox.selection_own_get")
  '(token                 "_Panedwindow.selection_own_get")
  '(token                 "_Scrollable.selection_own_get")
  '(token                 "_Separator.selection_own_get")
  '(token                 "_Spinnerentry.selection_own_get")
  '(token                 "_Statusframe.selection_own_get")
  '(replacement           "selection_own_get (««py-named-arg»»···)")
;;; selection_own_get(kw)
)

(lse-define-fill-in "selection_present()" 
  '(token)
  '(token                 "Entry.selection_present")
  '(replacement           "selection_present ()")
;;; selection_present()
)

(lse-define-fill-in "Entry.selection_range:start" 
  '(description           "Argument 1 of Entry.selection_range")
  '(leading               ",")
;;; Entry.selection_range:start
)

(lse-define-fill-in "Entry.selection_range:end" 
  '(description           "Argument 2 of Entry.selection_range")
  '(leading               ",")
;;; Entry.selection_range:end
)

(lse-define-fill-in "selection_range(start,end)" 
  '(token)
  '(token                 "Entry.selection_range")
  '(replacement           "selection_range («Entry.selection_range:start», «Entry.selection_range:end»)")
;;; selection_range(start,end)
)

(lse-define-fill-in "Listbox.selection_set:first" 
  '(description           "Argument 1 of Listbox.selection_set")
  '(leading               ",")
;;; Listbox.selection_set:first
)

(lse-define-fill-in "Listbox.selection_set:last" 
  '(description           "Argument 2 of Listbox.selection_set (default = None)")
  '(leading               ",")
;;; Listbox.selection_set:last
)

(lse-define-fill-in "selection_set(first,last)" 
  '(token)
  '(token                 "Listbox.selection_set")
  '(replacement           "selection_set («Listbox.selection_set:first», ««Listbox.selection_set:last»»)")
;;; selection_set(first,last)
)

(lse-define-fill-in "Entry.selection_to:index" 
  '(description           "Argument 1 of Entry.selection_to")
  '(leading               ",")
;;; Entry.selection_to:index
)

(lse-define-fill-in "selection_to(index)" 
  '(token)
  '(token                 "Entry.selection_to")
  '(replacement           "selection_to («Entry.selection_to:index»)")
;;; selection_to(index)
)

(lse-define-fill-in "Misc.send:interp" 
  '(description           "Argument 1 of Misc.send")
  '(leading               ",")
;;; Misc.send:interp
)

(lse-define-fill-in "Misc.send:cmd" 
  '(description           "Argument 2 of Misc.send")
  '(leading               ",")
;;; Misc.send:cmd
)

(lse-define-fill-in "Misc.send:args" 
  '(description           "Argument 3 of Misc.send")
  '(leading               ",")
  '(separator             ", ")
;;; Misc.send:args
)

(lse-define-fill-in "send(interp,cmd,args)" 
  '(token)
  '(token                 "Balloon.send")
  '(token                 "BaseWidget.send")
  '(token                 "Button.send")
  '(token                 "Buttonbox.send")
  '(token                 "C_Entry.send")
  '(token                 "C_Frame.send")
  '(token                 "C_Listbox.send")
  '(token                 "C_Menu.send")
  '(token                 "C_Text.send")
  '(token                 "Canvas.send")
  '(token                 "Checkbutton.send")
  '(token                 "Combo_Tuple.send")
  '(token                 "Combo_Tuple_X.send")
  '(token                 "Combobox.send")
  '(token                 "Entry.send")
  '(token                 "Entrybox.send")
  '(token                 "Filename_Entry.send")
  '(token                 "Frame.send")
  '(token                 "H_Panedwindow.send")
  '(token                 "H_Panedwindow.V_Separator.send")
  '(token                 "H_Scrollable.send")
  '(token                 "H_Separator.send")
  '(token                 "H_Strut.send")
  '(token                 "Label.send")
  '(token                 "Listbox.send")
  '(token                 "Listbox_Tuple.send")
  '(token                 "Listdropentry.send")
  '(token                 "Listdropspinner.send")
  '(token                 "Listspinner.send")
  '(token                 "Menu.send")
  '(token                 "Menubutton.send")
  '(token                 "Message.send")
  '(token                 "Message_Window.send")
  '(token                 "Misc.send")
  '(token                 "Multicombobox.send")
  '(token                 "Multicombobox_X.send")
  '(token                 "Notebook.send")
  '(token                 "Num_Spinner.send")
  '(token                 "OptionMenu.send")
  '(token                 "Progress_Gauge.send")
  '(token                 "Progress_Gauge_T.send")
  '(token                 "Radiobutton.send")
  '(token                 "Scale.send")
  '(token                 "Scrollbar.send")
  '(token                 "Scrolled_Listbox.send")
  '(token                 "Scrolled_Text.send")
  '(token                 "Slide_Show.send")
  '(token                 "Statuslabel.send")
  '(token                 "Statuslabel.Label.send")
  '(token                 "Statustext.send")
  '(token                 "Statustext.Text.send")
  '(token                 "Studbutton.send")
  '(token                 "Tabbed_Notebook.send")
  '(token                 "Text.send")
  '(token                 "Tk.send")
  '(token                 "Toplevel.send")
  '(token                 "Tributton.send")
  '(token                 "Up_Down_Button.send")
  '(token                 "V_Panedwindow.send")
  '(token                 "V_Panedwindow.H_Separator.send")
  '(token                 "V_Scrollable.send")
  '(token                 "V_Separator.send")
  '(token                 "V_Strut.send")
  '(token                 "Widget.send")
  '(token                 "_C_Frame.send")
  '(token                 "_Combobox.Scrolled_Listbox.send")
  '(token                 "_Panedwindow.send")
  '(token                 "_Scrollable.send")
  '(token                 "_Separator.send")
  '(token                 "_Spinnerentry.send")
  '(token                 "_Statusframe.send")
  '(replacement           "send («Misc.send:interp», «Misc.send:cmd», ««Misc.send:args»»···)")
;;; send(interp,cmd,args)
)

(lse-define-fill-in "Scrollbar.set:args" 
  '(description           "Argument 1 of Scrollbar.set")
  '(leading               ",")
  '(separator             ", ")
;;; Scrollbar.set:args
)

(lse-define-fill-in "set(args)" 
  '(token)
  '(token                 "Scrollbar.set")
  '(replacement           "set (««Scrollbar.set:args»»···)")
;;; set(args)
)

(lse-define-fill-in "Variable.set:value" 
  '(description           "Argument 1 of Variable.set")
  '(leading               ",")
;;; Variable.set:value
)

(lse-define-fill-in "set(value)" 
  '(token)
  '(token                 "BooleanVar.set")
  '(token                 "C_Entry.set")
  '(token                 "DoubleVar.set")
  '(token                 "Entry_Tuple.set")
  '(token                 "IntVar.set")
  '(token                 "Scale.set")
  '(token                 "StringVar.set")
  '(token                 "Variable.set")
  '(replacement           "set («Variable.set:value»)")
;;; set(value)
)

(lse-define-fill-in "Progress_Gauge_T.set_label:args" 
  '(description           "Argument 1 of Progress_Gauge_T.set_label")
  '(leading               ",")
  '(separator             ", ")
;;; Progress_Gauge_T.set_label:args
)

(lse-define-fill-in "set_label(args,kw)" 
  '(token)
  '(token                 "Progress_Gauge_T.set_label")
  '(replacement           "set_label (««Progress_Gauge_T.set_label:args»»···, ««py-named-arg»»···)")
;;; set_label(args,kw)
)

(lse-define-fill-in "Progress_Gauge.set_label:text" 
  '(description           "Argument 1 of Progress_Gauge.set_label")
  '(leading               ",")
;;; Progress_Gauge.set_label:text
)

(lse-define-fill-in "set_label(text)" 
  '(token)
  '(token                 "Progress_Gauge.set_label")
  '(replacement           "set_label («Progress_Gauge.set_label:text»)")
;;; set_label(text)
)

(lse-define-fill-in "Progress_Gauge_T.set_value:args" 
  '(description           "Argument 1 of Progress_Gauge_T.set_value")
  '(leading               ",")
  '(separator             ", ")
;;; Progress_Gauge_T.set_value:args
)

(lse-define-fill-in "set_value(args,kw)" 
  '(token)
  '(token                 "Progress_Gauge_T.set_value")
  '(replacement           "set_value (««Progress_Gauge_T.set_value:args»»···, ««py-named-arg»»···)")
;;; set_value(args,kw)
)

(lse-define-fill-in "Progress_Gauge.set_value:value" 
  '(description           "Argument 1 of Progress_Gauge.set_value")
  '(leading               ",")
;;; Progress_Gauge.set_value:value
)

(lse-define-fill-in "set_value(value)" 
  '(token)
  '(token                 "Progress_Gauge.set_value")
  '(replacement           "set_value («Progress_Gauge.set_value:value»)")
;;; set_value(value)
)

(lse-define-fill-in "Misc.setvar:name" 
  '(description           "Argument 1 of Misc.setvar (default = PY_VAR)")
  '(leading               ",")
;;; Misc.setvar:name
)

(lse-define-fill-in "Misc.setvar:value" 
  '(description           "Argument 2 of Misc.setvar (default = 1)")
  '(leading               ",")
;;; Misc.setvar:value
)

(lse-define-fill-in "setvar(name,value)" 
  '(token)
  '(token                 "Balloon.setvar")
  '(token                 "BaseWidget.setvar")
  '(token                 "Button.setvar")
  '(token                 "Buttonbox.setvar")
  '(token                 "C_Entry.setvar")
  '(token                 "C_Frame.setvar")
  '(token                 "C_Listbox.setvar")
  '(token                 "C_Menu.setvar")
  '(token                 "C_Text.setvar")
  '(token                 "Canvas.setvar")
  '(token                 "Checkbutton.setvar")
  '(token                 "Combo_Tuple.setvar")
  '(token                 "Combo_Tuple_X.setvar")
  '(token                 "Combobox.setvar")
  '(token                 "Entry.setvar")
  '(token                 "Entrybox.setvar")
  '(token                 "Filename_Entry.setvar")
  '(token                 "Frame.setvar")
  '(token                 "H_Panedwindow.setvar")
  '(token                 "H_Panedwindow.V_Separator.setvar")
  '(token                 "H_Scrollable.setvar")
  '(token                 "H_Separator.setvar")
  '(token                 "H_Strut.setvar")
  '(token                 "Label.setvar")
  '(token                 "Listbox.setvar")
  '(token                 "Listbox_Tuple.setvar")
  '(token                 "Listdropentry.setvar")
  '(token                 "Listdropspinner.setvar")
  '(token                 "Listspinner.setvar")
  '(token                 "Menu.setvar")
  '(token                 "Menubutton.setvar")
  '(token                 "Message.setvar")
  '(token                 "Message_Window.setvar")
  '(token                 "Misc.setvar")
  '(token                 "Multicombobox.setvar")
  '(token                 "Multicombobox_X.setvar")
  '(token                 "Notebook.setvar")
  '(token                 "Num_Spinner.setvar")
  '(token                 "OptionMenu.setvar")
  '(token                 "Progress_Gauge.setvar")
  '(token                 "Progress_Gauge_T.setvar")
  '(token                 "Radiobutton.setvar")
  '(token                 "Scale.setvar")
  '(token                 "Scrollbar.setvar")
  '(token                 "Scrolled_Listbox.setvar")
  '(token                 "Scrolled_Text.setvar")
  '(token                 "Slide_Show.setvar")
  '(token                 "Statuslabel.setvar")
  '(token                 "Statuslabel.Label.setvar")
  '(token                 "Statustext.setvar")
  '(token                 "Statustext.Text.setvar")
  '(token                 "Studbutton.setvar")
  '(token                 "Tabbed_Notebook.setvar")
  '(token                 "Text.setvar")
  '(token                 "Tk.setvar")
  '(token                 "Toplevel.setvar")
  '(token                 "Tributton.setvar")
  '(token                 "Up_Down_Button.setvar")
  '(token                 "V_Panedwindow.setvar")
  '(token                 "V_Panedwindow.H_Separator.setvar")
  '(token                 "V_Scrollable.setvar")
  '(token                 "V_Separator.setvar")
  '(token                 "V_Strut.setvar")
  '(token                 "Widget.setvar")
  '(token                 "_C_Frame.setvar")
  '(token                 "_Combobox.Scrolled_Listbox.setvar")
  '(token                 "_Panedwindow.setvar")
  '(token                 "_Scrollable.setvar")
  '(token                 "_Separator.setvar")
  '(token                 "_Spinnerentry.setvar")
  '(token                 "_Statusframe.setvar")
  '(replacement           "setvar (««Misc.setvar:name»», ««Misc.setvar:value»»)")
;;; setvar(name,value)
)

(lse-define-fill-in "CT_TK_mixin.show_error:args" 
  '(description           "Argument 1 of CT_TK_mixin.show_error")
  '(leading               ",")
  '(separator             ", ")
;;; CT_TK_mixin.show_error:args
)

(lse-define-fill-in "show_error(args,kw)" 
  '(description           "Display an error window using `tk_messageBox'.")
  '(token)
  '(token                 "Balloon.show_error")
  '(token                 "Buttonbox.show_error")
  '(token                 "CT_TK_mixin.show_error")
  '(token                 "C_Entry.show_error")
  '(token                 "C_Frame.show_error")
  '(token                 "C_Listbox.show_error")
  '(token                 "C_Menu.show_error")
  '(token                 "C_Text.show_error")
  '(token                 "Combo_Tuple.show_error")
  '(token                 "Combo_Tuple_X.show_error")
  '(token                 "Combobox.show_error")
  '(token                 "Entrybox.show_error")
  '(token                 "Filename_Entry.show_error")
  '(token                 "H_Panedwindow.show_error")
  '(token                 "H_Panedwindow.V_Separator.show_error")
  '(token                 "H_Scrollable.show_error")
  '(token                 "H_Separator.show_error")
  '(token                 "H_Strut.show_error")
  '(token                 "Listbox_Tuple.show_error")
  '(token                 "Listdropentry.show_error")
  '(token                 "Listdropspinner.show_error")
  '(token                 "Listspinner.show_error")
  '(token                 "Message_Window.show_error")
  '(token                 "Multicombobox.show_error")
  '(token                 "Multicombobox_X.show_error")
  '(token                 "Notebook.show_error")
  '(token                 "Num_Spinner.show_error")
  '(token                 "Progress_Gauge.show_error")
  '(token                 "Progress_Gauge_T.show_error")
  '(token                 "Scrolled_Listbox.show_error")
  '(token                 "Scrolled_Text.show_error")
  '(token                 "Slide_Show.show_error")
  '(token                 "Statuslabel.show_error")
  '(token                 "Statustext.show_error")
  '(token                 "Tabbed_Notebook.show_error")
  '(token                 "Up_Down_Button.show_error")
  '(token                 "V_Panedwindow.show_error")
  '(token                 "V_Panedwindow.H_Separator.show_error")
  '(token                 "V_Scrollable.show_error")
  '(token                 "V_Separator.show_error")
  '(token                 "V_Strut.show_error")
  '(token                 "_C_Frame.show_error")
  '(token                 "_Combobox.show_error")
  '(token                 "_Combobox.Scrolled_Listbox.show_error")
  '(token                 "_Listdrop.show_error")
  '(token                 "_Listspinner.show_error")
  '(token                 "_Panedwindow.show_error")
  '(token                 "_Scrollable.show_error")
  '(token                 "_Separator.show_error")
  '(token                 "_Spinner.show_error")
  '(token                 "_Spinnerentry.show_error")
  '(token                 "_Statusframe.show_error")
  '(replacement           "show_error (««CT_TK_mixin.show_error:args»»···, ««py-named-arg»»···)")
;;; show_error(args,kw)
)

(lse-define-fill-in "CT_TK_mixin.show_info:args" 
  '(description           "Argument 1 of CT_TK_mixin.show_info")
  '(leading               ",")
  '(separator             ", ")
;;; CT_TK_mixin.show_info:args
)

(lse-define-fill-in "show_info(args,kw)" 
  '(description           "Display an info window using `tk_messageBox'.")
  '(token)
  '(token                 "Balloon.show_info")
  '(token                 "Buttonbox.show_info")
  '(token                 "CT_TK_mixin.show_info")
  '(token                 "C_Entry.show_info")
  '(token                 "C_Frame.show_info")
  '(token                 "C_Listbox.show_info")
  '(token                 "C_Menu.show_info")
  '(token                 "C_Text.show_info")
  '(token                 "Combo_Tuple.show_info")
  '(token                 "Combo_Tuple_X.show_info")
  '(token                 "Combobox.show_info")
  '(token                 "Entrybox.show_info")
  '(token                 "Filename_Entry.show_info")
  '(token                 "H_Panedwindow.show_info")
  '(token                 "H_Panedwindow.V_Separator.show_info")
  '(token                 "H_Scrollable.show_info")
  '(token                 "H_Separator.show_info")
  '(token                 "H_Strut.show_info")
  '(token                 "Listbox_Tuple.show_info")
  '(token                 "Listdropentry.show_info")
  '(token                 "Listdropspinner.show_info")
  '(token                 "Listspinner.show_info")
  '(token                 "Message_Window.show_info")
  '(token                 "Multicombobox.show_info")
  '(token                 "Multicombobox_X.show_info")
  '(token                 "Notebook.show_info")
  '(token                 "Num_Spinner.show_info")
  '(token                 "Progress_Gauge.show_info")
  '(token                 "Progress_Gauge_T.show_info")
  '(token                 "Scrolled_Listbox.show_info")
  '(token                 "Scrolled_Text.show_info")
  '(token                 "Slide_Show.show_info")
  '(token                 "Statuslabel.show_info")
  '(token                 "Statustext.show_info")
  '(token                 "Tabbed_Notebook.show_info")
  '(token                 "Up_Down_Button.show_info")
  '(token                 "V_Panedwindow.show_info")
  '(token                 "V_Panedwindow.H_Separator.show_info")
  '(token                 "V_Scrollable.show_info")
  '(token                 "V_Separator.show_info")
  '(token                 "V_Strut.show_info")
  '(token                 "_C_Frame.show_info")
  '(token                 "_Combobox.show_info")
  '(token                 "_Combobox.Scrolled_Listbox.show_info")
  '(token                 "_Listdrop.show_info")
  '(token                 "_Listspinner.show_info")
  '(token                 "_Panedwindow.show_info")
  '(token                 "_Scrollable.show_info")
  '(token                 "_Separator.show_info")
  '(token                 "_Spinner.show_info")
  '(token                 "_Spinnerentry.show_info")
  '(token                 "_Statusframe.show_info")
  '(replacement           "show_info (««CT_TK_mixin.show_info:args»»···, ««py-named-arg»»···)")
;;; show_info(args,kw)
)

(lse-define-fill-in "CT_TK_mixin.show_warning:args" 
  '(description           "Argument 1 of CT_TK_mixin.show_warning")
  '(leading               ",")
  '(separator             ", ")
;;; CT_TK_mixin.show_warning:args
)

(lse-define-fill-in "show_warning(args,kw)" 
  '(description           "Display a warning window using `tk_messageBox'.")
  '(token)
  '(token                 "Balloon.show_warning")
  '(token                 "Buttonbox.show_warning")
  '(token                 "CT_TK_mixin.show_warning")
  '(token                 "C_Entry.show_warning")
  '(token                 "C_Frame.show_warning")
  '(token                 "C_Listbox.show_warning")
  '(token                 "C_Menu.show_warning")
  '(token                 "C_Text.show_warning")
  '(token                 "Combo_Tuple.show_warning")
  '(token                 "Combo_Tuple_X.show_warning")
  '(token                 "Combobox.show_warning")
  '(token                 "Entrybox.show_warning")
  '(token                 "Filename_Entry.show_warning")
  '(token                 "H_Panedwindow.show_warning")
  '(token                 "H_Panedwindow.V_Separator.show_warning")
  '(token                 "H_Scrollable.show_warning")
  '(token                 "H_Separator.show_warning")
  '(token                 "H_Strut.show_warning")
  '(token                 "Listbox_Tuple.show_warning")
  '(token                 "Listdropentry.show_warning")
  '(token                 "Listdropspinner.show_warning")
  '(token                 "Listspinner.show_warning")
  '(token                 "Message_Window.show_warning")
  '(token                 "Multicombobox.show_warning")
  '(token                 "Multicombobox_X.show_warning")
  '(token                 "Notebook.show_warning")
  '(token                 "Num_Spinner.show_warning")
  '(token                 "Progress_Gauge.show_warning")
  '(token                 "Progress_Gauge_T.show_warning")
  '(token                 "Scrolled_Listbox.show_warning")
  '(token                 "Scrolled_Text.show_warning")
  '(token                 "Slide_Show.show_warning")
  '(token                 "Statuslabel.show_warning")
  '(token                 "Statustext.show_warning")
  '(token                 "Tabbed_Notebook.show_warning")
  '(token                 "Up_Down_Button.show_warning")
  '(token                 "V_Panedwindow.show_warning")
  '(token                 "V_Panedwindow.H_Separator.show_warning")
  '(token                 "V_Scrollable.show_warning")
  '(token                 "V_Separator.show_warning")
  '(token                 "V_Strut.show_warning")
  '(token                 "_C_Frame.show_warning")
  '(token                 "_Combobox.show_warning")
  '(token                 "_Combobox.Scrolled_Listbox.show_warning")
  '(token                 "_Listdrop.show_warning")
  '(token                 "_Listspinner.show_warning")
  '(token                 "_Panedwindow.show_warning")
  '(token                 "_Scrollable.show_warning")
  '(token                 "_Separator.show_warning")
  '(token                 "_Spinner.show_warning")
  '(token                 "_Spinnerentry.show_warning")
  '(token                 "_Statusframe.show_warning")
  '(replacement           "show_warning (««CT_TK_mixin.show_warning:args»»···, ««py-named-arg»»···)")
;;; show_warning(args,kw)
)

(lse-define-fill-in "V_Scrollable.shrink_maybe:event" 
  '(description           "Argument 1 of V_Scrollable.shrink_maybe (default = None)")
  '(leading               ",")
;;; V_Scrollable.shrink_maybe:event
)

(lse-define-fill-in "shrink_maybe(event)" 
  '(token)
  '(token                 "V_Scrollable.shrink_maybe")
  '(replacement           "shrink_maybe (««V_Scrollable.shrink_maybe:event»»)")
;;; shrink_maybe(event)
)

(lse-define-fill-in "size()" 
  '(token)
  '(token                 "Balloon.size")
  '(token                 "BaseWidget.size")
  '(token                 "Button.size")
  '(token                 "Buttonbox.size")
  '(token                 "C_Entry.size")
  '(token                 "C_Frame.size")
  '(token                 "C_Listbox.size")
  '(token                 "C_Menu.size")
  '(token                 "C_Text.size")
  '(token                 "Canvas.size")
  '(token                 "Checkbutton.size")
  '(token                 "Combo_Tuple.size")
  '(token                 "Combo_Tuple_X.size")
  '(token                 "Combobox.size")
  '(token                 "Entry.size")
  '(token                 "Entrybox.size")
  '(token                 "Filename_Entry.size")
  '(token                 "Frame.size")
  '(token                 "Grid.size")
  '(token                 "H_Panedwindow.size")
  '(token                 "H_Panedwindow.V_Separator.size")
  '(token                 "H_Scrollable.size")
  '(token                 "H_Separator.size")
  '(token                 "H_Strut.size")
  '(token                 "Label.size")
  '(token                 "Listbox.size")
  '(token                 "Listbox_Tuple.size")
  '(token                 "Listdropentry.size")
  '(token                 "Listdropspinner.size")
  '(token                 "Listspinner.size")
  '(token                 "Menu.size")
  '(token                 "Menubutton.size")
  '(token                 "Message.size")
  '(token                 "Message_Window.size")
  '(token                 "Misc.size")
  '(token                 "Multicombobox.size")
  '(token                 "Multicombobox_X.size")
  '(token                 "Notebook.size")
  '(token                 "Num_Spinner.size")
  '(token                 "OptionMenu.size")
  '(token                 "Progress_Gauge.size")
  '(token                 "Progress_Gauge_T.size")
  '(token                 "Radiobutton.size")
  '(token                 "Scale.size")
  '(token                 "Scrollbar.size")
  '(token                 "Scrolled_Listbox.size")
  '(token                 "Scrolled_Text.size")
  '(token                 "Slide_Show.size")
  '(token                 "Statuslabel.size")
  '(token                 "Statuslabel.Label.size")
  '(token                 "Statustext.size")
  '(token                 "Statustext.Text.size")
  '(token                 "Studbutton.size")
  '(token                 "Tabbed_Notebook.size")
  '(token                 "Text.size")
  '(token                 "Tk.size")
  '(token                 "Toplevel.size")
  '(token                 "Tributton.size")
  '(token                 "Up_Down_Button.size")
  '(token                 "V_Panedwindow.size")
  '(token                 "V_Panedwindow.H_Separator.size")
  '(token                 "V_Scrollable.size")
  '(token                 "V_Separator.size")
  '(token                 "V_Strut.size")
  '(token                 "Widget.size")
  '(token                 "_C_Frame.size")
  '(token                 "_Combobox.Scrolled_Listbox.size")
  '(token                 "_Panedwindow.size")
  '(token                 "_Scrollable.size")
  '(token                 "_Separator.size")
  '(token                 "_Spinnerentry.size")
  '(token                 "_Statusframe.size")
  '(replacement           "size ()")
;;; size()
)

(lse-define-fill-in "Wm.sizefrom:who" 
  '(description           "Argument 1 of Wm.sizefrom (default = None)")
  '(leading               ",")
;;; Wm.sizefrom:who
)

(lse-define-fill-in "sizefrom(who)" 
  '(token)
  '(token                 "Balloon.sizefrom")
  '(token                 "Progress_Gauge_T.sizefrom")
  '(token                 "Tk.sizefrom")
  '(token                 "Toplevel.sizefrom")
  '(token                 "Wm.sizefrom")
  '(replacement           "sizefrom (««Wm.sizefrom:who»»)")
;;; sizefrom(who)
)

(lse-define-fill-in "slaves()" 
  '(token)
  '(token                 "Balloon.slaves")
  '(token                 "BaseWidget.slaves")
  '(token                 "Button.slaves")
  '(token                 "Buttonbox.slaves")
  '(token                 "C_Entry.slaves")
  '(token                 "C_Frame.slaves")
  '(token                 "C_Listbox.slaves")
  '(token                 "C_Menu.slaves")
  '(token                 "C_Text.slaves")
  '(token                 "Canvas.slaves")
  '(token                 "Checkbutton.slaves")
  '(token                 "Combo_Tuple.slaves")
  '(token                 "Combo_Tuple_X.slaves")
  '(token                 "Combobox.slaves")
  '(token                 "Entry.slaves")
  '(token                 "Entrybox.slaves")
  '(token                 "Filename_Entry.slaves")
  '(token                 "Frame.slaves")
  '(token                 "H_Panedwindow.slaves")
  '(token                 "H_Panedwindow.V_Separator.slaves")
  '(token                 "H_Scrollable.slaves")
  '(token                 "H_Separator.slaves")
  '(token                 "H_Strut.slaves")
  '(token                 "Label.slaves")
  '(token                 "Listbox.slaves")
  '(token                 "Listbox_Tuple.slaves")
  '(token                 "Listdropentry.slaves")
  '(token                 "Listdropspinner.slaves")
  '(token                 "Listspinner.slaves")
  '(token                 "Menu.slaves")
  '(token                 "Menubutton.slaves")
  '(token                 "Message.slaves")
  '(token                 "Message_Window.slaves")
  '(token                 "Misc.slaves")
  '(token                 "Multicombobox.slaves")
  '(token                 "Multicombobox_X.slaves")
  '(token                 "Notebook.slaves")
  '(token                 "Num_Spinner.slaves")
  '(token                 "OptionMenu.slaves")
  '(token                 "Pack.slaves")
  '(token                 "Place.slaves")
  '(token                 "Progress_Gauge.slaves")
  '(token                 "Progress_Gauge_T.slaves")
  '(token                 "Radiobutton.slaves")
  '(token                 "Scale.slaves")
  '(token                 "Scrollbar.slaves")
  '(token                 "Scrolled_Listbox.slaves")
  '(token                 "Scrolled_Text.slaves")
  '(token                 "Slide_Show.slaves")
  '(token                 "Statuslabel.slaves")
  '(token                 "Statuslabel.Label.slaves")
  '(token                 "Statustext.slaves")
  '(token                 "Statustext.Text.slaves")
  '(token                 "Studbutton.slaves")
  '(token                 "Tabbed_Notebook.slaves")
  '(token                 "Text.slaves")
  '(token                 "Tk.slaves")
  '(token                 "Toplevel.slaves")
  '(token                 "Tributton.slaves")
  '(token                 "Up_Down_Button.slaves")
  '(token                 "V_Panedwindow.slaves")
  '(token                 "V_Panedwindow.H_Separator.slaves")
  '(token                 "V_Scrollable.slaves")
  '(token                 "V_Separator.slaves")
  '(token                 "V_Strut.slaves")
  '(token                 "Widget.slaves")
  '(token                 "_C_Frame.slaves")
  '(token                 "_Combobox.Scrolled_Listbox.slaves")
  '(token                 "_Panedwindow.slaves")
  '(token                 "_Scrollable.slaves")
  '(token                 "_Separator.slaves")
  '(token                 "_Spinnerentry.slaves")
  '(token                 "_Statusframe.slaves")
  '(replacement           "slaves ()")
;;; slaves()
)

(lse-define-fill-in "Grid.slaves:row" 
  '(description           "Argument 1 of Grid.slaves (default = None)")
  '(leading               ",")
;;; Grid.slaves:row
)

(lse-define-fill-in "Grid.slaves:column" 
  '(description           "Argument 2 of Grid.slaves (default = None)")
  '(leading               ",")
;;; Grid.slaves:column
)

(lse-define-fill-in "slaves(row,column)" 
  '(token)
  '(token                 "Button.slaves")
  '(token                 "Buttonbox.slaves")
  '(token                 "C_Entry.slaves")
  '(token                 "C_Frame.slaves")
  '(token                 "C_Listbox.slaves")
  '(token                 "C_Menu.slaves")
  '(token                 "C_Text.slaves")
  '(token                 "Canvas.slaves")
  '(token                 "Checkbutton.slaves")
  '(token                 "Combo_Tuple.slaves")
  '(token                 "Combo_Tuple_X.slaves")
  '(token                 "Combobox.slaves")
  '(token                 "Entry.slaves")
  '(token                 "Entrybox.slaves")
  '(token                 "Filename_Entry.slaves")
  '(token                 "Frame.slaves")
  '(token                 "Grid.slaves")
  '(token                 "H_Panedwindow.slaves")
  '(token                 "H_Panedwindow.V_Separator.slaves")
  '(token                 "H_Scrollable.slaves")
  '(token                 "H_Separator.slaves")
  '(token                 "H_Strut.slaves")
  '(token                 "Label.slaves")
  '(token                 "Listbox.slaves")
  '(token                 "Listbox_Tuple.slaves")
  '(token                 "Listdropentry.slaves")
  '(token                 "Listdropspinner.slaves")
  '(token                 "Listspinner.slaves")
  '(token                 "Menu.slaves")
  '(token                 "Menubutton.slaves")
  '(token                 "Message.slaves")
  '(token                 "Message_Window.slaves")
  '(token                 "Multicombobox.slaves")
  '(token                 "Multicombobox_X.slaves")
  '(token                 "Notebook.slaves")
  '(token                 "Num_Spinner.slaves")
  '(token                 "OptionMenu.slaves")
  '(token                 "Progress_Gauge.slaves")
  '(token                 "Radiobutton.slaves")
  '(token                 "Scale.slaves")
  '(token                 "Scrollbar.slaves")
  '(token                 "Scrolled_Listbox.slaves")
  '(token                 "Scrolled_Text.slaves")
  '(token                 "Slide_Show.slaves")
  '(token                 "Statuslabel.slaves")
  '(token                 "Statuslabel.Label.slaves")
  '(token                 "Statustext.slaves")
  '(token                 "Statustext.Text.slaves")
  '(token                 "Studbutton.slaves")
  '(token                 "Tabbed_Notebook.slaves")
  '(token                 "Text.slaves")
  '(token                 "Tributton.slaves")
  '(token                 "Up_Down_Button.slaves")
  '(token                 "V_Panedwindow.slaves")
  '(token                 "V_Panedwindow.H_Separator.slaves")
  '(token                 "V_Scrollable.slaves")
  '(token                 "V_Separator.slaves")
  '(token                 "V_Strut.slaves")
  '(token                 "Widget.slaves")
  '(token                 "_C_Frame.slaves")
  '(token                 "_Combobox.Scrolled_Listbox.slaves")
  '(token                 "_Panedwindow.slaves")
  '(token                 "_Scrollable.slaves")
  '(token                 "_Separator.slaves")
  '(token                 "_Spinnerentry.slaves")
  '(token                 "_Statusframe.slaves")
  '(replacement           "slaves (««Grid.slaves:row»», ««Grid.slaves:column»»)")
;;; slaves(row,column)
)

(lse-define-fill-in "state()" 
  '(token)
  '(token                 "Balloon.state")
  '(token                 "Progress_Gauge_T.state")
  '(token                 "Tk.state")
  '(token                 "Toplevel.state")
  '(token                 "Wm.state")
  '(replacement           "state ()")
;;; state()
)

(lse-define-fill-in "str()" 
  '(token)
  '(token                 "Group.str")
  '(replacement           "str ()")
;;; str()
)

(lse-define-fill-in "PhotoImage.subsample:x" 
  '(description           "Argument 1 of PhotoImage.subsample")
  '(leading               ",")
;;; PhotoImage.subsample:x
)

(lse-define-fill-in "PhotoImage.subsample:y" 
  '(description           "Argument 2 of PhotoImage.subsample (default = )")
  '(leading               ",")
;;; PhotoImage.subsample:y
)

(lse-define-fill-in "subsample(x,y)" 
  '(token)
  '(token                 "PhotoImage.subsample")
  '(replacement           "subsample («PhotoImage.subsample:x», ««PhotoImage.subsample:y»»)")
;;; subsample(x,y)
)

(lse-define-fill-in "Statustext.Text.tag_add:tagName" 
  '(description           "Argument 1 of Statustext.Text.tag_add")
  '(leading               ",")
;;; Statustext.Text.tag_add:tagName
)

(lse-define-fill-in "Statustext.Text.tag_add:index1" 
  '(description           "Argument 2 of Statustext.Text.tag_add")
  '(leading               ",")
;;; Statustext.Text.tag_add:index1
)

(lse-define-fill-in "Statustext.Text.tag_add:index2" 
  '(description           "Argument 3 of Statustext.Text.tag_add (default = None)")
  '(leading               ",")
;;; Statustext.Text.tag_add:index2
)

(lse-define-fill-in "tag_add(tagName,index1,index2)" 
  '(token)
  '(token                 "Statustext.Text.tag_add")
  '(token                 "Text.tag_add")
  '(replacement           "tag_add («Statustext.Text.tag_add:tagName», «Statustext.Text.tag_add:index1», ««Statustext.Text.tag_add:index2»»)")
;;; tag_add(tagName,index1,index2)
)

(lse-define-fill-in "Statustext.Text.tag_bind:tagName" 
  '(description           "Argument 1 of Statustext.Text.tag_bind")
  '(leading               ",")
;;; Statustext.Text.tag_bind:tagName
)

(lse-define-fill-in "Statustext.Text.tag_bind:sequence" 
  '(description           "Argument 2 of Statustext.Text.tag_bind")
  '(leading               ",")
;;; Statustext.Text.tag_bind:sequence
)

(lse-define-fill-in "Statustext.Text.tag_bind:func" 
  '(description           "Argument 3 of Statustext.Text.tag_bind")
  '(leading               ",")
;;; Statustext.Text.tag_bind:func
)

(lse-define-fill-in "Statustext.Text.tag_bind:add" 
  '(description           "Argument 4 of Statustext.Text.tag_bind (default = None)")
  '(leading               ",")
;;; Statustext.Text.tag_bind:add
)

(lse-define-fill-in "tag_bind(tagName,sequence,func,add)" 
  '(token)
  '(token                 "Statustext.Text.tag_bind")
  '(token                 "Text.tag_bind")
  '(replacement           "tag_bind («Statustext.Text.tag_bind:tagName», «Statustext.Text.tag_bind:sequence», «Statustext.Text.tag_bind:func», ««Statustext.Text.tag_bind:add»»)")
;;; tag_bind(tagName,sequence,func,add)
)

(lse-define-fill-in "Canvas.tag_bind:tagOrId" 
  '(description           "Argument 1 of Canvas.tag_bind")
  '(leading               ",")
;;; Canvas.tag_bind:tagOrId
)

(lse-define-fill-in "Canvas.tag_bind:sequence" 
  '(description           "Argument 2 of Canvas.tag_bind (default = None)")
  '(leading               ",")
;;; Canvas.tag_bind:sequence
)

(lse-define-fill-in "Canvas.tag_bind:func" 
  '(description           "Argument 3 of Canvas.tag_bind (default = None)")
  '(leading               ",")
;;; Canvas.tag_bind:func
)

(lse-define-fill-in "Canvas.tag_bind:add" 
  '(description           "Argument 4 of Canvas.tag_bind (default = None)")
  '(leading               ",")
;;; Canvas.tag_bind:add
)

(lse-define-fill-in "tag_bind(tagOrId,sequence,func,add)" 
  '(token)
  '(token                 "Canvas.tag_bind")
  '(replacement           "tag_bind («Canvas.tag_bind:tagOrId», ««Canvas.tag_bind:sequence»», ««Canvas.tag_bind:func»», ««Canvas.tag_bind:add»»)")
;;; tag_bind(tagOrId,sequence,func,add)
)

(lse-define-fill-in "Statustext.Text.tag_cget:tagName" 
  '(description           "Argument 1 of Statustext.Text.tag_cget")
  '(leading               ",")
;;; Statustext.Text.tag_cget:tagName
)

(lse-define-fill-in "Statustext.Text.tag_cget:option" 
  '(description           "Argument 2 of Statustext.Text.tag_cget")
  '(leading               ",")
;;; Statustext.Text.tag_cget:option
)

(lse-define-fill-in "tag_cget(tagName,option)" 
  '(token)
  '(token                 "Statustext.Text.tag_cget")
  '(token                 "Text.tag_cget")
  '(replacement           "tag_cget («Statustext.Text.tag_cget:tagName», «Statustext.Text.tag_cget:option»)")
;;; tag_cget(tagName,option)
)

(lse-define-fill-in "Statustext.Text.tag_config:tagName" 
  '(description           "Argument 1 of Statustext.Text.tag_config")
  '(leading               ",")
;;; Statustext.Text.tag_config:tagName
)

(lse-define-fill-in "Statustext.Text.tag_config:cnf" 
  '(description           "Argument 2 of Statustext.Text.tag_config (default = {})")
  '(leading               ",")
;;; Statustext.Text.tag_config:cnf
)

(lse-define-fill-in "tag_config(tagName,cnf,kw)" 
  '(token)
  '(token                 "Statustext.Text.tag_config")
  '(token                 "Text.tag_config")
  '(replacement           "tag_config («Statustext.Text.tag_config:tagName», ««Statustext.Text.tag_config:cnf»», ««py-named-arg»»···)")
;;; tag_config(tagName,cnf,kw)
)

(lse-define-fill-in "Statustext.Text.tag_configure:tagName" 
  '(description           "Argument 1 of Statustext.Text.tag_configure")
  '(leading               ",")
;;; Statustext.Text.tag_configure:tagName
)

(lse-define-fill-in "Statustext.Text.tag_configure:cnf" 
  '(description           "Argument 2 of Statustext.Text.tag_configure (default = {})")
  '(leading               ",")
;;; Statustext.Text.tag_configure:cnf
)

(lse-define-fill-in "tag_configure(tagName,cnf,kw)" 
  '(token)
  '(token                 "Statustext.Text.tag_configure")
  '(token                 "Text.tag_configure")
  '(replacement           "tag_configure («Statustext.Text.tag_configure:tagName», ««Statustext.Text.tag_configure:cnf»», ««py-named-arg»»···)")
;;; tag_configure(tagName,cnf,kw)
)

(lse-define-fill-in "Statustext.Text.tag_delete:tagNames" 
  '(description           "Argument 1 of Statustext.Text.tag_delete")
  '(leading               ",")
  '(separator             ", ")
;;; Statustext.Text.tag_delete:tagNames
)

(lse-define-fill-in "tag_delete(tagNames)" 
  '(token)
  '(token                 "Statustext.Text.tag_delete")
  '(token                 "Text.tag_delete")
  '(replacement           "tag_delete (««Statustext.Text.tag_delete:tagNames»»···)")
;;; tag_delete(tagNames)
)

(lse-define-fill-in "Statustext.Text.tag_lower:tagName" 
  '(description           "Argument 1 of Statustext.Text.tag_lower")
  '(leading               ",")
;;; Statustext.Text.tag_lower:tagName
)

(lse-define-fill-in "Statustext.Text.tag_lower:belowThis" 
  '(description           "Argument 2 of Statustext.Text.tag_lower (default = None)")
  '(leading               ",")
;;; Statustext.Text.tag_lower:belowThis
)

(lse-define-fill-in "tag_lower(tagName,belowThis)" 
  '(token)
  '(token                 "Statustext.Text.tag_lower")
  '(token                 "Text.tag_lower")
  '(replacement           "tag_lower («Statustext.Text.tag_lower:tagName», ««Statustext.Text.tag_lower:belowThis»»)")
;;; tag_lower(tagName,belowThis)
)

(lse-define-fill-in "Statustext.Text.tag_names:index" 
  '(description           "Argument 1 of Statustext.Text.tag_names (default = None)")
  '(leading               ",")
;;; Statustext.Text.tag_names:index
)

(lse-define-fill-in "tag_names(index)" 
  '(token)
  '(token                 "Statustext.Text.tag_names")
  '(token                 "Text.tag_names")
  '(replacement           "tag_names (««Statustext.Text.tag_names:index»»)")
;;; tag_names(index)
)

(lse-define-fill-in "Statustext.Text.tag_nextrange:tagName" 
  '(description           "Argument 1 of Statustext.Text.tag_nextrange")
  '(leading               ",")
;;; Statustext.Text.tag_nextrange:tagName
)

(lse-define-fill-in "Statustext.Text.tag_nextrange:index1" 
  '(description           "Argument 2 of Statustext.Text.tag_nextrange")
  '(leading               ",")
;;; Statustext.Text.tag_nextrange:index1
)

(lse-define-fill-in "Statustext.Text.tag_nextrange:index2" 
  '(description           "Argument 3 of Statustext.Text.tag_nextrange (default = None)")
  '(leading               ",")
;;; Statustext.Text.tag_nextrange:index2
)

(lse-define-fill-in "tag_nextrange(tagName,index1,index2)" 
  '(token)
  '(token                 "Statustext.Text.tag_nextrange")
  '(token                 "Text.tag_nextrange")
  '(replacement           "tag_nextrange («Statustext.Text.tag_nextrange:tagName», «Statustext.Text.tag_nextrange:index1», ««Statustext.Text.tag_nextrange:index2»»)")
;;; tag_nextrange(tagName,index1,index2)
)

(lse-define-fill-in "Statustext.Text.tag_prevrange:tagName" 
  '(description           "Argument 1 of Statustext.Text.tag_prevrange")
  '(leading               ",")
;;; Statustext.Text.tag_prevrange:tagName
)

(lse-define-fill-in "Statustext.Text.tag_prevrange:index1" 
  '(description           "Argument 2 of Statustext.Text.tag_prevrange")
  '(leading               ",")
;;; Statustext.Text.tag_prevrange:index1
)

(lse-define-fill-in "Statustext.Text.tag_prevrange:index2" 
  '(description           "Argument 3 of Statustext.Text.tag_prevrange (default = None)")
  '(leading               ",")
;;; Statustext.Text.tag_prevrange:index2
)

(lse-define-fill-in "tag_prevrange(tagName,index1,index2)" 
  '(token)
  '(token                 "Statustext.Text.tag_prevrange")
  '(token                 "Text.tag_prevrange")
  '(replacement           "tag_prevrange («Statustext.Text.tag_prevrange:tagName», «Statustext.Text.tag_prevrange:index1», ««Statustext.Text.tag_prevrange:index2»»)")
;;; tag_prevrange(tagName,index1,index2)
)

(lse-define-fill-in "Statustext.Text.tag_raise:tagName" 
  '(description           "Argument 1 of Statustext.Text.tag_raise")
  '(leading               ",")
;;; Statustext.Text.tag_raise:tagName
)

(lse-define-fill-in "Statustext.Text.tag_raise:aboveThis" 
  '(description           "Argument 2 of Statustext.Text.tag_raise (default = None)")
  '(leading               ",")
;;; Statustext.Text.tag_raise:aboveThis
)

(lse-define-fill-in "tag_raise(tagName,aboveThis)" 
  '(token)
  '(token                 "Statustext.Text.tag_raise")
  '(token                 "Text.tag_raise")
  '(replacement           "tag_raise («Statustext.Text.tag_raise:tagName», ««Statustext.Text.tag_raise:aboveThis»»)")
;;; tag_raise(tagName,aboveThis)
)

(lse-define-fill-in "Statustext.Text.tag_ranges:tagName" 
  '(description           "Argument 1 of Statustext.Text.tag_ranges")
  '(leading               ",")
;;; Statustext.Text.tag_ranges:tagName
)

(lse-define-fill-in "tag_ranges(tagName)" 
  '(token)
  '(token                 "Statustext.Text.tag_ranges")
  '(token                 "Text.tag_ranges")
  '(replacement           "tag_ranges («Statustext.Text.tag_ranges:tagName»)")
;;; tag_ranges(tagName)
)

(lse-define-fill-in "Statustext.Text.tag_remove:tagName" 
  '(description           "Argument 1 of Statustext.Text.tag_remove")
  '(leading               ",")
;;; Statustext.Text.tag_remove:tagName
)

(lse-define-fill-in "Statustext.Text.tag_remove:index1" 
  '(description           "Argument 2 of Statustext.Text.tag_remove")
  '(leading               ",")
;;; Statustext.Text.tag_remove:index1
)

(lse-define-fill-in "Statustext.Text.tag_remove:index2" 
  '(description           "Argument 3 of Statustext.Text.tag_remove (default = None)")
  '(leading               ",")
;;; Statustext.Text.tag_remove:index2
)

(lse-define-fill-in "tag_remove(tagName,index1,index2)" 
  '(token)
  '(token                 "Statustext.Text.tag_remove")
  '(token                 "Text.tag_remove")
  '(replacement           "tag_remove («Statustext.Text.tag_remove:tagName», «Statustext.Text.tag_remove:index1», ««Statustext.Text.tag_remove:index2»»)")
;;; tag_remove(tagName,index1,index2)
)

(lse-define-fill-in "Statustext.Text.tag_unbind:tagName" 
  '(description           "Argument 1 of Statustext.Text.tag_unbind")
  '(leading               ",")
;;; Statustext.Text.tag_unbind:tagName
)

(lse-define-fill-in "Statustext.Text.tag_unbind:sequence" 
  '(description           "Argument 2 of Statustext.Text.tag_unbind")
  '(leading               ",")
;;; Statustext.Text.tag_unbind:sequence
)

(lse-define-fill-in "Statustext.Text.tag_unbind:funcid" 
  '(description           "Argument 3 of Statustext.Text.tag_unbind (default = None)")
  '(leading               ",")
;;; Statustext.Text.tag_unbind:funcid
)

(lse-define-fill-in "tag_unbind(tagName,sequence,funcid)" 
  '(token)
  '(token                 "Statustext.Text.tag_unbind")
  '(token                 "Text.tag_unbind")
  '(replacement           "tag_unbind («Statustext.Text.tag_unbind:tagName», «Statustext.Text.tag_unbind:sequence», ««Statustext.Text.tag_unbind:funcid»»)")
;;; tag_unbind(tagName,sequence,funcid)
)

(lse-define-fill-in "Canvas.tag_unbind:tagOrId" 
  '(description           "Argument 1 of Canvas.tag_unbind")
  '(leading               ",")
;;; Canvas.tag_unbind:tagOrId
)

(lse-define-fill-in "Canvas.tag_unbind:sequence" 
  '(description           "Argument 2 of Canvas.tag_unbind")
  '(leading               ",")
;;; Canvas.tag_unbind:sequence
)

(lse-define-fill-in "Canvas.tag_unbind:funcid" 
  '(description           "Argument 3 of Canvas.tag_unbind (default = None)")
  '(leading               ",")
;;; Canvas.tag_unbind:funcid
)

(lse-define-fill-in "tag_unbind(tagOrId,sequence,funcid)" 
  '(token)
  '(token                 "Canvas.tag_unbind")
  '(replacement           "tag_unbind («Canvas.tag_unbind:tagOrId», «Canvas.tag_unbind:sequence», ««Canvas.tag_unbind:funcid»»)")
;;; tag_unbind(tagOrId,sequence,funcid)
)

(lse-define-fill-in "Multicombobox_X.target_add:entry" 
  '(description           "Argument 1 of Multicombobox_X.target_add")
  '(leading               ",")
;;; Multicombobox_X.target_add:entry
)

(lse-define-fill-in "target_add(entry,pack_kw)" 
  '(token)
  '(token                 "Multicombobox_X.target_add")
  '(replacement           "target_add («Multicombobox_X.target_add:entry», ««py-named-arg»»···)")
;;; target_add(entry,pack_kw)
)

(lse-define-fill-in "target_get()" 
  '(token)
  '(token                 "Multicombobox_X.target_get")
  '(replacement           "target_get ()")
;;; target_get()
)

(lse-define-fill-in "Multicombobox_X.target_set:value" 
  '(description           "Argument 1 of Multicombobox_X.target_set")
  '(leading               ",")
;;; Multicombobox_X.target_set:value
)

(lse-define-fill-in "target_set(value)" 
  '(token)
  '(token                 "Multicombobox_X.target_set")
  '(replacement           "target_set («Multicombobox_X.target_set:value»)")
;;; target_set(value)
)

(lse-define-fill-in "text()" 
  '(token)
  '(token                 "Statuslabel.text")
  '(token                 "Statustext.text")
  '(replacement           "text ()")
;;; text()
)

(lse-define-fill-in "Wm.title:string" 
  '(description           "Argument 1 of Wm.title (default = None)")
  '(leading               ",")
;;; Wm.title:string
)

(lse-define-fill-in "title(string)" 
  '(token)
  '(token                 "Balloon.title")
  '(token                 "Progress_Gauge_T.title")
  '(token                 "Tk.title")
  '(token                 "Toplevel.title")
  '(token                 "Wm.title")
  '(replacement           "title (««Wm.title:string»»)")
;;; title(string)
)

(lse-define-fill-in "Button.tkButtonDown:dummy" 
  '(description           "Argument 1 of Button.tkButtonDown")
  '(leading               ",")
  '(separator             ", ")
;;; Button.tkButtonDown:dummy
)

(lse-define-fill-in "tkButtonDown(dummy)" 
  '(token)
  '(token                 "Button.tkButtonDown")
  '(token                 "Studbutton.tkButtonDown")
  '(token                 "Tributton.tkButtonDown")
  '(replacement           "tkButtonDown (««Button.tkButtonDown:dummy»»···)")
;;; tkButtonDown(dummy)
)

(lse-define-fill-in "Button.tkButtonEnter:dummy" 
  '(description           "Argument 1 of Button.tkButtonEnter")
  '(leading               ",")
  '(separator             ", ")
;;; Button.tkButtonEnter:dummy
)

(lse-define-fill-in "tkButtonEnter(dummy)" 
  '(token)
  '(token                 "Button.tkButtonEnter")
  '(token                 "Studbutton.tkButtonEnter")
  '(token                 "Tributton.tkButtonEnter")
  '(replacement           "tkButtonEnter (««Button.tkButtonEnter:dummy»»···)")
;;; tkButtonEnter(dummy)
)

(lse-define-fill-in "Button.tkButtonInvoke:dummy" 
  '(description           "Argument 1 of Button.tkButtonInvoke")
  '(leading               ",")
  '(separator             ", ")
;;; Button.tkButtonInvoke:dummy
)

(lse-define-fill-in "tkButtonInvoke(dummy)" 
  '(token)
  '(token                 "Button.tkButtonInvoke")
  '(token                 "Studbutton.tkButtonInvoke")
  '(token                 "Tributton.tkButtonInvoke")
  '(replacement           "tkButtonInvoke (««Button.tkButtonInvoke:dummy»»···)")
;;; tkButtonInvoke(dummy)
)

(lse-define-fill-in "Button.tkButtonLeave:dummy" 
  '(description           "Argument 1 of Button.tkButtonLeave")
  '(leading               ",")
  '(separator             ", ")
;;; Button.tkButtonLeave:dummy
)

(lse-define-fill-in "tkButtonLeave(dummy)" 
  '(token)
  '(token                 "Button.tkButtonLeave")
  '(token                 "Studbutton.tkButtonLeave")
  '(token                 "Tributton.tkButtonLeave")
  '(replacement           "tkButtonLeave (««Button.tkButtonLeave:dummy»»···)")
;;; tkButtonLeave(dummy)
)

(lse-define-fill-in "Button.tkButtonUp:dummy" 
  '(description           "Argument 1 of Button.tkButtonUp")
  '(leading               ",")
  '(separator             ", ")
;;; Button.tkButtonUp:dummy
)

(lse-define-fill-in "tkButtonUp(dummy)" 
  '(token)
  '(token                 "Button.tkButtonUp")
  '(token                 "Studbutton.tkButtonUp")
  '(token                 "Tributton.tkButtonUp")
  '(replacement           "tkButtonUp (««Button.tkButtonUp:dummy»»···)")
;;; tkButtonUp(dummy)
)

(lse-define-fill-in "tk_bindForTraversal()" 
  '(token)
  '(token                 "C_Menu.tk_bindForTraversal")
  '(token                 "Menu.tk_bindForTraversal")
  '(replacement           "tk_bindForTraversal ()")
;;; tk_bindForTraversal()
)

(lse-define-fill-in "tk_bisque()" 
  '(token)
  '(token                 "Balloon.tk_bisque")
  '(token                 "BaseWidget.tk_bisque")
  '(token                 "Button.tk_bisque")
  '(token                 "Buttonbox.tk_bisque")
  '(token                 "C_Entry.tk_bisque")
  '(token                 "C_Frame.tk_bisque")
  '(token                 "C_Listbox.tk_bisque")
  '(token                 "C_Menu.tk_bisque")
  '(token                 "C_Text.tk_bisque")
  '(token                 "Canvas.tk_bisque")
  '(token                 "Checkbutton.tk_bisque")
  '(token                 "Combo_Tuple.tk_bisque")
  '(token                 "Combo_Tuple_X.tk_bisque")
  '(token                 "Combobox.tk_bisque")
  '(token                 "Entry.tk_bisque")
  '(token                 "Entrybox.tk_bisque")
  '(token                 "Filename_Entry.tk_bisque")
  '(token                 "Frame.tk_bisque")
  '(token                 "H_Panedwindow.tk_bisque")
  '(token                 "H_Panedwindow.V_Separator.tk_bisque")
  '(token                 "H_Scrollable.tk_bisque")
  '(token                 "H_Separator.tk_bisque")
  '(token                 "H_Strut.tk_bisque")
  '(token                 "Label.tk_bisque")
  '(token                 "Listbox.tk_bisque")
  '(token                 "Listbox_Tuple.tk_bisque")
  '(token                 "Listdropentry.tk_bisque")
  '(token                 "Listdropspinner.tk_bisque")
  '(token                 "Listspinner.tk_bisque")
  '(token                 "Menu.tk_bisque")
  '(token                 "Menubutton.tk_bisque")
  '(token                 "Message.tk_bisque")
  '(token                 "Message_Window.tk_bisque")
  '(token                 "Misc.tk_bisque")
  '(token                 "Multicombobox.tk_bisque")
  '(token                 "Multicombobox_X.tk_bisque")
  '(token                 "Notebook.tk_bisque")
  '(token                 "Num_Spinner.tk_bisque")
  '(token                 "OptionMenu.tk_bisque")
  '(token                 "Progress_Gauge.tk_bisque")
  '(token                 "Progress_Gauge_T.tk_bisque")
  '(token                 "Radiobutton.tk_bisque")
  '(token                 "Scale.tk_bisque")
  '(token                 "Scrollbar.tk_bisque")
  '(token                 "Scrolled_Listbox.tk_bisque")
  '(token                 "Scrolled_Text.tk_bisque")
  '(token                 "Slide_Show.tk_bisque")
  '(token                 "Statuslabel.tk_bisque")
  '(token                 "Statuslabel.Label.tk_bisque")
  '(token                 "Statustext.tk_bisque")
  '(token                 "Statustext.Text.tk_bisque")
  '(token                 "Studbutton.tk_bisque")
  '(token                 "Tabbed_Notebook.tk_bisque")
  '(token                 "Text.tk_bisque")
  '(token                 "Tk.tk_bisque")
  '(token                 "Toplevel.tk_bisque")
  '(token                 "Tributton.tk_bisque")
  '(token                 "Up_Down_Button.tk_bisque")
  '(token                 "V_Panedwindow.tk_bisque")
  '(token                 "V_Panedwindow.H_Separator.tk_bisque")
  '(token                 "V_Scrollable.tk_bisque")
  '(token                 "V_Separator.tk_bisque")
  '(token                 "V_Strut.tk_bisque")
  '(token                 "Widget.tk_bisque")
  '(token                 "_C_Frame.tk_bisque")
  '(token                 "_Combobox.Scrolled_Listbox.tk_bisque")
  '(token                 "_Panedwindow.tk_bisque")
  '(token                 "_Scrollable.tk_bisque")
  '(token                 "_Separator.tk_bisque")
  '(token                 "_Spinnerentry.tk_bisque")
  '(token                 "_Statusframe.tk_bisque")
  '(replacement           "tk_bisque ()")
;;; tk_bisque()
)

(lse-define-fill-in "tk_firstMenu()" 
  '(token)
  '(token                 "C_Menu.tk_firstMenu")
  '(token                 "Menu.tk_firstMenu")
  '(replacement           "tk_firstMenu ()")
;;; tk_firstMenu()
)

(lse-define-fill-in "tk_focusFollowsMouse()" 
  '(token)
  '(token                 "Balloon.tk_focusFollowsMouse")
  '(token                 "BaseWidget.tk_focusFollowsMouse")
  '(token                 "Button.tk_focusFollowsMouse")
  '(token                 "Buttonbox.tk_focusFollowsMouse")
  '(token                 "C_Entry.tk_focusFollowsMouse")
  '(token                 "C_Frame.tk_focusFollowsMouse")
  '(token                 "C_Listbox.tk_focusFollowsMouse")
  '(token                 "C_Menu.tk_focusFollowsMouse")
  '(token                 "C_Text.tk_focusFollowsMouse")
  '(token                 "Canvas.tk_focusFollowsMouse")
  '(token                 "Checkbutton.tk_focusFollowsMouse")
  '(token                 "Combo_Tuple.tk_focusFollowsMouse")
  '(token                 "Combo_Tuple_X.tk_focusFollowsMouse")
  '(token                 "Combobox.tk_focusFollowsMouse")
  '(token                 "Entry.tk_focusFollowsMouse")
  '(token                 "Entrybox.tk_focusFollowsMouse")
  '(token                 "Filename_Entry.tk_focusFollowsMouse")
  '(token                 "Frame.tk_focusFollowsMouse")
  '(token                 "H_Panedwindow.tk_focusFollowsMouse")
  '(token                 "H_Panedwindow.V_Separator.tk_focusFollowsMouse")
  '(token                 "H_Scrollable.tk_focusFollowsMouse")
  '(token                 "H_Separator.tk_focusFollowsMouse")
  '(token                 "H_Strut.tk_focusFollowsMouse")
  '(token                 "Label.tk_focusFollowsMouse")
  '(token                 "Listbox.tk_focusFollowsMouse")
  '(token                 "Listbox_Tuple.tk_focusFollowsMouse")
  '(token                 "Listdropentry.tk_focusFollowsMouse")
  '(token                 "Listdropspinner.tk_focusFollowsMouse")
  '(token                 "Listspinner.tk_focusFollowsMouse")
  '(token                 "Menu.tk_focusFollowsMouse")
  '(token                 "Menubutton.tk_focusFollowsMouse")
  '(token                 "Message.tk_focusFollowsMouse")
  '(token                 "Message_Window.tk_focusFollowsMouse")
  '(token                 "Misc.tk_focusFollowsMouse")
  '(token                 "Multicombobox.tk_focusFollowsMouse")
  '(token                 "Multicombobox_X.tk_focusFollowsMouse")
  '(token                 "Notebook.tk_focusFollowsMouse")
  '(token                 "Num_Spinner.tk_focusFollowsMouse")
  '(token                 "OptionMenu.tk_focusFollowsMouse")
  '(token                 "Progress_Gauge.tk_focusFollowsMouse")
  '(token                 "Progress_Gauge_T.tk_focusFollowsMouse")
  '(token                 "Radiobutton.tk_focusFollowsMouse")
  '(token                 "Scale.tk_focusFollowsMouse")
  '(token                 "Scrollbar.tk_focusFollowsMouse")
  '(token                 "Scrolled_Listbox.tk_focusFollowsMouse")
  '(token                 "Scrolled_Text.tk_focusFollowsMouse")
  '(token                 "Slide_Show.tk_focusFollowsMouse")
  '(token                 "Statuslabel.tk_focusFollowsMouse")
  '(token                 "Statuslabel.Label.tk_focusFollowsMouse")
  '(token                 "Statustext.tk_focusFollowsMouse")
  '(token                 "Statustext.Text.tk_focusFollowsMouse")
  '(token                 "Studbutton.tk_focusFollowsMouse")
  '(token                 "Tabbed_Notebook.tk_focusFollowsMouse")
  '(token                 "Text.tk_focusFollowsMouse")
  '(token                 "Tk.tk_focusFollowsMouse")
  '(token                 "Toplevel.tk_focusFollowsMouse")
  '(token                 "Tributton.tk_focusFollowsMouse")
  '(token                 "Up_Down_Button.tk_focusFollowsMouse")
  '(token                 "V_Panedwindow.tk_focusFollowsMouse")
  '(token                 "V_Panedwindow.H_Separator.tk_focusFollowsMouse")
  '(token                 "V_Scrollable.tk_focusFollowsMouse")
  '(token                 "V_Separator.tk_focusFollowsMouse")
  '(token                 "V_Strut.tk_focusFollowsMouse")
  '(token                 "Widget.tk_focusFollowsMouse")
  '(token                 "_C_Frame.tk_focusFollowsMouse")
  '(token                 "_Combobox.Scrolled_Listbox.tk_focusFollowsMouse")
  '(token                 "_Panedwindow.tk_focusFollowsMouse")
  '(token                 "_Scrollable.tk_focusFollowsMouse")
  '(token                 "_Separator.tk_focusFollowsMouse")
  '(token                 "_Spinnerentry.tk_focusFollowsMouse")
  '(token                 "_Statusframe.tk_focusFollowsMouse")
  '(replacement           "tk_focusFollowsMouse ()")
;;; tk_focusFollowsMouse()
)

(lse-define-fill-in "tk_focusNext()" 
  '(token)
  '(token                 "Balloon.tk_focusNext")
  '(token                 "BaseWidget.tk_focusNext")
  '(token                 "Button.tk_focusNext")
  '(token                 "Buttonbox.tk_focusNext")
  '(token                 "C_Entry.tk_focusNext")
  '(token                 "C_Frame.tk_focusNext")
  '(token                 "C_Listbox.tk_focusNext")
  '(token                 "C_Menu.tk_focusNext")
  '(token                 "C_Text.tk_focusNext")
  '(token                 "Canvas.tk_focusNext")
  '(token                 "Checkbutton.tk_focusNext")
  '(token                 "Combo_Tuple.tk_focusNext")
  '(token                 "Combo_Tuple_X.tk_focusNext")
  '(token                 "Combobox.tk_focusNext")
  '(token                 "Entry.tk_focusNext")
  '(token                 "Entrybox.tk_focusNext")
  '(token                 "Filename_Entry.tk_focusNext")
  '(token                 "Frame.tk_focusNext")
  '(token                 "H_Panedwindow.tk_focusNext")
  '(token                 "H_Panedwindow.V_Separator.tk_focusNext")
  '(token                 "H_Scrollable.tk_focusNext")
  '(token                 "H_Separator.tk_focusNext")
  '(token                 "H_Strut.tk_focusNext")
  '(token                 "Label.tk_focusNext")
  '(token                 "Listbox.tk_focusNext")
  '(token                 "Listbox_Tuple.tk_focusNext")
  '(token                 "Listdropentry.tk_focusNext")
  '(token                 "Listdropspinner.tk_focusNext")
  '(token                 "Listspinner.tk_focusNext")
  '(token                 "Menu.tk_focusNext")
  '(token                 "Menubutton.tk_focusNext")
  '(token                 "Message.tk_focusNext")
  '(token                 "Message_Window.tk_focusNext")
  '(token                 "Misc.tk_focusNext")
  '(token                 "Multicombobox.tk_focusNext")
  '(token                 "Multicombobox_X.tk_focusNext")
  '(token                 "Notebook.tk_focusNext")
  '(token                 "Num_Spinner.tk_focusNext")
  '(token                 "OptionMenu.tk_focusNext")
  '(token                 "Progress_Gauge.tk_focusNext")
  '(token                 "Progress_Gauge_T.tk_focusNext")
  '(token                 "Radiobutton.tk_focusNext")
  '(token                 "Scale.tk_focusNext")
  '(token                 "Scrollbar.tk_focusNext")
  '(token                 "Scrolled_Listbox.tk_focusNext")
  '(token                 "Scrolled_Text.tk_focusNext")
  '(token                 "Slide_Show.tk_focusNext")
  '(token                 "Statuslabel.tk_focusNext")
  '(token                 "Statuslabel.Label.tk_focusNext")
  '(token                 "Statustext.tk_focusNext")
  '(token                 "Statustext.Text.tk_focusNext")
  '(token                 "Studbutton.tk_focusNext")
  '(token                 "Tabbed_Notebook.tk_focusNext")
  '(token                 "Text.tk_focusNext")
  '(token                 "Tk.tk_focusNext")
  '(token                 "Toplevel.tk_focusNext")
  '(token                 "Tributton.tk_focusNext")
  '(token                 "Up_Down_Button.tk_focusNext")
  '(token                 "V_Panedwindow.tk_focusNext")
  '(token                 "V_Panedwindow.H_Separator.tk_focusNext")
  '(token                 "V_Scrollable.tk_focusNext")
  '(token                 "V_Separator.tk_focusNext")
  '(token                 "V_Strut.tk_focusNext")
  '(token                 "Widget.tk_focusNext")
  '(token                 "_C_Frame.tk_focusNext")
  '(token                 "_Combobox.Scrolled_Listbox.tk_focusNext")
  '(token                 "_Panedwindow.tk_focusNext")
  '(token                 "_Scrollable.tk_focusNext")
  '(token                 "_Separator.tk_focusNext")
  '(token                 "_Spinnerentry.tk_focusNext")
  '(token                 "_Statusframe.tk_focusNext")
  '(replacement           "tk_focusNext ()")
;;; tk_focusNext()
)

(lse-define-fill-in "tk_focusPrev()" 
  '(token)
  '(token                 "Balloon.tk_focusPrev")
  '(token                 "BaseWidget.tk_focusPrev")
  '(token                 "Button.tk_focusPrev")
  '(token                 "Buttonbox.tk_focusPrev")
  '(token                 "C_Entry.tk_focusPrev")
  '(token                 "C_Frame.tk_focusPrev")
  '(token                 "C_Listbox.tk_focusPrev")
  '(token                 "C_Menu.tk_focusPrev")
  '(token                 "C_Text.tk_focusPrev")
  '(token                 "Canvas.tk_focusPrev")
  '(token                 "Checkbutton.tk_focusPrev")
  '(token                 "Combo_Tuple.tk_focusPrev")
  '(token                 "Combo_Tuple_X.tk_focusPrev")
  '(token                 "Combobox.tk_focusPrev")
  '(token                 "Entry.tk_focusPrev")
  '(token                 "Entrybox.tk_focusPrev")
  '(token                 "Filename_Entry.tk_focusPrev")
  '(token                 "Frame.tk_focusPrev")
  '(token                 "H_Panedwindow.tk_focusPrev")
  '(token                 "H_Panedwindow.V_Separator.tk_focusPrev")
  '(token                 "H_Scrollable.tk_focusPrev")
  '(token                 "H_Separator.tk_focusPrev")
  '(token                 "H_Strut.tk_focusPrev")
  '(token                 "Label.tk_focusPrev")
  '(token                 "Listbox.tk_focusPrev")
  '(token                 "Listbox_Tuple.tk_focusPrev")
  '(token                 "Listdropentry.tk_focusPrev")
  '(token                 "Listdropspinner.tk_focusPrev")
  '(token                 "Listspinner.tk_focusPrev")
  '(token                 "Menu.tk_focusPrev")
  '(token                 "Menubutton.tk_focusPrev")
  '(token                 "Message.tk_focusPrev")
  '(token                 "Message_Window.tk_focusPrev")
  '(token                 "Misc.tk_focusPrev")
  '(token                 "Multicombobox.tk_focusPrev")
  '(token                 "Multicombobox_X.tk_focusPrev")
  '(token                 "Notebook.tk_focusPrev")
  '(token                 "Num_Spinner.tk_focusPrev")
  '(token                 "OptionMenu.tk_focusPrev")
  '(token                 "Progress_Gauge.tk_focusPrev")
  '(token                 "Progress_Gauge_T.tk_focusPrev")
  '(token                 "Radiobutton.tk_focusPrev")
  '(token                 "Scale.tk_focusPrev")
  '(token                 "Scrollbar.tk_focusPrev")
  '(token                 "Scrolled_Listbox.tk_focusPrev")
  '(token                 "Scrolled_Text.tk_focusPrev")
  '(token                 "Slide_Show.tk_focusPrev")
  '(token                 "Statuslabel.tk_focusPrev")
  '(token                 "Statuslabel.Label.tk_focusPrev")
  '(token                 "Statustext.tk_focusPrev")
  '(token                 "Statustext.Text.tk_focusPrev")
  '(token                 "Studbutton.tk_focusPrev")
  '(token                 "Tabbed_Notebook.tk_focusPrev")
  '(token                 "Text.tk_focusPrev")
  '(token                 "Tk.tk_focusPrev")
  '(token                 "Toplevel.tk_focusPrev")
  '(token                 "Tributton.tk_focusPrev")
  '(token                 "Up_Down_Button.tk_focusPrev")
  '(token                 "V_Panedwindow.tk_focusPrev")
  '(token                 "V_Panedwindow.H_Separator.tk_focusPrev")
  '(token                 "V_Scrollable.tk_focusPrev")
  '(token                 "V_Separator.tk_focusPrev")
  '(token                 "V_Strut.tk_focusPrev")
  '(token                 "Widget.tk_focusPrev")
  '(token                 "_C_Frame.tk_focusPrev")
  '(token                 "_Combobox.Scrolled_Listbox.tk_focusPrev")
  '(token                 "_Panedwindow.tk_focusPrev")
  '(token                 "_Scrollable.tk_focusPrev")
  '(token                 "_Separator.tk_focusPrev")
  '(token                 "_Spinnerentry.tk_focusPrev")
  '(token                 "_Statusframe.tk_focusPrev")
  '(replacement           "tk_focusPrev ()")
;;; tk_focusPrev()
)

(lse-define-fill-in "tk_getMenuButtons()" 
  '(token)
  '(token                 "C_Menu.tk_getMenuButtons")
  '(token                 "Menu.tk_getMenuButtons")
  '(replacement           "tk_getMenuButtons ()")
;;; tk_getMenuButtons()
)

(lse-define-fill-in "tk_invokeMenu()" 
  '(token)
  '(token                 "C_Menu.tk_invokeMenu")
  '(token                 "Menu.tk_invokeMenu")
  '(replacement           "tk_invokeMenu ()")
;;; tk_invokeMenu()
)

(lse-define-fill-in "tk_mbButtonDown()" 
  '(token)
  '(token                 "C_Menu.tk_mbButtonDown")
  '(token                 "Menu.tk_mbButtonDown")
  '(replacement           "tk_mbButtonDown ()")
;;; tk_mbButtonDown()
)

(lse-define-fill-in "tk_mbPost()" 
  '(token)
  '(token                 "C_Menu.tk_mbPost")
  '(token                 "Menu.tk_mbPost")
  '(replacement           "tk_mbPost ()")
;;; tk_mbPost()
)

(lse-define-fill-in "tk_mbUnpost()" 
  '(token)
  '(token                 "C_Menu.tk_mbUnpost")
  '(token                 "Menu.tk_mbUnpost")
  '(replacement           "tk_mbUnpost ()")
;;; tk_mbUnpost()
)

(lse-define-fill-in "Misc.tk_menuBar:args" 
  '(description           "Argument 1 of Misc.tk_menuBar")
  '(leading               ",")
  '(separator             ", ")
;;; Misc.tk_menuBar:args
)

(lse-define-fill-in "tk_menuBar(args)" 
  '(token)
  '(token                 "Balloon.tk_menuBar")
  '(token                 "BaseWidget.tk_menuBar")
  '(token                 "Button.tk_menuBar")
  '(token                 "Buttonbox.tk_menuBar")
  '(token                 "C_Entry.tk_menuBar")
  '(token                 "C_Frame.tk_menuBar")
  '(token                 "C_Listbox.tk_menuBar")
  '(token                 "C_Menu.tk_menuBar")
  '(token                 "C_Text.tk_menuBar")
  '(token                 "Canvas.tk_menuBar")
  '(token                 "Checkbutton.tk_menuBar")
  '(token                 "Combo_Tuple.tk_menuBar")
  '(token                 "Combo_Tuple_X.tk_menuBar")
  '(token                 "Combobox.tk_menuBar")
  '(token                 "Entry.tk_menuBar")
  '(token                 "Entrybox.tk_menuBar")
  '(token                 "Filename_Entry.tk_menuBar")
  '(token                 "Frame.tk_menuBar")
  '(token                 "H_Panedwindow.tk_menuBar")
  '(token                 "H_Panedwindow.V_Separator.tk_menuBar")
  '(token                 "H_Scrollable.tk_menuBar")
  '(token                 "H_Separator.tk_menuBar")
  '(token                 "H_Strut.tk_menuBar")
  '(token                 "Label.tk_menuBar")
  '(token                 "Listbox.tk_menuBar")
  '(token                 "Listbox_Tuple.tk_menuBar")
  '(token                 "Listdropentry.tk_menuBar")
  '(token                 "Listdropspinner.tk_menuBar")
  '(token                 "Listspinner.tk_menuBar")
  '(token                 "Menu.tk_menuBar")
  '(token                 "Menubutton.tk_menuBar")
  '(token                 "Message.tk_menuBar")
  '(token                 "Message_Window.tk_menuBar")
  '(token                 "Misc.tk_menuBar")
  '(token                 "Multicombobox.tk_menuBar")
  '(token                 "Multicombobox_X.tk_menuBar")
  '(token                 "Notebook.tk_menuBar")
  '(token                 "Num_Spinner.tk_menuBar")
  '(token                 "OptionMenu.tk_menuBar")
  '(token                 "Progress_Gauge.tk_menuBar")
  '(token                 "Progress_Gauge_T.tk_menuBar")
  '(token                 "Radiobutton.tk_menuBar")
  '(token                 "Scale.tk_menuBar")
  '(token                 "Scrollbar.tk_menuBar")
  '(token                 "Scrolled_Listbox.tk_menuBar")
  '(token                 "Scrolled_Text.tk_menuBar")
  '(token                 "Slide_Show.tk_menuBar")
  '(token                 "Statuslabel.tk_menuBar")
  '(token                 "Statuslabel.Label.tk_menuBar")
  '(token                 "Statustext.tk_menuBar")
  '(token                 "Statustext.Text.tk_menuBar")
  '(token                 "Studbutton.tk_menuBar")
  '(token                 "Tabbed_Notebook.tk_menuBar")
  '(token                 "Text.tk_menuBar")
  '(token                 "Tk.tk_menuBar")
  '(token                 "Toplevel.tk_menuBar")
  '(token                 "Tributton.tk_menuBar")
  '(token                 "Up_Down_Button.tk_menuBar")
  '(token                 "V_Panedwindow.tk_menuBar")
  '(token                 "V_Panedwindow.H_Separator.tk_menuBar")
  '(token                 "V_Scrollable.tk_menuBar")
  '(token                 "V_Separator.tk_menuBar")
  '(token                 "V_Strut.tk_menuBar")
  '(token                 "Widget.tk_menuBar")
  '(token                 "_C_Frame.tk_menuBar")
  '(token                 "_Combobox.Scrolled_Listbox.tk_menuBar")
  '(token                 "_Panedwindow.tk_menuBar")
  '(token                 "_Scrollable.tk_menuBar")
  '(token                 "_Separator.tk_menuBar")
  '(token                 "_Spinnerentry.tk_menuBar")
  '(token                 "_Statusframe.tk_menuBar")
  '(replacement           "tk_menuBar (««Misc.tk_menuBar:args»»···)")
;;; tk_menuBar(args)
)

(lse-define-fill-in "Menu.tk_nextMenu:count" 
  '(description           "Argument 1 of Menu.tk_nextMenu")
  '(leading               ",")
;;; Menu.tk_nextMenu:count
)

(lse-define-fill-in "tk_nextMenu(count)" 
  '(token)
  '(token                 "C_Menu.tk_nextMenu")
  '(token                 "Menu.tk_nextMenu")
  '(replacement           "tk_nextMenu («Menu.tk_nextMenu:count»)")
;;; tk_nextMenu(count)
)

(lse-define-fill-in "Menu.tk_nextMenuEntry:count" 
  '(description           "Argument 1 of Menu.tk_nextMenuEntry")
  '(leading               ",")
;;; Menu.tk_nextMenuEntry:count
)

(lse-define-fill-in "tk_nextMenuEntry(count)" 
  '(token)
  '(token                 "C_Menu.tk_nextMenuEntry")
  '(token                 "Menu.tk_nextMenuEntry")
  '(replacement           "tk_nextMenuEntry («Menu.tk_nextMenuEntry:count»)")
;;; tk_nextMenuEntry(count)
)

(lse-define-fill-in "Menu.tk_popup:x" 
  '(description           "Argument 1 of Menu.tk_popup")
  '(leading               ",")
;;; Menu.tk_popup:x
)

(lse-define-fill-in "Menu.tk_popup:y" 
  '(description           "Argument 2 of Menu.tk_popup")
  '(leading               ",")
;;; Menu.tk_popup:y
)

(lse-define-fill-in "Menu.tk_popup:entry" 
  '(description           "Argument 3 of Menu.tk_popup (default = )")
  '(leading               ",")
;;; Menu.tk_popup:entry
)

(lse-define-fill-in "tk_popup(x,y,entry)" 
  '(token)
  '(token                 "C_Menu.tk_popup")
  '(token                 "Menu.tk_popup")
  '(replacement           "tk_popup («Menu.tk_popup:x», «Menu.tk_popup:y», ««Menu.tk_popup:entry»»)")
;;; tk_popup(x,y,entry)
)

(lse-define-fill-in "Misc.tk_setPalette:args" 
  '(description           "Argument 1 of Misc.tk_setPalette")
  '(leading               ",")
  '(separator             ", ")
;;; Misc.tk_setPalette:args
)

(lse-define-fill-in "tk_setPalette(args,kw)" 
  '(token)
  '(token                 "Balloon.tk_setPalette")
  '(token                 "BaseWidget.tk_setPalette")
  '(token                 "Button.tk_setPalette")
  '(token                 "Buttonbox.tk_setPalette")
  '(token                 "C_Entry.tk_setPalette")
  '(token                 "C_Frame.tk_setPalette")
  '(token                 "C_Listbox.tk_setPalette")
  '(token                 "C_Menu.tk_setPalette")
  '(token                 "C_Text.tk_setPalette")
  '(token                 "Canvas.tk_setPalette")
  '(token                 "Checkbutton.tk_setPalette")
  '(token                 "Combo_Tuple.tk_setPalette")
  '(token                 "Combo_Tuple_X.tk_setPalette")
  '(token                 "Combobox.tk_setPalette")
  '(token                 "Entry.tk_setPalette")
  '(token                 "Entrybox.tk_setPalette")
  '(token                 "Filename_Entry.tk_setPalette")
  '(token                 "Frame.tk_setPalette")
  '(token                 "H_Panedwindow.tk_setPalette")
  '(token                 "H_Panedwindow.V_Separator.tk_setPalette")
  '(token                 "H_Scrollable.tk_setPalette")
  '(token                 "H_Separator.tk_setPalette")
  '(token                 "H_Strut.tk_setPalette")
  '(token                 "Label.tk_setPalette")
  '(token                 "Listbox.tk_setPalette")
  '(token                 "Listbox_Tuple.tk_setPalette")
  '(token                 "Listdropentry.tk_setPalette")
  '(token                 "Listdropspinner.tk_setPalette")
  '(token                 "Listspinner.tk_setPalette")
  '(token                 "Menu.tk_setPalette")
  '(token                 "Menubutton.tk_setPalette")
  '(token                 "Message.tk_setPalette")
  '(token                 "Message_Window.tk_setPalette")
  '(token                 "Misc.tk_setPalette")
  '(token                 "Multicombobox.tk_setPalette")
  '(token                 "Multicombobox_X.tk_setPalette")
  '(token                 "Notebook.tk_setPalette")
  '(token                 "Num_Spinner.tk_setPalette")
  '(token                 "OptionMenu.tk_setPalette")
  '(token                 "Progress_Gauge.tk_setPalette")
  '(token                 "Progress_Gauge_T.tk_setPalette")
  '(token                 "Radiobutton.tk_setPalette")
  '(token                 "Scale.tk_setPalette")
  '(token                 "Scrollbar.tk_setPalette")
  '(token                 "Scrolled_Listbox.tk_setPalette")
  '(token                 "Scrolled_Text.tk_setPalette")
  '(token                 "Slide_Show.tk_setPalette")
  '(token                 "Statuslabel.tk_setPalette")
  '(token                 "Statuslabel.Label.tk_setPalette")
  '(token                 "Statustext.tk_setPalette")
  '(token                 "Statustext.Text.tk_setPalette")
  '(token                 "Studbutton.tk_setPalette")
  '(token                 "Tabbed_Notebook.tk_setPalette")
  '(token                 "Text.tk_setPalette")
  '(token                 "Tk.tk_setPalette")
  '(token                 "Toplevel.tk_setPalette")
  '(token                 "Tributton.tk_setPalette")
  '(token                 "Up_Down_Button.tk_setPalette")
  '(token                 "V_Panedwindow.tk_setPalette")
  '(token                 "V_Panedwindow.H_Separator.tk_setPalette")
  '(token                 "V_Scrollable.tk_setPalette")
  '(token                 "V_Separator.tk_setPalette")
  '(token                 "V_Strut.tk_setPalette")
  '(token                 "Widget.tk_setPalette")
  '(token                 "_C_Frame.tk_setPalette")
  '(token                 "_Combobox.Scrolled_Listbox.tk_setPalette")
  '(token                 "_Panedwindow.tk_setPalette")
  '(token                 "_Scrollable.tk_setPalette")
  '(token                 "_Separator.tk_setPalette")
  '(token                 "_Spinnerentry.tk_setPalette")
  '(token                 "_Statusframe.tk_setPalette")
  '(replacement           "tk_setPalette (««Misc.tk_setPalette:args»»···, ««py-named-arg»»···)")
;;; tk_setPalette(args,kw)
)

(lse-define-fill-in "Misc.tk_strictMotif:boolean" 
  '(description           "Argument 1 of Misc.tk_strictMotif (default = None)")
  '(leading               ",")
;;; Misc.tk_strictMotif:boolean
)

(lse-define-fill-in "tk_strictMotif(boolean)" 
  '(token)
  '(token                 "Balloon.tk_strictMotif")
  '(token                 "BaseWidget.tk_strictMotif")
  '(token                 "Button.tk_strictMotif")
  '(token                 "Buttonbox.tk_strictMotif")
  '(token                 "C_Entry.tk_strictMotif")
  '(token                 "C_Frame.tk_strictMotif")
  '(token                 "C_Listbox.tk_strictMotif")
  '(token                 "C_Menu.tk_strictMotif")
  '(token                 "C_Text.tk_strictMotif")
  '(token                 "Canvas.tk_strictMotif")
  '(token                 "Checkbutton.tk_strictMotif")
  '(token                 "Combo_Tuple.tk_strictMotif")
  '(token                 "Combo_Tuple_X.tk_strictMotif")
  '(token                 "Combobox.tk_strictMotif")
  '(token                 "Entry.tk_strictMotif")
  '(token                 "Entrybox.tk_strictMotif")
  '(token                 "Filename_Entry.tk_strictMotif")
  '(token                 "Frame.tk_strictMotif")
  '(token                 "H_Panedwindow.tk_strictMotif")
  '(token                 "H_Panedwindow.V_Separator.tk_strictMotif")
  '(token                 "H_Scrollable.tk_strictMotif")
  '(token                 "H_Separator.tk_strictMotif")
  '(token                 "H_Strut.tk_strictMotif")
  '(token                 "Label.tk_strictMotif")
  '(token                 "Listbox.tk_strictMotif")
  '(token                 "Listbox_Tuple.tk_strictMotif")
  '(token                 "Listdropentry.tk_strictMotif")
  '(token                 "Listdropspinner.tk_strictMotif")
  '(token                 "Listspinner.tk_strictMotif")
  '(token                 "Menu.tk_strictMotif")
  '(token                 "Menubutton.tk_strictMotif")
  '(token                 "Message.tk_strictMotif")
  '(token                 "Message_Window.tk_strictMotif")
  '(token                 "Misc.tk_strictMotif")
  '(token                 "Multicombobox.tk_strictMotif")
  '(token                 "Multicombobox_X.tk_strictMotif")
  '(token                 "Notebook.tk_strictMotif")
  '(token                 "Num_Spinner.tk_strictMotif")
  '(token                 "OptionMenu.tk_strictMotif")
  '(token                 "Progress_Gauge.tk_strictMotif")
  '(token                 "Progress_Gauge_T.tk_strictMotif")
  '(token                 "Radiobutton.tk_strictMotif")
  '(token                 "Scale.tk_strictMotif")
  '(token                 "Scrollbar.tk_strictMotif")
  '(token                 "Scrolled_Listbox.tk_strictMotif")
  '(token                 "Scrolled_Text.tk_strictMotif")
  '(token                 "Slide_Show.tk_strictMotif")
  '(token                 "Statuslabel.tk_strictMotif")
  '(token                 "Statuslabel.Label.tk_strictMotif")
  '(token                 "Statustext.tk_strictMotif")
  '(token                 "Statustext.Text.tk_strictMotif")
  '(token                 "Studbutton.tk_strictMotif")
  '(token                 "Tabbed_Notebook.tk_strictMotif")
  '(token                 "Text.tk_strictMotif")
  '(token                 "Tk.tk_strictMotif")
  '(token                 "Toplevel.tk_strictMotif")
  '(token                 "Tributton.tk_strictMotif")
  '(token                 "Up_Down_Button.tk_strictMotif")
  '(token                 "V_Panedwindow.tk_strictMotif")
  '(token                 "V_Panedwindow.H_Separator.tk_strictMotif")
  '(token                 "V_Scrollable.tk_strictMotif")
  '(token                 "V_Separator.tk_strictMotif")
  '(token                 "V_Strut.tk_strictMotif")
  '(token                 "Widget.tk_strictMotif")
  '(token                 "_C_Frame.tk_strictMotif")
  '(token                 "_Combobox.Scrolled_Listbox.tk_strictMotif")
  '(token                 "_Panedwindow.tk_strictMotif")
  '(token                 "_Scrollable.tk_strictMotif")
  '(token                 "_Separator.tk_strictMotif")
  '(token                 "_Spinnerentry.tk_strictMotif")
  '(token                 "_Statusframe.tk_strictMotif")
  '(replacement           "tk_strictMotif (««Misc.tk_strictMotif:boolean»»)")
;;; tk_strictMotif(boolean)
)

(lse-define-fill-in "tk_textBackspace()" 
  '(token)
  '(token                 "Statustext.Text.tk_textBackspace")
  '(token                 "Text.tk_textBackspace")
  '(replacement           "tk_textBackspace ()")
;;; tk_textBackspace()
)

(lse-define-fill-in "Statustext.Text.tk_textIndexCloser:a" 
  '(description           "Argument 1 of Statustext.Text.tk_textIndexCloser")
  '(leading               ",")
;;; Statustext.Text.tk_textIndexCloser:a
)

(lse-define-fill-in "Statustext.Text.tk_textIndexCloser:b" 
  '(description           "Argument 2 of Statustext.Text.tk_textIndexCloser")
  '(leading               ",")
;;; Statustext.Text.tk_textIndexCloser:b
)

(lse-define-fill-in "Statustext.Text.tk_textIndexCloser:c" 
  '(description           "Argument 3 of Statustext.Text.tk_textIndexCloser")
  '(leading               ",")
;;; Statustext.Text.tk_textIndexCloser:c
)

(lse-define-fill-in "tk_textIndexCloser(a,b,c)" 
  '(token)
  '(token                 "Statustext.Text.tk_textIndexCloser")
  '(token                 "Text.tk_textIndexCloser")
  '(replacement           "tk_textIndexCloser («Statustext.Text.tk_textIndexCloser:a», «Statustext.Text.tk_textIndexCloser:b», «Statustext.Text.tk_textIndexCloser:c»)")
;;; tk_textIndexCloser(a,b,c)
)

(lse-define-fill-in "Statustext.Text.tk_textResetAnchor:index" 
  '(description           "Argument 1 of Statustext.Text.tk_textResetAnchor")
  '(leading               ",")
;;; Statustext.Text.tk_textResetAnchor:index
)

(lse-define-fill-in "tk_textResetAnchor(index)" 
  '(token)
  '(token                 "Statustext.Text.tk_textResetAnchor")
  '(token                 "Text.tk_textResetAnchor")
  '(replacement           "tk_textResetAnchor («Statustext.Text.tk_textResetAnchor:index»)")
;;; tk_textResetAnchor(index)
)

(lse-define-fill-in "Statustext.Text.tk_textSelectTo:index" 
  '(description           "Argument 1 of Statustext.Text.tk_textSelectTo")
  '(leading               ",")
;;; Statustext.Text.tk_textSelectTo:index
)

(lse-define-fill-in "tk_textSelectTo(index)" 
  '(token)
  '(token                 "Statustext.Text.tk_textSelectTo")
  '(token                 "Text.tk_textSelectTo")
  '(replacement           "tk_textSelectTo («Statustext.Text.tk_textSelectTo:index»)")
;;; tk_textSelectTo(index)
)

(lse-define-fill-in "Menu.tk_traverseToMenu:char" 
  '(description           "Argument 1 of Menu.tk_traverseToMenu")
  '(leading               ",")
;;; Menu.tk_traverseToMenu:char
)

(lse-define-fill-in "tk_traverseToMenu(char)" 
  '(token)
  '(token                 "C_Menu.tk_traverseToMenu")
  '(token                 "Menu.tk_traverseToMenu")
  '(replacement           "tk_traverseToMenu («Menu.tk_traverseToMenu:char»)")
;;; tk_traverseToMenu(char)
)

(lse-define-fill-in "Menu.tk_traverseWithinMenu:char" 
  '(description           "Argument 1 of Menu.tk_traverseWithinMenu")
  '(leading               ",")
;;; Menu.tk_traverseWithinMenu:char
)

(lse-define-fill-in "tk_traverseWithinMenu(char)" 
  '(token)
  '(token                 "C_Menu.tk_traverseWithinMenu")
  '(token                 "Menu.tk_traverseWithinMenu")
  '(replacement           "tk_traverseWithinMenu («Menu.tk_traverseWithinMenu:char»)")
;;; tk_traverseWithinMenu(char)
)

(lse-define-fill-in "Misc.tkraise:aboveThis" 
  '(description           "Argument 1 of Misc.tkraise (default = None)")
  '(leading               ",")
;;; Misc.tkraise:aboveThis
)

(lse-define-fill-in "tkraise(aboveThis)" 
  '(token)
  '(token                 "Balloon.tkraise")
  '(token                 "BaseWidget.tkraise")
  '(token                 "Button.tkraise")
  '(token                 "Buttonbox.tkraise")
  '(token                 "C_Entry.tkraise")
  '(token                 "C_Frame.tkraise")
  '(token                 "C_Listbox.tkraise")
  '(token                 "C_Menu.tkraise")
  '(token                 "C_Text.tkraise")
  '(token                 "Canvas.tkraise")
  '(token                 "Checkbutton.tkraise")
  '(token                 "Combo_Tuple.tkraise")
  '(token                 "Combo_Tuple_X.tkraise")
  '(token                 "Combobox.tkraise")
  '(token                 "Entry.tkraise")
  '(token                 "Entrybox.tkraise")
  '(token                 "Filename_Entry.tkraise")
  '(token                 "Frame.tkraise")
  '(token                 "Group.tkraise")
  '(token                 "H_Panedwindow.tkraise")
  '(token                 "H_Panedwindow.V_Separator.tkraise")
  '(token                 "H_Scrollable.tkraise")
  '(token                 "H_Separator.tkraise")
  '(token                 "H_Strut.tkraise")
  '(token                 "Label.tkraise")
  '(token                 "Listbox.tkraise")
  '(token                 "Listbox_Tuple.tkraise")
  '(token                 "Listdropentry.tkraise")
  '(token                 "Listdropspinner.tkraise")
  '(token                 "Listspinner.tkraise")
  '(token                 "Menu.tkraise")
  '(token                 "Menubutton.tkraise")
  '(token                 "Message.tkraise")
  '(token                 "Message_Window.tkraise")
  '(token                 "Misc.tkraise")
  '(token                 "Multicombobox.tkraise")
  '(token                 "Multicombobox_X.tkraise")
  '(token                 "Notebook.tkraise")
  '(token                 "Num_Spinner.tkraise")
  '(token                 "OptionMenu.tkraise")
  '(token                 "Progress_Gauge.tkraise")
  '(token                 "Progress_Gauge_T.tkraise")
  '(token                 "Radiobutton.tkraise")
  '(token                 "Scale.tkraise")
  '(token                 "Scrollbar.tkraise")
  '(token                 "Scrolled_Listbox.tkraise")
  '(token                 "Scrolled_Text.tkraise")
  '(token                 "Slide_Show.tkraise")
  '(token                 "Statuslabel.tkraise")
  '(token                 "Statuslabel.Label.tkraise")
  '(token                 "Statustext.tkraise")
  '(token                 "Statustext.Text.tkraise")
  '(token                 "Studbutton.tkraise")
  '(token                 "Tabbed_Notebook.tkraise")
  '(token                 "Text.tkraise")
  '(token                 "Tk.tkraise")
  '(token                 "Toplevel.tkraise")
  '(token                 "Tributton.tkraise")
  '(token                 "Up_Down_Button.tkraise")
  '(token                 "V_Panedwindow.tkraise")
  '(token                 "V_Panedwindow.H_Separator.tkraise")
  '(token                 "V_Scrollable.tkraise")
  '(token                 "V_Separator.tkraise")
  '(token                 "V_Strut.tkraise")
  '(token                 "Widget.tkraise")
  '(token                 "_C_Frame.tkraise")
  '(token                 "_Combobox.Scrolled_Listbox.tkraise")
  '(token                 "_Panedwindow.tkraise")
  '(token                 "_Scrollable.tkraise")
  '(token                 "_Separator.tkraise")
  '(token                 "_Spinnerentry.tkraise")
  '(token                 "_Statusframe.tkraise")
  '(replacement           "tkraise (««Misc.tkraise:aboveThis»»)")
;;; tkraise(aboveThis)
)

(lse-define-fill-in "CanvasItem.tkraise:abovethis" 
  '(description           "Argument 1 of CanvasItem.tkraise (default = None)")
  '(leading               ",")
;;; CanvasItem.tkraise:abovethis
)

(lse-define-fill-in "tkraise(abovethis)" 
  '(token)
  '(token                 "Arc.tkraise")
  '(token                 "Bitmap.tkraise")
  '(token                 "CanvasItem.tkraise")
  '(token                 "CanvasText.tkraise")
  '(token                 "ImageItem.tkraise")
  '(token                 "Line.tkraise")
  '(token                 "Oval.tkraise")
  '(token                 "Polygon.tkraise")
  '(token                 "Rectangle.tkraise")
  '(token                 "Window.tkraise")
  '(replacement           "tkraise (««CanvasItem.tkraise:abovethis»»)")
;;; tkraise(abovethis)
)

(lse-define-fill-in "Canvas.tkraise:args" 
  '(description           "Argument 1 of Canvas.tkraise")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.tkraise:args
)

(lse-define-fill-in "tkraise(args)" 
  '(token)
  '(token                 "Canvas.tkraise")
  '(replacement           "tkraise (««Canvas.tkraise:args»»···)")
;;; tkraise(args)
)

(lse-define-fill-in "toggle()" 
  '(token)
  '(token                 "Checkbutton.toggle")
  '(replacement           "toggle ()")
;;; toggle()
)

(lse-define-fill-in "_Listdrop.toggle:event" 
  '(description           "Argument 1 of _Listdrop.toggle (default = None)")
  '(leading               ",")
;;; _Listdrop.toggle:event
)

(lse-define-fill-in "toggle(event)" 
  '(token)
  '(token                 "Listdropentry.toggle")
  '(token                 "Listdropspinner.toggle")
  '(token                 "_Listdrop.toggle")
  '(replacement           "toggle (««_Listdrop.toggle:event»»)")
;;; toggle(event)
)

(lse-define-fill-in "Variable.trace:mode" 
  '(description           "Argument 1 of Variable.trace")
  '(leading               ",")
;;; Variable.trace:mode
)

(lse-define-fill-in "Variable.trace:callback" 
  '(description           "Argument 2 of Variable.trace")
  '(leading               ",")
;;; Variable.trace:callback
)

(lse-define-fill-in "trace(mode,callback)" 
  '(token)
  '(token                 "BooleanVar.trace")
  '(token                 "DoubleVar.trace")
  '(token                 "IntVar.trace")
  '(token                 "StringVar.trace")
  '(token                 "Variable.trace")
  '(replacement           "trace («Variable.trace:mode», «Variable.trace:callback»)")
;;; trace(mode,callback)
)

(lse-define-fill-in "Variable.trace_variable:mode" 
  '(description           "Argument 1 of Variable.trace_variable")
  '(leading               ",")
;;; Variable.trace_variable:mode
)

(lse-define-fill-in "Variable.trace_variable:callback" 
  '(description           "Argument 2 of Variable.trace_variable")
  '(leading               ",")
;;; Variable.trace_variable:callback
)

(lse-define-fill-in "trace_variable(mode,callback)" 
  '(token)
  '(token                 "BooleanVar.trace_variable")
  '(token                 "DoubleVar.trace_variable")
  '(token                 "IntVar.trace_variable")
  '(token                 "StringVar.trace_variable")
  '(token                 "Variable.trace_variable")
  '(replacement           "trace_variable («Variable.trace_variable:mode», «Variable.trace_variable:callback»)")
;;; trace_variable(mode,callback)
)

(lse-define-fill-in "Variable.trace_vdelete:mode" 
  '(description           "Argument 1 of Variable.trace_vdelete")
  '(leading               ",")
;;; Variable.trace_vdelete:mode
)

(lse-define-fill-in "Variable.trace_vdelete:cbname" 
  '(description           "Argument 2 of Variable.trace_vdelete")
  '(leading               ",")
;;; Variable.trace_vdelete:cbname
)

(lse-define-fill-in "trace_vdelete(mode,cbname)" 
  '(token)
  '(token                 "BooleanVar.trace_vdelete")
  '(token                 "DoubleVar.trace_vdelete")
  '(token                 "IntVar.trace_vdelete")
  '(token                 "StringVar.trace_vdelete")
  '(token                 "Variable.trace_vdelete")
  '(replacement           "trace_vdelete («Variable.trace_vdelete:mode», «Variable.trace_vdelete:cbname»)")
;;; trace_vdelete(mode,cbname)
)

(lse-define-fill-in "trace_vinfo()" 
  '(token)
  '(token                 "BooleanVar.trace_vinfo")
  '(token                 "DoubleVar.trace_vinfo")
  '(token                 "IntVar.trace_vinfo")
  '(token                 "StringVar.trace_vinfo")
  '(token                 "Variable.trace_vinfo")
  '(replacement           "trace_vinfo ()")
;;; trace_vinfo()
)

(lse-define-fill-in "Wm.transient:master" 
  '(description           "Argument 1 of Wm.transient (default = None)")
  '(leading               ",")
;;; Wm.transient:master
)

(lse-define-fill-in "transient(master)" 
  '(token)
  '(token                 "Balloon.transient")
  '(token                 "Progress_Gauge_T.transient")
  '(token                 "Tk.transient")
  '(token                 "Toplevel.transient")
  '(token                 "Wm.transient")
  '(replacement           "transient (««Wm.transient:master»»)")
;;; transient(master)
)

(lse-define-fill-in "type()" 
  '(token)
  '(token                 "Arc.type")
  '(token                 "Bitmap.type")
  '(token                 "CanvasItem.type")
  '(token                 "CanvasText.type")
  '(token                 "Group.type")
  '(token                 "Image.type")
  '(token                 "ImageItem.type")
  '(token                 "Line.type")
  '(token                 "Oval.type")
  '(token                 "Polygon.type")
  '(token                 "Rectangle.type")
  '(token                 "Window.type")
  '(replacement           "type ()")
;;; type()
)

(lse-define-fill-in "Menu.type:index" 
  '(description           "Argument 1 of Menu.type")
  '(leading               ",")
;;; Menu.type:index
)

(lse-define-fill-in "type(index)" 
  '(token)
  '(token                 "C_Menu.type")
  '(token                 "Menu.type")
  '(replacement           "type («Menu.type:index»)")
;;; type(index)
)

(lse-define-fill-in "Canvas.type:tagOrId" 
  '(description           "Argument 1 of Canvas.type")
  '(leading               ",")
;;; Canvas.type:tagOrId
)

(lse-define-fill-in "type(tagOrId)" 
  '(token)
  '(token                 "Canvas.type")
  '(replacement           "type («Canvas.type:tagOrId»)")
;;; type(tagOrId)
)

(lse-define-fill-in "CanvasItem.unbind:sequence" 
  '(description           "Argument 1 of CanvasItem.unbind")
  '(leading               ",")
;;; CanvasItem.unbind:sequence
)

(lse-define-fill-in "unbind(sequence)" 
  '(token)
  '(token                 "Arc.unbind")
  '(token                 "Bitmap.unbind")
  '(token                 "CanvasItem.unbind")
  '(token                 "CanvasText.unbind")
  '(token                 "Group.unbind")
  '(token                 "ImageItem.unbind")
  '(token                 "Line.unbind")
  '(token                 "Oval.unbind")
  '(token                 "Polygon.unbind")
  '(token                 "Rectangle.unbind")
  '(token                 "Window.unbind")
  '(replacement           "unbind («CanvasItem.unbind:sequence»)")
;;; unbind(sequence)
)

(lse-define-fill-in "Misc.unbind:sequence" 
  '(description           "Argument 1 of Misc.unbind")
  '(leading               ",")
;;; Misc.unbind:sequence
)

(lse-define-fill-in "Misc.unbind:funcid" 
  '(description           "Argument 2 of Misc.unbind (default = None)")
  '(leading               ",")
;;; Misc.unbind:funcid
)

(lse-define-fill-in "unbind(sequence,funcid)" 
  '(token)
  '(token                 "Balloon.unbind")
  '(token                 "BaseWidget.unbind")
  '(token                 "Button.unbind")
  '(token                 "Buttonbox.unbind")
  '(token                 "C_Entry.unbind")
  '(token                 "C_Frame.unbind")
  '(token                 "C_Listbox.unbind")
  '(token                 "C_Menu.unbind")
  '(token                 "C_Text.unbind")
  '(token                 "Canvas.unbind")
  '(token                 "Checkbutton.unbind")
  '(token                 "Combo_Tuple.unbind")
  '(token                 "Combo_Tuple_X.unbind")
  '(token                 "Combobox.unbind")
  '(token                 "Entry.unbind")
  '(token                 "Entrybox.unbind")
  '(token                 "Filename_Entry.unbind")
  '(token                 "Frame.unbind")
  '(token                 "H_Panedwindow.unbind")
  '(token                 "H_Panedwindow.V_Separator.unbind")
  '(token                 "H_Scrollable.unbind")
  '(token                 "H_Separator.unbind")
  '(token                 "H_Strut.unbind")
  '(token                 "Label.unbind")
  '(token                 "Listbox.unbind")
  '(token                 "Listbox_Tuple.unbind")
  '(token                 "Listdropentry.unbind")
  '(token                 "Listdropspinner.unbind")
  '(token                 "Listspinner.unbind")
  '(token                 "Menu.unbind")
  '(token                 "Menubutton.unbind")
  '(token                 "Message.unbind")
  '(token                 "Message_Window.unbind")
  '(token                 "Misc.unbind")
  '(token                 "Multicombobox.unbind")
  '(token                 "Multicombobox_X.unbind")
  '(token                 "Notebook.unbind")
  '(token                 "Num_Spinner.unbind")
  '(token                 "OptionMenu.unbind")
  '(token                 "Progress_Gauge.unbind")
  '(token                 "Progress_Gauge_T.unbind")
  '(token                 "Radiobutton.unbind")
  '(token                 "Scale.unbind")
  '(token                 "Scrollbar.unbind")
  '(token                 "Scrolled_Listbox.unbind")
  '(token                 "Scrolled_Text.unbind")
  '(token                 "Slide_Show.unbind")
  '(token                 "Statuslabel.unbind")
  '(token                 "Statuslabel.Label.unbind")
  '(token                 "Statustext.unbind")
  '(token                 "Statustext.Text.unbind")
  '(token                 "Studbutton.unbind")
  '(token                 "Tabbed_Notebook.unbind")
  '(token                 "Text.unbind")
  '(token                 "Tk.unbind")
  '(token                 "Toplevel.unbind")
  '(token                 "Tributton.unbind")
  '(token                 "Up_Down_Button.unbind")
  '(token                 "V_Panedwindow.unbind")
  '(token                 "V_Panedwindow.H_Separator.unbind")
  '(token                 "V_Scrollable.unbind")
  '(token                 "V_Separator.unbind")
  '(token                 "V_Strut.unbind")
  '(token                 "Widget.unbind")
  '(token                 "_C_Frame.unbind")
  '(token                 "_Combobox.Scrolled_Listbox.unbind")
  '(token                 "_Panedwindow.unbind")
  '(token                 "_Scrollable.unbind")
  '(token                 "_Separator.unbind")
  '(token                 "_Spinnerentry.unbind")
  '(token                 "_Statusframe.unbind")
  '(replacement           "unbind («Misc.unbind:sequence», ««Misc.unbind:funcid»»)")
;;; unbind(sequence,funcid)
)

(lse-define-fill-in "Misc.unbind_all:sequence" 
  '(description           "Argument 1 of Misc.unbind_all")
  '(leading               ",")
;;; Misc.unbind_all:sequence
)

(lse-define-fill-in "unbind_all(sequence)" 
  '(token)
  '(token                 "Balloon.unbind_all")
  '(token                 "BaseWidget.unbind_all")
  '(token                 "Button.unbind_all")
  '(token                 "Buttonbox.unbind_all")
  '(token                 "C_Entry.unbind_all")
  '(token                 "C_Frame.unbind_all")
  '(token                 "C_Listbox.unbind_all")
  '(token                 "C_Menu.unbind_all")
  '(token                 "C_Text.unbind_all")
  '(token                 "Canvas.unbind_all")
  '(token                 "Checkbutton.unbind_all")
  '(token                 "Combo_Tuple.unbind_all")
  '(token                 "Combo_Tuple_X.unbind_all")
  '(token                 "Combobox.unbind_all")
  '(token                 "Entry.unbind_all")
  '(token                 "Entrybox.unbind_all")
  '(token                 "Filename_Entry.unbind_all")
  '(token                 "Frame.unbind_all")
  '(token                 "H_Panedwindow.unbind_all")
  '(token                 "H_Panedwindow.V_Separator.unbind_all")
  '(token                 "H_Scrollable.unbind_all")
  '(token                 "H_Separator.unbind_all")
  '(token                 "H_Strut.unbind_all")
  '(token                 "Label.unbind_all")
  '(token                 "Listbox.unbind_all")
  '(token                 "Listbox_Tuple.unbind_all")
  '(token                 "Listdropentry.unbind_all")
  '(token                 "Listdropspinner.unbind_all")
  '(token                 "Listspinner.unbind_all")
  '(token                 "Menu.unbind_all")
  '(token                 "Menubutton.unbind_all")
  '(token                 "Message.unbind_all")
  '(token                 "Message_Window.unbind_all")
  '(token                 "Misc.unbind_all")
  '(token                 "Multicombobox.unbind_all")
  '(token                 "Multicombobox_X.unbind_all")
  '(token                 "Notebook.unbind_all")
  '(token                 "Num_Spinner.unbind_all")
  '(token                 "OptionMenu.unbind_all")
  '(token                 "Progress_Gauge.unbind_all")
  '(token                 "Progress_Gauge_T.unbind_all")
  '(token                 "Radiobutton.unbind_all")
  '(token                 "Scale.unbind_all")
  '(token                 "Scrollbar.unbind_all")
  '(token                 "Scrolled_Listbox.unbind_all")
  '(token                 "Scrolled_Text.unbind_all")
  '(token                 "Slide_Show.unbind_all")
  '(token                 "Statuslabel.unbind_all")
  '(token                 "Statuslabel.Label.unbind_all")
  '(token                 "Statustext.unbind_all")
  '(token                 "Statustext.Text.unbind_all")
  '(token                 "Studbutton.unbind_all")
  '(token                 "Tabbed_Notebook.unbind_all")
  '(token                 "Text.unbind_all")
  '(token                 "Tk.unbind_all")
  '(token                 "Toplevel.unbind_all")
  '(token                 "Tributton.unbind_all")
  '(token                 "Up_Down_Button.unbind_all")
  '(token                 "V_Panedwindow.unbind_all")
  '(token                 "V_Panedwindow.H_Separator.unbind_all")
  '(token                 "V_Scrollable.unbind_all")
  '(token                 "V_Separator.unbind_all")
  '(token                 "V_Strut.unbind_all")
  '(token                 "Widget.unbind_all")
  '(token                 "_C_Frame.unbind_all")
  '(token                 "_Combobox.Scrolled_Listbox.unbind_all")
  '(token                 "_Panedwindow.unbind_all")
  '(token                 "_Scrollable.unbind_all")
  '(token                 "_Separator.unbind_all")
  '(token                 "_Spinnerentry.unbind_all")
  '(token                 "_Statusframe.unbind_all")
  '(replacement           "unbind_all («Misc.unbind_all:sequence»)")
;;; unbind_all(sequence)
)

(lse-define-fill-in "Misc.unbind_class:className" 
  '(description           "Argument 1 of Misc.unbind_class")
  '(leading               ",")
;;; Misc.unbind_class:className
)

(lse-define-fill-in "Misc.unbind_class:sequence" 
  '(description           "Argument 2 of Misc.unbind_class")
  '(leading               ",")
;;; Misc.unbind_class:sequence
)

(lse-define-fill-in "unbind_class(className,sequence)" 
  '(token)
  '(token                 "Balloon.unbind_class")
  '(token                 "BaseWidget.unbind_class")
  '(token                 "Button.unbind_class")
  '(token                 "Buttonbox.unbind_class")
  '(token                 "C_Entry.unbind_class")
  '(token                 "C_Frame.unbind_class")
  '(token                 "C_Listbox.unbind_class")
  '(token                 "C_Menu.unbind_class")
  '(token                 "C_Text.unbind_class")
  '(token                 "Canvas.unbind_class")
  '(token                 "Checkbutton.unbind_class")
  '(token                 "Combo_Tuple.unbind_class")
  '(token                 "Combo_Tuple_X.unbind_class")
  '(token                 "Combobox.unbind_class")
  '(token                 "Entry.unbind_class")
  '(token                 "Entrybox.unbind_class")
  '(token                 "Filename_Entry.unbind_class")
  '(token                 "Frame.unbind_class")
  '(token                 "H_Panedwindow.unbind_class")
  '(token                 "H_Panedwindow.V_Separator.unbind_class")
  '(token                 "H_Scrollable.unbind_class")
  '(token                 "H_Separator.unbind_class")
  '(token                 "H_Strut.unbind_class")
  '(token                 "Label.unbind_class")
  '(token                 "Listbox.unbind_class")
  '(token                 "Listbox_Tuple.unbind_class")
  '(token                 "Listdropentry.unbind_class")
  '(token                 "Listdropspinner.unbind_class")
  '(token                 "Listspinner.unbind_class")
  '(token                 "Menu.unbind_class")
  '(token                 "Menubutton.unbind_class")
  '(token                 "Message.unbind_class")
  '(token                 "Message_Window.unbind_class")
  '(token                 "Misc.unbind_class")
  '(token                 "Multicombobox.unbind_class")
  '(token                 "Multicombobox_X.unbind_class")
  '(token                 "Notebook.unbind_class")
  '(token                 "Num_Spinner.unbind_class")
  '(token                 "OptionMenu.unbind_class")
  '(token                 "Progress_Gauge.unbind_class")
  '(token                 "Progress_Gauge_T.unbind_class")
  '(token                 "Radiobutton.unbind_class")
  '(token                 "Scale.unbind_class")
  '(token                 "Scrollbar.unbind_class")
  '(token                 "Scrolled_Listbox.unbind_class")
  '(token                 "Scrolled_Text.unbind_class")
  '(token                 "Slide_Show.unbind_class")
  '(token                 "Statuslabel.unbind_class")
  '(token                 "Statuslabel.Label.unbind_class")
  '(token                 "Statustext.unbind_class")
  '(token                 "Statustext.Text.unbind_class")
  '(token                 "Studbutton.unbind_class")
  '(token                 "Tabbed_Notebook.unbind_class")
  '(token                 "Text.unbind_class")
  '(token                 "Tk.unbind_class")
  '(token                 "Toplevel.unbind_class")
  '(token                 "Tributton.unbind_class")
  '(token                 "Up_Down_Button.unbind_class")
  '(token                 "V_Panedwindow.unbind_class")
  '(token                 "V_Panedwindow.H_Separator.unbind_class")
  '(token                 "V_Scrollable.unbind_class")
  '(token                 "V_Separator.unbind_class")
  '(token                 "V_Strut.unbind_class")
  '(token                 "Widget.unbind_class")
  '(token                 "_C_Frame.unbind_class")
  '(token                 "_Combobox.Scrolled_Listbox.unbind_class")
  '(token                 "_Panedwindow.unbind_class")
  '(token                 "_Scrollable.unbind_class")
  '(token                 "_Separator.unbind_class")
  '(token                 "_Spinnerentry.unbind_class")
  '(token                 "_Statusframe.unbind_class")
  '(replacement           "unbind_class («Misc.unbind_class:className», «Misc.unbind_class:sequence»)")
;;; unbind_class(className,sequence)
)

(lse-define-fill-in "_Listdrop.undrop:event" 
  '(description           "Argument 1 of _Listdrop.undrop (default = None)")
  '(leading               ",")
;;; _Listdrop.undrop:event
)

(lse-define-fill-in "undrop(event)" 
  '(token)
  '(token                 "Listdropentry.undrop")
  '(token                 "Listdropspinner.undrop")
  '(token                 "_Listdrop.undrop")
  '(replacement           "undrop (««_Listdrop.undrop:event»»)")
;;; undrop(event)
)

(lse-define-fill-in "Buttonbox.ungrid:button" 
  '(description           "Argument 1 of Buttonbox.ungrid")
  '(leading               ",")
;;; Buttonbox.ungrid:button
)

(lse-define-fill-in "ungrid(button)" 
  '(token)
  '(token                 "Buttonbox.ungrid")
  '(replacement           "ungrid («Buttonbox.ungrid:button»)")
;;; ungrid(button)
)

(lse-define-fill-in "C_Entry.unhighlight_focus:event" 
  '(description           "Argument 1 of C_Entry.unhighlight_focus (default = None)")
  '(leading               ",")
;;; C_Entry.unhighlight_focus:event
)

(lse-define-fill-in "unhighlight_focus(event)" 
  '(token)
  '(token                 "C_Entry.unhighlight_focus")
  '(token                 "Combobox.unhighlight_focus")
  '(token                 "Filename_Entry.unhighlight_focus")
  '(token                 "Listdropentry.unhighlight_focus")
  '(token                 "Listdropspinner.unhighlight_focus")
  '(token                 "Listspinner.unhighlight_focus")
  '(token                 "Num_Spinner.unhighlight_focus")
  '(token                 "_Spinnerentry.unhighlight_focus")
  '(replacement           "unhighlight_focus (««C_Entry.unhighlight_focus:event»»)")
;;; unhighlight_focus(event)
)

(lse-define-fill-in "unpost()" 
  '(token)
  '(token                 "C_Menu.unpost")
  '(token                 "Menu.unpost")
  '(replacement           "unpost ()")
;;; unpost()
)

(lse-define-fill-in "update()" 
  '(token)
  '(token                 "Balloon.update")
  '(token                 "BaseWidget.update")
  '(token                 "Button.update")
  '(token                 "Buttonbox.update")
  '(token                 "C_Entry.update")
  '(token                 "C_Frame.update")
  '(token                 "C_Listbox.update")
  '(token                 "C_Menu.update")
  '(token                 "C_Text.update")
  '(token                 "Canvas.update")
  '(token                 "Checkbutton.update")
  '(token                 "Combo_Tuple.update")
  '(token                 "Combo_Tuple_X.update")
  '(token                 "Combobox.update")
  '(token                 "Entry.update")
  '(token                 "Entrybox.update")
  '(token                 "Filename_Entry.update")
  '(token                 "Frame.update")
  '(token                 "H_Panedwindow.update")
  '(token                 "H_Panedwindow.V_Separator.update")
  '(token                 "H_Scrollable.update")
  '(token                 "H_Separator.update")
  '(token                 "H_Strut.update")
  '(token                 "Label.update")
  '(token                 "Listbox.update")
  '(token                 "Listbox_Tuple.update")
  '(token                 "Listdropentry.update")
  '(token                 "Listdropspinner.update")
  '(token                 "Listspinner.update")
  '(token                 "Menu.update")
  '(token                 "Menubutton.update")
  '(token                 "Message.update")
  '(token                 "Message_Window.update")
  '(token                 "Misc.update")
  '(token                 "Multicombobox.update")
  '(token                 "Multicombobox_X.update")
  '(token                 "Notebook.update")
  '(token                 "Num_Spinner.update")
  '(token                 "OptionMenu.update")
  '(token                 "Progress_Gauge.update")
  '(token                 "Progress_Gauge_T.update")
  '(token                 "Radiobutton.update")
  '(token                 "Scale.update")
  '(token                 "Scrollbar.update")
  '(token                 "Scrolled_Listbox.update")
  '(token                 "Scrolled_Text.update")
  '(token                 "Slide_Show.update")
  '(token                 "Statuslabel.update")
  '(token                 "Statuslabel.Label.update")
  '(token                 "Statustext.update")
  '(token                 "Statustext.Text.update")
  '(token                 "Studbutton.update")
  '(token                 "Tabbed_Notebook.update")
  '(token                 "Text.update")
  '(token                 "Tk.update")
  '(token                 "Toplevel.update")
  '(token                 "Tributton.update")
  '(token                 "Up_Down_Button.update")
  '(token                 "V_Panedwindow.update")
  '(token                 "V_Panedwindow.H_Separator.update")
  '(token                 "V_Scrollable.update")
  '(token                 "V_Separator.update")
  '(token                 "V_Strut.update")
  '(token                 "Widget.update")
  '(token                 "_C_Frame.update")
  '(token                 "_Combobox.Scrolled_Listbox.update")
  '(token                 "_Panedwindow.update")
  '(token                 "_Scrollable.update")
  '(token                 "_Separator.update")
  '(token                 "_Spinnerentry.update")
  '(token                 "_Statusframe.update")
  '(replacement           "update ()")
;;; update()
)

(lse-define-fill-in "update_idletasks()" 
  '(token)
  '(token                 "Balloon.update_idletasks")
  '(token                 "BaseWidget.update_idletasks")
  '(token                 "Button.update_idletasks")
  '(token                 "Buttonbox.update_idletasks")
  '(token                 "C_Entry.update_idletasks")
  '(token                 "C_Frame.update_idletasks")
  '(token                 "C_Listbox.update_idletasks")
  '(token                 "C_Menu.update_idletasks")
  '(token                 "C_Text.update_idletasks")
  '(token                 "Canvas.update_idletasks")
  '(token                 "Checkbutton.update_idletasks")
  '(token                 "Combo_Tuple.update_idletasks")
  '(token                 "Combo_Tuple_X.update_idletasks")
  '(token                 "Combobox.update_idletasks")
  '(token                 "Entry.update_idletasks")
  '(token                 "Entrybox.update_idletasks")
  '(token                 "Filename_Entry.update_idletasks")
  '(token                 "Frame.update_idletasks")
  '(token                 "H_Panedwindow.update_idletasks")
  '(token                 "H_Panedwindow.V_Separator.update_idletasks")
  '(token                 "H_Scrollable.update_idletasks")
  '(token                 "H_Separator.update_idletasks")
  '(token                 "H_Strut.update_idletasks")
  '(token                 "Label.update_idletasks")
  '(token                 "Listbox.update_idletasks")
  '(token                 "Listbox_Tuple.update_idletasks")
  '(token                 "Listdropentry.update_idletasks")
  '(token                 "Listdropspinner.update_idletasks")
  '(token                 "Listspinner.update_idletasks")
  '(token                 "Menu.update_idletasks")
  '(token                 "Menubutton.update_idletasks")
  '(token                 "Message.update_idletasks")
  '(token                 "Message_Window.update_idletasks")
  '(token                 "Misc.update_idletasks")
  '(token                 "Multicombobox.update_idletasks")
  '(token                 "Multicombobox_X.update_idletasks")
  '(token                 "Notebook.update_idletasks")
  '(token                 "Num_Spinner.update_idletasks")
  '(token                 "OptionMenu.update_idletasks")
  '(token                 "Progress_Gauge.update_idletasks")
  '(token                 "Progress_Gauge_T.update_idletasks")
  '(token                 "Radiobutton.update_idletasks")
  '(token                 "Scale.update_idletasks")
  '(token                 "Scrollbar.update_idletasks")
  '(token                 "Scrolled_Listbox.update_idletasks")
  '(token                 "Scrolled_Text.update_idletasks")
  '(token                 "Slide_Show.update_idletasks")
  '(token                 "Statuslabel.update_idletasks")
  '(token                 "Statuslabel.Label.update_idletasks")
  '(token                 "Statustext.update_idletasks")
  '(token                 "Statustext.Text.update_idletasks")
  '(token                 "Studbutton.update_idletasks")
  '(token                 "Tabbed_Notebook.update_idletasks")
  '(token                 "Text.update_idletasks")
  '(token                 "Tk.update_idletasks")
  '(token                 "Toplevel.update_idletasks")
  '(token                 "Tributton.update_idletasks")
  '(token                 "Up_Down_Button.update_idletasks")
  '(token                 "V_Panedwindow.update_idletasks")
  '(token                 "V_Panedwindow.H_Separator.update_idletasks")
  '(token                 "V_Scrollable.update_idletasks")
  '(token                 "V_Separator.update_idletasks")
  '(token                 "V_Strut.update_idletasks")
  '(token                 "Widget.update_idletasks")
  '(token                 "_C_Frame.update_idletasks")
  '(token                 "_Combobox.Scrolled_Listbox.update_idletasks")
  '(token                 "_Panedwindow.update_idletasks")
  '(token                 "_Scrollable.update_idletasks")
  '(token                 "_Separator.update_idletasks")
  '(token                 "_Spinnerentry.update_idletasks")
  '(token                 "_Statusframe.update_idletasks")
  '(replacement           "update_idletasks ()")
;;; update_idletasks()
)

(lse-define-fill-in "CTK.virtual_key_name:vev" 
  '(description           "Returns name of key bound to virtual event `vev'.")
  '(leading               ",")
;;; CTK.virtual_key_name:vev
)

(lse-define-fill-in "CTK.virtual_key_name:widget" 
  '(description           "Argument 2 of CTK.virtual_key_name (default = None)")
  '(leading               ",")
;;; CTK.virtual_key_name:widget
)

(lse-define-fill-in "CTK.virtual_key_name" 
  '(description           "Returns name of key bound to virtual event `vev'.")
  '(token)
  '(replacement           "CTK.virtual_key_name («CTK.virtual_key_name:vev», ««CTK.virtual_key_name:widget»»)")
;;; CTK.virtual_key_name
)

(lse-define-fill-in "_Scrollable.vport_pack:args" 
  '(description           "Argument 1 of _Scrollable.vport_pack")
  '(leading               ",")
  '(separator             ", ")
;;; _Scrollable.vport_pack:args
)

(lse-define-fill-in "vport_pack(args,kw)" 
  '(token)
  '(token                 "H_Scrollable.vport_pack")
  '(token                 "V_Scrollable.vport_pack")
  '(token                 "_Scrollable.vport_pack")
  '(replacement           "vport_pack (««_Scrollable.vport_pack:args»»···, ««py-named-arg»»···)")
;;; vport_pack(args,kw)
)

(lse-define-fill-in "Misc.wait_variable:name" 
  '(description           "Argument 1 of Misc.wait_variable (default = PY_VAR)")
  '(leading               ",")
;;; Misc.wait_variable:name
)

(lse-define-fill-in "wait_variable(name)" 
  '(token)
  '(token                 "Balloon.wait_variable")
  '(token                 "BaseWidget.wait_variable")
  '(token                 "Button.wait_variable")
  '(token                 "Buttonbox.wait_variable")
  '(token                 "C_Entry.wait_variable")
  '(token                 "C_Frame.wait_variable")
  '(token                 "C_Listbox.wait_variable")
  '(token                 "C_Menu.wait_variable")
  '(token                 "C_Text.wait_variable")
  '(token                 "Canvas.wait_variable")
  '(token                 "Checkbutton.wait_variable")
  '(token                 "Combo_Tuple.wait_variable")
  '(token                 "Combo_Tuple_X.wait_variable")
  '(token                 "Combobox.wait_variable")
  '(token                 "Entry.wait_variable")
  '(token                 "Entrybox.wait_variable")
  '(token                 "Filename_Entry.wait_variable")
  '(token                 "Frame.wait_variable")
  '(token                 "H_Panedwindow.wait_variable")
  '(token                 "H_Panedwindow.V_Separator.wait_variable")
  '(token                 "H_Scrollable.wait_variable")
  '(token                 "H_Separator.wait_variable")
  '(token                 "H_Strut.wait_variable")
  '(token                 "Label.wait_variable")
  '(token                 "Listbox.wait_variable")
  '(token                 "Listbox_Tuple.wait_variable")
  '(token                 "Listdropentry.wait_variable")
  '(token                 "Listdropspinner.wait_variable")
  '(token                 "Listspinner.wait_variable")
  '(token                 "Menu.wait_variable")
  '(token                 "Menubutton.wait_variable")
  '(token                 "Message.wait_variable")
  '(token                 "Message_Window.wait_variable")
  '(token                 "Misc.wait_variable")
  '(token                 "Multicombobox.wait_variable")
  '(token                 "Multicombobox_X.wait_variable")
  '(token                 "Notebook.wait_variable")
  '(token                 "Num_Spinner.wait_variable")
  '(token                 "OptionMenu.wait_variable")
  '(token                 "Progress_Gauge.wait_variable")
  '(token                 "Progress_Gauge_T.wait_variable")
  '(token                 "Radiobutton.wait_variable")
  '(token                 "Scale.wait_variable")
  '(token                 "Scrollbar.wait_variable")
  '(token                 "Scrolled_Listbox.wait_variable")
  '(token                 "Scrolled_Text.wait_variable")
  '(token                 "Slide_Show.wait_variable")
  '(token                 "Statuslabel.wait_variable")
  '(token                 "Statuslabel.Label.wait_variable")
  '(token                 "Statustext.wait_variable")
  '(token                 "Statustext.Text.wait_variable")
  '(token                 "Studbutton.wait_variable")
  '(token                 "Tabbed_Notebook.wait_variable")
  '(token                 "Text.wait_variable")
  '(token                 "Tk.wait_variable")
  '(token                 "Toplevel.wait_variable")
  '(token                 "Tributton.wait_variable")
  '(token                 "Up_Down_Button.wait_variable")
  '(token                 "V_Panedwindow.wait_variable")
  '(token                 "V_Panedwindow.H_Separator.wait_variable")
  '(token                 "V_Scrollable.wait_variable")
  '(token                 "V_Separator.wait_variable")
  '(token                 "V_Strut.wait_variable")
  '(token                 "Widget.wait_variable")
  '(token                 "_C_Frame.wait_variable")
  '(token                 "_Combobox.Scrolled_Listbox.wait_variable")
  '(token                 "_Panedwindow.wait_variable")
  '(token                 "_Scrollable.wait_variable")
  '(token                 "_Separator.wait_variable")
  '(token                 "_Spinnerentry.wait_variable")
  '(token                 "_Statusframe.wait_variable")
  '(replacement           "wait_variable (««Misc.wait_variable:name»»)")
;;; wait_variable(name)
)

(lse-define-fill-in "Misc.wait_visibility:window" 
  '(description           "Argument 1 of Misc.wait_visibility (default = None)")
  '(leading               ",")
;;; Misc.wait_visibility:window
)

(lse-define-fill-in "wait_visibility(window)" 
  '(token)
  '(token                 "Balloon.wait_visibility")
  '(token                 "BaseWidget.wait_visibility")
  '(token                 "Button.wait_visibility")
  '(token                 "Buttonbox.wait_visibility")
  '(token                 "C_Entry.wait_visibility")
  '(token                 "C_Frame.wait_visibility")
  '(token                 "C_Listbox.wait_visibility")
  '(token                 "C_Menu.wait_visibility")
  '(token                 "C_Text.wait_visibility")
  '(token                 "Canvas.wait_visibility")
  '(token                 "Checkbutton.wait_visibility")
  '(token                 "Combo_Tuple.wait_visibility")
  '(token                 "Combo_Tuple_X.wait_visibility")
  '(token                 "Combobox.wait_visibility")
  '(token                 "Entry.wait_visibility")
  '(token                 "Entrybox.wait_visibility")
  '(token                 "Filename_Entry.wait_visibility")
  '(token                 "Frame.wait_visibility")
  '(token                 "H_Panedwindow.wait_visibility")
  '(token                 "H_Panedwindow.V_Separator.wait_visibility")
  '(token                 "H_Scrollable.wait_visibility")
  '(token                 "H_Separator.wait_visibility")
  '(token                 "H_Strut.wait_visibility")
  '(token                 "Label.wait_visibility")
  '(token                 "Listbox.wait_visibility")
  '(token                 "Listbox_Tuple.wait_visibility")
  '(token                 "Listdropentry.wait_visibility")
  '(token                 "Listdropspinner.wait_visibility")
  '(token                 "Listspinner.wait_visibility")
  '(token                 "Menu.wait_visibility")
  '(token                 "Menubutton.wait_visibility")
  '(token                 "Message.wait_visibility")
  '(token                 "Message_Window.wait_visibility")
  '(token                 "Misc.wait_visibility")
  '(token                 "Multicombobox.wait_visibility")
  '(token                 "Multicombobox_X.wait_visibility")
  '(token                 "Notebook.wait_visibility")
  '(token                 "Num_Spinner.wait_visibility")
  '(token                 "OptionMenu.wait_visibility")
  '(token                 "Progress_Gauge.wait_visibility")
  '(token                 "Progress_Gauge_T.wait_visibility")
  '(token                 "Radiobutton.wait_visibility")
  '(token                 "Scale.wait_visibility")
  '(token                 "Scrollbar.wait_visibility")
  '(token                 "Scrolled_Listbox.wait_visibility")
  '(token                 "Scrolled_Text.wait_visibility")
  '(token                 "Slide_Show.wait_visibility")
  '(token                 "Statuslabel.wait_visibility")
  '(token                 "Statuslabel.Label.wait_visibility")
  '(token                 "Statustext.wait_visibility")
  '(token                 "Statustext.Text.wait_visibility")
  '(token                 "Studbutton.wait_visibility")
  '(token                 "Tabbed_Notebook.wait_visibility")
  '(token                 "Text.wait_visibility")
  '(token                 "Tk.wait_visibility")
  '(token                 "Toplevel.wait_visibility")
  '(token                 "Tributton.wait_visibility")
  '(token                 "Up_Down_Button.wait_visibility")
  '(token                 "V_Panedwindow.wait_visibility")
  '(token                 "V_Panedwindow.H_Separator.wait_visibility")
  '(token                 "V_Scrollable.wait_visibility")
  '(token                 "V_Separator.wait_visibility")
  '(token                 "V_Strut.wait_visibility")
  '(token                 "Widget.wait_visibility")
  '(token                 "_C_Frame.wait_visibility")
  '(token                 "_Combobox.Scrolled_Listbox.wait_visibility")
  '(token                 "_Panedwindow.wait_visibility")
  '(token                 "_Scrollable.wait_visibility")
  '(token                 "_Separator.wait_visibility")
  '(token                 "_Spinnerentry.wait_visibility")
  '(token                 "_Statusframe.wait_visibility")
  '(replacement           "wait_visibility (««Misc.wait_visibility:window»»)")
;;; wait_visibility(window)
)

(lse-define-fill-in "Misc.wait_window:window" 
  '(description           "Argument 1 of Misc.wait_window (default = None)")
  '(leading               ",")
;;; Misc.wait_window:window
)

(lse-define-fill-in "wait_window(window)" 
  '(token)
  '(token                 "Balloon.wait_window")
  '(token                 "BaseWidget.wait_window")
  '(token                 "Button.wait_window")
  '(token                 "Buttonbox.wait_window")
  '(token                 "C_Entry.wait_window")
  '(token                 "C_Frame.wait_window")
  '(token                 "C_Listbox.wait_window")
  '(token                 "C_Menu.wait_window")
  '(token                 "C_Text.wait_window")
  '(token                 "Canvas.wait_window")
  '(token                 "Checkbutton.wait_window")
  '(token                 "Combo_Tuple.wait_window")
  '(token                 "Combo_Tuple_X.wait_window")
  '(token                 "Combobox.wait_window")
  '(token                 "Entry.wait_window")
  '(token                 "Entrybox.wait_window")
  '(token                 "Filename_Entry.wait_window")
  '(token                 "Frame.wait_window")
  '(token                 "H_Panedwindow.wait_window")
  '(token                 "H_Panedwindow.V_Separator.wait_window")
  '(token                 "H_Scrollable.wait_window")
  '(token                 "H_Separator.wait_window")
  '(token                 "H_Strut.wait_window")
  '(token                 "Label.wait_window")
  '(token                 "Listbox.wait_window")
  '(token                 "Listbox_Tuple.wait_window")
  '(token                 "Listdropentry.wait_window")
  '(token                 "Listdropspinner.wait_window")
  '(token                 "Listspinner.wait_window")
  '(token                 "Menu.wait_window")
  '(token                 "Menubutton.wait_window")
  '(token                 "Message.wait_window")
  '(token                 "Message_Window.wait_window")
  '(token                 "Misc.wait_window")
  '(token                 "Multicombobox.wait_window")
  '(token                 "Multicombobox_X.wait_window")
  '(token                 "Notebook.wait_window")
  '(token                 "Num_Spinner.wait_window")
  '(token                 "OptionMenu.wait_window")
  '(token                 "Progress_Gauge.wait_window")
  '(token                 "Progress_Gauge_T.wait_window")
  '(token                 "Radiobutton.wait_window")
  '(token                 "Scale.wait_window")
  '(token                 "Scrollbar.wait_window")
  '(token                 "Scrolled_Listbox.wait_window")
  '(token                 "Scrolled_Text.wait_window")
  '(token                 "Slide_Show.wait_window")
  '(token                 "Statuslabel.wait_window")
  '(token                 "Statuslabel.Label.wait_window")
  '(token                 "Statustext.wait_window")
  '(token                 "Statustext.Text.wait_window")
  '(token                 "Studbutton.wait_window")
  '(token                 "Tabbed_Notebook.wait_window")
  '(token                 "Text.wait_window")
  '(token                 "Tk.wait_window")
  '(token                 "Toplevel.wait_window")
  '(token                 "Tributton.wait_window")
  '(token                 "Up_Down_Button.wait_window")
  '(token                 "V_Panedwindow.wait_window")
  '(token                 "V_Panedwindow.H_Separator.wait_window")
  '(token                 "V_Scrollable.wait_window")
  '(token                 "V_Separator.wait_window")
  '(token                 "V_Strut.wait_window")
  '(token                 "Widget.wait_window")
  '(token                 "_C_Frame.wait_window")
  '(token                 "_Combobox.Scrolled_Listbox.wait_window")
  '(token                 "_Panedwindow.wait_window")
  '(token                 "_Scrollable.wait_window")
  '(token                 "_Separator.wait_window")
  '(token                 "_Spinnerentry.wait_window")
  '(token                 "_Statusframe.wait_window")
  '(replacement           "wait_window (««Misc.wait_window:window»»)")
;;; wait_window(window)
)

(lse-define-fill-in "Misc.waitvar:name" 
  '(description           "Argument 1 of Misc.waitvar (default = PY_VAR)")
  '(leading               ",")
;;; Misc.waitvar:name
)

(lse-define-fill-in "waitvar(name)" 
  '(token)
  '(token                 "Balloon.waitvar")
  '(token                 "BaseWidget.waitvar")
  '(token                 "Button.waitvar")
  '(token                 "Buttonbox.waitvar")
  '(token                 "C_Entry.waitvar")
  '(token                 "C_Frame.waitvar")
  '(token                 "C_Listbox.waitvar")
  '(token                 "C_Menu.waitvar")
  '(token                 "C_Text.waitvar")
  '(token                 "Canvas.waitvar")
  '(token                 "Checkbutton.waitvar")
  '(token                 "Combo_Tuple.waitvar")
  '(token                 "Combo_Tuple_X.waitvar")
  '(token                 "Combobox.waitvar")
  '(token                 "Entry.waitvar")
  '(token                 "Entrybox.waitvar")
  '(token                 "Filename_Entry.waitvar")
  '(token                 "Frame.waitvar")
  '(token                 "H_Panedwindow.waitvar")
  '(token                 "H_Panedwindow.V_Separator.waitvar")
  '(token                 "H_Scrollable.waitvar")
  '(token                 "H_Separator.waitvar")
  '(token                 "H_Strut.waitvar")
  '(token                 "Label.waitvar")
  '(token                 "Listbox.waitvar")
  '(token                 "Listbox_Tuple.waitvar")
  '(token                 "Listdropentry.waitvar")
  '(token                 "Listdropspinner.waitvar")
  '(token                 "Listspinner.waitvar")
  '(token                 "Menu.waitvar")
  '(token                 "Menubutton.waitvar")
  '(token                 "Message.waitvar")
  '(token                 "Message_Window.waitvar")
  '(token                 "Misc.waitvar")
  '(token                 "Multicombobox.waitvar")
  '(token                 "Multicombobox_X.waitvar")
  '(token                 "Notebook.waitvar")
  '(token                 "Num_Spinner.waitvar")
  '(token                 "OptionMenu.waitvar")
  '(token                 "Progress_Gauge.waitvar")
  '(token                 "Progress_Gauge_T.waitvar")
  '(token                 "Radiobutton.waitvar")
  '(token                 "Scale.waitvar")
  '(token                 "Scrollbar.waitvar")
  '(token                 "Scrolled_Listbox.waitvar")
  '(token                 "Scrolled_Text.waitvar")
  '(token                 "Slide_Show.waitvar")
  '(token                 "Statuslabel.waitvar")
  '(token                 "Statuslabel.Label.waitvar")
  '(token                 "Statustext.waitvar")
  '(token                 "Statustext.Text.waitvar")
  '(token                 "Studbutton.waitvar")
  '(token                 "Tabbed_Notebook.waitvar")
  '(token                 "Text.waitvar")
  '(token                 "Tk.waitvar")
  '(token                 "Toplevel.waitvar")
  '(token                 "Tributton.waitvar")
  '(token                 "Up_Down_Button.waitvar")
  '(token                 "V_Panedwindow.waitvar")
  '(token                 "V_Panedwindow.H_Separator.waitvar")
  '(token                 "V_Scrollable.waitvar")
  '(token                 "V_Separator.waitvar")
  '(token                 "V_Strut.waitvar")
  '(token                 "Widget.waitvar")
  '(token                 "_C_Frame.waitvar")
  '(token                 "_Combobox.Scrolled_Listbox.waitvar")
  '(token                 "_Panedwindow.waitvar")
  '(token                 "_Scrollable.waitvar")
  '(token                 "_Separator.waitvar")
  '(token                 "_Spinnerentry.waitvar")
  '(token                 "_Statusframe.waitvar")
  '(replacement           "waitvar (««Misc.waitvar:name»»)")
;;; waitvar(name)
)

(lse-define-fill-in "width()" 
  '(token)
  '(token                 "BitmapImage.width")
  '(token                 "Image.width")
  '(token                 "PhotoImage.width")
  '(replacement           "width ()")
;;; width()
)

(lse-define-fill-in "Statustext.Text.window_cget:index" 
  '(description           "Argument 1 of Statustext.Text.window_cget")
  '(leading               ",")
;;; Statustext.Text.window_cget:index
)

(lse-define-fill-in "Statustext.Text.window_cget:option" 
  '(description           "Argument 2 of Statustext.Text.window_cget")
  '(leading               ",")
;;; Statustext.Text.window_cget:option
)

(lse-define-fill-in "window_cget(index,option)" 
  '(token)
  '(token                 "Statustext.Text.window_cget")
  '(token                 "Text.window_cget")
  '(replacement           "window_cget («Statustext.Text.window_cget:index», «Statustext.Text.window_cget:option»)")
;;; window_cget(index,option)
)

(lse-define-fill-in "Statustext.Text.window_config:index" 
  '(description           "Argument 1 of Statustext.Text.window_config")
  '(leading               ",")
;;; Statustext.Text.window_config:index
)

(lse-define-fill-in "Statustext.Text.window_config:cnf" 
  '(description           "Argument 2 of Statustext.Text.window_config (default = {})")
  '(leading               ",")
;;; Statustext.Text.window_config:cnf
)

(lse-define-fill-in "window_config(index,cnf,kw)" 
  '(token)
  '(token                 "Statustext.Text.window_config")
  '(token                 "Text.window_config")
  '(replacement           "window_config («Statustext.Text.window_config:index», ««Statustext.Text.window_config:cnf»», ««py-named-arg»»···)")
;;; window_config(index,cnf,kw)
)

(lse-define-fill-in "Statustext.Text.window_configure:index" 
  '(description           "Argument 1 of Statustext.Text.window_configure")
  '(leading               ",")
;;; Statustext.Text.window_configure:index
)

(lse-define-fill-in "Statustext.Text.window_configure:cnf" 
  '(description           "Argument 2 of Statustext.Text.window_configure (default = {})")
  '(leading               ",")
;;; Statustext.Text.window_configure:cnf
)

(lse-define-fill-in "window_configure(index,cnf,kw)" 
  '(token)
  '(token                 "Statustext.Text.window_configure")
  '(token                 "Text.window_configure")
  '(replacement           "window_configure («Statustext.Text.window_configure:index», ««Statustext.Text.window_configure:cnf»», ««py-named-arg»»···)")
;;; window_configure(index,cnf,kw)
)

(lse-define-fill-in "Statustext.Text.window_create:index" 
  '(description           "Argument 1 of Statustext.Text.window_create")
  '(leading               ",")
;;; Statustext.Text.window_create:index
)

(lse-define-fill-in "Statustext.Text.window_create:cnf" 
  '(description           "Argument 2 of Statustext.Text.window_create (default = {})")
  '(leading               ",")
;;; Statustext.Text.window_create:cnf
)

(lse-define-fill-in "window_create(index,cnf,kw)" 
  '(token)
  '(token                 "Statustext.Text.window_create")
  '(token                 "Text.window_create")
  '(replacement           "window_create («Statustext.Text.window_create:index», ««Statustext.Text.window_create:cnf»», ««py-named-arg»»···)")
;;; window_create(index,cnf,kw)
)

(lse-define-fill-in "window_names()" 
  '(token)
  '(token                 "Statustext.Text.window_names")
  '(token                 "Text.window_names")
  '(replacement           "window_names ()")
;;; window_names()
)

(lse-define-fill-in "Misc.winfo_atom:name" 
  '(description           "Argument 1 of Misc.winfo_atom")
  '(leading               ",")
;;; Misc.winfo_atom:name
)

(lse-define-fill-in "Misc.winfo_atom:displayof" 
  '(description           "Argument 2 of Misc.winfo_atom (default = 0)")
  '(leading               ",")
;;; Misc.winfo_atom:displayof
)

(lse-define-fill-in "winfo_atom(name,displayof)" 
  '(token)
  '(token                 "Balloon.winfo_atom")
  '(token                 "BaseWidget.winfo_atom")
  '(token                 "Button.winfo_atom")
  '(token                 "Buttonbox.winfo_atom")
  '(token                 "C_Entry.winfo_atom")
  '(token                 "C_Frame.winfo_atom")
  '(token                 "C_Listbox.winfo_atom")
  '(token                 "C_Menu.winfo_atom")
  '(token                 "C_Text.winfo_atom")
  '(token                 "Canvas.winfo_atom")
  '(token                 "Checkbutton.winfo_atom")
  '(token                 "Combo_Tuple.winfo_atom")
  '(token                 "Combo_Tuple_X.winfo_atom")
  '(token                 "Combobox.winfo_atom")
  '(token                 "Entry.winfo_atom")
  '(token                 "Entrybox.winfo_atom")
  '(token                 "Filename_Entry.winfo_atom")
  '(token                 "Frame.winfo_atom")
  '(token                 "H_Panedwindow.winfo_atom")
  '(token                 "H_Panedwindow.V_Separator.winfo_atom")
  '(token                 "H_Scrollable.winfo_atom")
  '(token                 "H_Separator.winfo_atom")
  '(token                 "H_Strut.winfo_atom")
  '(token                 "Label.winfo_atom")
  '(token                 "Listbox.winfo_atom")
  '(token                 "Listbox_Tuple.winfo_atom")
  '(token                 "Listdropentry.winfo_atom")
  '(token                 "Listdropspinner.winfo_atom")
  '(token                 "Listspinner.winfo_atom")
  '(token                 "Menu.winfo_atom")
  '(token                 "Menubutton.winfo_atom")
  '(token                 "Message.winfo_atom")
  '(token                 "Message_Window.winfo_atom")
  '(token                 "Misc.winfo_atom")
  '(token                 "Multicombobox.winfo_atom")
  '(token                 "Multicombobox_X.winfo_atom")
  '(token                 "Notebook.winfo_atom")
  '(token                 "Num_Spinner.winfo_atom")
  '(token                 "OptionMenu.winfo_atom")
  '(token                 "Progress_Gauge.winfo_atom")
  '(token                 "Progress_Gauge_T.winfo_atom")
  '(token                 "Radiobutton.winfo_atom")
  '(token                 "Scale.winfo_atom")
  '(token                 "Scrollbar.winfo_atom")
  '(token                 "Scrolled_Listbox.winfo_atom")
  '(token                 "Scrolled_Text.winfo_atom")
  '(token                 "Slide_Show.winfo_atom")
  '(token                 "Statuslabel.winfo_atom")
  '(token                 "Statuslabel.Label.winfo_atom")
  '(token                 "Statustext.winfo_atom")
  '(token                 "Statustext.Text.winfo_atom")
  '(token                 "Studbutton.winfo_atom")
  '(token                 "Tabbed_Notebook.winfo_atom")
  '(token                 "Text.winfo_atom")
  '(token                 "Tk.winfo_atom")
  '(token                 "Toplevel.winfo_atom")
  '(token                 "Tributton.winfo_atom")
  '(token                 "Up_Down_Button.winfo_atom")
  '(token                 "V_Panedwindow.winfo_atom")
  '(token                 "V_Panedwindow.H_Separator.winfo_atom")
  '(token                 "V_Scrollable.winfo_atom")
  '(token                 "V_Separator.winfo_atom")
  '(token                 "V_Strut.winfo_atom")
  '(token                 "Widget.winfo_atom")
  '(token                 "_C_Frame.winfo_atom")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_atom")
  '(token                 "_Panedwindow.winfo_atom")
  '(token                 "_Scrollable.winfo_atom")
  '(token                 "_Separator.winfo_atom")
  '(token                 "_Spinnerentry.winfo_atom")
  '(token                 "_Statusframe.winfo_atom")
  '(replacement           "winfo_atom («Misc.winfo_atom:name», ««Misc.winfo_atom:displayof»»)")
;;; winfo_atom(name,displayof)
)

(lse-define-fill-in "Misc.winfo_atomname:id" 
  '(description           "Argument 1 of Misc.winfo_atomname")
  '(leading               ",")
;;; Misc.winfo_atomname:id
)

(lse-define-fill-in "Misc.winfo_atomname:displayof" 
  '(description           "Argument 2 of Misc.winfo_atomname (default = 0)")
  '(leading               ",")
;;; Misc.winfo_atomname:displayof
)

(lse-define-fill-in "winfo_atomname(id,displayof)" 
  '(token)
  '(token                 "Balloon.winfo_atomname")
  '(token                 "BaseWidget.winfo_atomname")
  '(token                 "Button.winfo_atomname")
  '(token                 "Buttonbox.winfo_atomname")
  '(token                 "C_Entry.winfo_atomname")
  '(token                 "C_Frame.winfo_atomname")
  '(token                 "C_Listbox.winfo_atomname")
  '(token                 "C_Menu.winfo_atomname")
  '(token                 "C_Text.winfo_atomname")
  '(token                 "Canvas.winfo_atomname")
  '(token                 "Checkbutton.winfo_atomname")
  '(token                 "Combo_Tuple.winfo_atomname")
  '(token                 "Combo_Tuple_X.winfo_atomname")
  '(token                 "Combobox.winfo_atomname")
  '(token                 "Entry.winfo_atomname")
  '(token                 "Entrybox.winfo_atomname")
  '(token                 "Filename_Entry.winfo_atomname")
  '(token                 "Frame.winfo_atomname")
  '(token                 "H_Panedwindow.winfo_atomname")
  '(token                 "H_Panedwindow.V_Separator.winfo_atomname")
  '(token                 "H_Scrollable.winfo_atomname")
  '(token                 "H_Separator.winfo_atomname")
  '(token                 "H_Strut.winfo_atomname")
  '(token                 "Label.winfo_atomname")
  '(token                 "Listbox.winfo_atomname")
  '(token                 "Listbox_Tuple.winfo_atomname")
  '(token                 "Listdropentry.winfo_atomname")
  '(token                 "Listdropspinner.winfo_atomname")
  '(token                 "Listspinner.winfo_atomname")
  '(token                 "Menu.winfo_atomname")
  '(token                 "Menubutton.winfo_atomname")
  '(token                 "Message.winfo_atomname")
  '(token                 "Message_Window.winfo_atomname")
  '(token                 "Misc.winfo_atomname")
  '(token                 "Multicombobox.winfo_atomname")
  '(token                 "Multicombobox_X.winfo_atomname")
  '(token                 "Notebook.winfo_atomname")
  '(token                 "Num_Spinner.winfo_atomname")
  '(token                 "OptionMenu.winfo_atomname")
  '(token                 "Progress_Gauge.winfo_atomname")
  '(token                 "Progress_Gauge_T.winfo_atomname")
  '(token                 "Radiobutton.winfo_atomname")
  '(token                 "Scale.winfo_atomname")
  '(token                 "Scrollbar.winfo_atomname")
  '(token                 "Scrolled_Listbox.winfo_atomname")
  '(token                 "Scrolled_Text.winfo_atomname")
  '(token                 "Slide_Show.winfo_atomname")
  '(token                 "Statuslabel.winfo_atomname")
  '(token                 "Statuslabel.Label.winfo_atomname")
  '(token                 "Statustext.winfo_atomname")
  '(token                 "Statustext.Text.winfo_atomname")
  '(token                 "Studbutton.winfo_atomname")
  '(token                 "Tabbed_Notebook.winfo_atomname")
  '(token                 "Text.winfo_atomname")
  '(token                 "Tk.winfo_atomname")
  '(token                 "Toplevel.winfo_atomname")
  '(token                 "Tributton.winfo_atomname")
  '(token                 "Up_Down_Button.winfo_atomname")
  '(token                 "V_Panedwindow.winfo_atomname")
  '(token                 "V_Panedwindow.H_Separator.winfo_atomname")
  '(token                 "V_Scrollable.winfo_atomname")
  '(token                 "V_Separator.winfo_atomname")
  '(token                 "V_Strut.winfo_atomname")
  '(token                 "Widget.winfo_atomname")
  '(token                 "_C_Frame.winfo_atomname")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_atomname")
  '(token                 "_Panedwindow.winfo_atomname")
  '(token                 "_Scrollable.winfo_atomname")
  '(token                 "_Separator.winfo_atomname")
  '(token                 "_Spinnerentry.winfo_atomname")
  '(token                 "_Statusframe.winfo_atomname")
  '(replacement           "winfo_atomname («Misc.winfo_atomname:id», ««Misc.winfo_atomname:displayof»»)")
;;; winfo_atomname(id,displayof)
)

(lse-define-fill-in "winfo_cells()" 
  '(token)
  '(token                 "Balloon.winfo_cells")
  '(token                 "BaseWidget.winfo_cells")
  '(token                 "Button.winfo_cells")
  '(token                 "Buttonbox.winfo_cells")
  '(token                 "C_Entry.winfo_cells")
  '(token                 "C_Frame.winfo_cells")
  '(token                 "C_Listbox.winfo_cells")
  '(token                 "C_Menu.winfo_cells")
  '(token                 "C_Text.winfo_cells")
  '(token                 "Canvas.winfo_cells")
  '(token                 "Checkbutton.winfo_cells")
  '(token                 "Combo_Tuple.winfo_cells")
  '(token                 "Combo_Tuple_X.winfo_cells")
  '(token                 "Combobox.winfo_cells")
  '(token                 "Entry.winfo_cells")
  '(token                 "Entrybox.winfo_cells")
  '(token                 "Filename_Entry.winfo_cells")
  '(token                 "Frame.winfo_cells")
  '(token                 "H_Panedwindow.winfo_cells")
  '(token                 "H_Panedwindow.V_Separator.winfo_cells")
  '(token                 "H_Scrollable.winfo_cells")
  '(token                 "H_Separator.winfo_cells")
  '(token                 "H_Strut.winfo_cells")
  '(token                 "Label.winfo_cells")
  '(token                 "Listbox.winfo_cells")
  '(token                 "Listbox_Tuple.winfo_cells")
  '(token                 "Listdropentry.winfo_cells")
  '(token                 "Listdropspinner.winfo_cells")
  '(token                 "Listspinner.winfo_cells")
  '(token                 "Menu.winfo_cells")
  '(token                 "Menubutton.winfo_cells")
  '(token                 "Message.winfo_cells")
  '(token                 "Message_Window.winfo_cells")
  '(token                 "Misc.winfo_cells")
  '(token                 "Multicombobox.winfo_cells")
  '(token                 "Multicombobox_X.winfo_cells")
  '(token                 "Notebook.winfo_cells")
  '(token                 "Num_Spinner.winfo_cells")
  '(token                 "OptionMenu.winfo_cells")
  '(token                 "Progress_Gauge.winfo_cells")
  '(token                 "Progress_Gauge_T.winfo_cells")
  '(token                 "Radiobutton.winfo_cells")
  '(token                 "Scale.winfo_cells")
  '(token                 "Scrollbar.winfo_cells")
  '(token                 "Scrolled_Listbox.winfo_cells")
  '(token                 "Scrolled_Text.winfo_cells")
  '(token                 "Slide_Show.winfo_cells")
  '(token                 "Statuslabel.winfo_cells")
  '(token                 "Statuslabel.Label.winfo_cells")
  '(token                 "Statustext.winfo_cells")
  '(token                 "Statustext.Text.winfo_cells")
  '(token                 "Studbutton.winfo_cells")
  '(token                 "Tabbed_Notebook.winfo_cells")
  '(token                 "Text.winfo_cells")
  '(token                 "Tk.winfo_cells")
  '(token                 "Toplevel.winfo_cells")
  '(token                 "Tributton.winfo_cells")
  '(token                 "Up_Down_Button.winfo_cells")
  '(token                 "V_Panedwindow.winfo_cells")
  '(token                 "V_Panedwindow.H_Separator.winfo_cells")
  '(token                 "V_Scrollable.winfo_cells")
  '(token                 "V_Separator.winfo_cells")
  '(token                 "V_Strut.winfo_cells")
  '(token                 "Widget.winfo_cells")
  '(token                 "_C_Frame.winfo_cells")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_cells")
  '(token                 "_Panedwindow.winfo_cells")
  '(token                 "_Scrollable.winfo_cells")
  '(token                 "_Separator.winfo_cells")
  '(token                 "_Spinnerentry.winfo_cells")
  '(token                 "_Statusframe.winfo_cells")
  '(replacement           "winfo_cells ()")
;;; winfo_cells()
)

(lse-define-fill-in "winfo_children()" 
  '(token)
  '(token                 "Balloon.winfo_children")
  '(token                 "BaseWidget.winfo_children")
  '(token                 "Button.winfo_children")
  '(token                 "Buttonbox.winfo_children")
  '(token                 "C_Entry.winfo_children")
  '(token                 "C_Frame.winfo_children")
  '(token                 "C_Listbox.winfo_children")
  '(token                 "C_Menu.winfo_children")
  '(token                 "C_Text.winfo_children")
  '(token                 "Canvas.winfo_children")
  '(token                 "Checkbutton.winfo_children")
  '(token                 "Combo_Tuple.winfo_children")
  '(token                 "Combo_Tuple_X.winfo_children")
  '(token                 "Combobox.winfo_children")
  '(token                 "Entry.winfo_children")
  '(token                 "Entrybox.winfo_children")
  '(token                 "Filename_Entry.winfo_children")
  '(token                 "Frame.winfo_children")
  '(token                 "H_Panedwindow.winfo_children")
  '(token                 "H_Panedwindow.V_Separator.winfo_children")
  '(token                 "H_Scrollable.winfo_children")
  '(token                 "H_Separator.winfo_children")
  '(token                 "H_Strut.winfo_children")
  '(token                 "Label.winfo_children")
  '(token                 "Listbox.winfo_children")
  '(token                 "Listbox_Tuple.winfo_children")
  '(token                 "Listdropentry.winfo_children")
  '(token                 "Listdropspinner.winfo_children")
  '(token                 "Listspinner.winfo_children")
  '(token                 "Menu.winfo_children")
  '(token                 "Menubutton.winfo_children")
  '(token                 "Message.winfo_children")
  '(token                 "Message_Window.winfo_children")
  '(token                 "Misc.winfo_children")
  '(token                 "Multicombobox.winfo_children")
  '(token                 "Multicombobox_X.winfo_children")
  '(token                 "Notebook.winfo_children")
  '(token                 "Num_Spinner.winfo_children")
  '(token                 "OptionMenu.winfo_children")
  '(token                 "Progress_Gauge.winfo_children")
  '(token                 "Progress_Gauge_T.winfo_children")
  '(token                 "Radiobutton.winfo_children")
  '(token                 "Scale.winfo_children")
  '(token                 "Scrollbar.winfo_children")
  '(token                 "Scrolled_Listbox.winfo_children")
  '(token                 "Scrolled_Text.winfo_children")
  '(token                 "Slide_Show.winfo_children")
  '(token                 "Statuslabel.winfo_children")
  '(token                 "Statuslabel.Label.winfo_children")
  '(token                 "Statustext.winfo_children")
  '(token                 "Statustext.Text.winfo_children")
  '(token                 "Studbutton.winfo_children")
  '(token                 "Tabbed_Notebook.winfo_children")
  '(token                 "Text.winfo_children")
  '(token                 "Tk.winfo_children")
  '(token                 "Toplevel.winfo_children")
  '(token                 "Tributton.winfo_children")
  '(token                 "Up_Down_Button.winfo_children")
  '(token                 "V_Panedwindow.winfo_children")
  '(token                 "V_Panedwindow.H_Separator.winfo_children")
  '(token                 "V_Scrollable.winfo_children")
  '(token                 "V_Separator.winfo_children")
  '(token                 "V_Strut.winfo_children")
  '(token                 "Widget.winfo_children")
  '(token                 "_C_Frame.winfo_children")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_children")
  '(token                 "_Panedwindow.winfo_children")
  '(token                 "_Scrollable.winfo_children")
  '(token                 "_Separator.winfo_children")
  '(token                 "_Spinnerentry.winfo_children")
  '(token                 "_Statusframe.winfo_children")
  '(replacement           "winfo_children ()")
;;; winfo_children()
)

(lse-define-fill-in "winfo_class()" 
  '(token)
  '(token                 "Balloon.winfo_class")
  '(token                 "BaseWidget.winfo_class")
  '(token                 "Button.winfo_class")
  '(token                 "Buttonbox.winfo_class")
  '(token                 "C_Entry.winfo_class")
  '(token                 "C_Frame.winfo_class")
  '(token                 "C_Listbox.winfo_class")
  '(token                 "C_Menu.winfo_class")
  '(token                 "C_Text.winfo_class")
  '(token                 "Canvas.winfo_class")
  '(token                 "Checkbutton.winfo_class")
  '(token                 "Combo_Tuple.winfo_class")
  '(token                 "Combo_Tuple_X.winfo_class")
  '(token                 "Combobox.winfo_class")
  '(token                 "Entry.winfo_class")
  '(token                 "Entrybox.winfo_class")
  '(token                 "Filename_Entry.winfo_class")
  '(token                 "Frame.winfo_class")
  '(token                 "H_Panedwindow.winfo_class")
  '(token                 "H_Panedwindow.V_Separator.winfo_class")
  '(token                 "H_Scrollable.winfo_class")
  '(token                 "H_Separator.winfo_class")
  '(token                 "H_Strut.winfo_class")
  '(token                 "Label.winfo_class")
  '(token                 "Listbox.winfo_class")
  '(token                 "Listbox_Tuple.winfo_class")
  '(token                 "Listdropentry.winfo_class")
  '(token                 "Listdropspinner.winfo_class")
  '(token                 "Listspinner.winfo_class")
  '(token                 "Menu.winfo_class")
  '(token                 "Menubutton.winfo_class")
  '(token                 "Message.winfo_class")
  '(token                 "Message_Window.winfo_class")
  '(token                 "Misc.winfo_class")
  '(token                 "Multicombobox.winfo_class")
  '(token                 "Multicombobox_X.winfo_class")
  '(token                 "Notebook.winfo_class")
  '(token                 "Num_Spinner.winfo_class")
  '(token                 "OptionMenu.winfo_class")
  '(token                 "Progress_Gauge.winfo_class")
  '(token                 "Progress_Gauge_T.winfo_class")
  '(token                 "Radiobutton.winfo_class")
  '(token                 "Scale.winfo_class")
  '(token                 "Scrollbar.winfo_class")
  '(token                 "Scrolled_Listbox.winfo_class")
  '(token                 "Scrolled_Text.winfo_class")
  '(token                 "Slide_Show.winfo_class")
  '(token                 "Statuslabel.winfo_class")
  '(token                 "Statuslabel.Label.winfo_class")
  '(token                 "Statustext.winfo_class")
  '(token                 "Statustext.Text.winfo_class")
  '(token                 "Studbutton.winfo_class")
  '(token                 "Tabbed_Notebook.winfo_class")
  '(token                 "Text.winfo_class")
  '(token                 "Tk.winfo_class")
  '(token                 "Toplevel.winfo_class")
  '(token                 "Tributton.winfo_class")
  '(token                 "Up_Down_Button.winfo_class")
  '(token                 "V_Panedwindow.winfo_class")
  '(token                 "V_Panedwindow.H_Separator.winfo_class")
  '(token                 "V_Scrollable.winfo_class")
  '(token                 "V_Separator.winfo_class")
  '(token                 "V_Strut.winfo_class")
  '(token                 "Widget.winfo_class")
  '(token                 "_C_Frame.winfo_class")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_class")
  '(token                 "_Panedwindow.winfo_class")
  '(token                 "_Scrollable.winfo_class")
  '(token                 "_Separator.winfo_class")
  '(token                 "_Spinnerentry.winfo_class")
  '(token                 "_Statusframe.winfo_class")
  '(replacement           "winfo_class ()")
;;; winfo_class()
)

(lse-define-fill-in "winfo_colormapfull()" 
  '(token)
  '(token                 "Balloon.winfo_colormapfull")
  '(token                 "BaseWidget.winfo_colormapfull")
  '(token                 "Button.winfo_colormapfull")
  '(token                 "Buttonbox.winfo_colormapfull")
  '(token                 "C_Entry.winfo_colormapfull")
  '(token                 "C_Frame.winfo_colormapfull")
  '(token                 "C_Listbox.winfo_colormapfull")
  '(token                 "C_Menu.winfo_colormapfull")
  '(token                 "C_Text.winfo_colormapfull")
  '(token                 "Canvas.winfo_colormapfull")
  '(token                 "Checkbutton.winfo_colormapfull")
  '(token                 "Combo_Tuple.winfo_colormapfull")
  '(token                 "Combo_Tuple_X.winfo_colormapfull")
  '(token                 "Combobox.winfo_colormapfull")
  '(token                 "Entry.winfo_colormapfull")
  '(token                 "Entrybox.winfo_colormapfull")
  '(token                 "Filename_Entry.winfo_colormapfull")
  '(token                 "Frame.winfo_colormapfull")
  '(token                 "H_Panedwindow.winfo_colormapfull")
  '(token                 "H_Panedwindow.V_Separator.winfo_colormapfull")
  '(token                 "H_Scrollable.winfo_colormapfull")
  '(token                 "H_Separator.winfo_colormapfull")
  '(token                 "H_Strut.winfo_colormapfull")
  '(token                 "Label.winfo_colormapfull")
  '(token                 "Listbox.winfo_colormapfull")
  '(token                 "Listbox_Tuple.winfo_colormapfull")
  '(token                 "Listdropentry.winfo_colormapfull")
  '(token                 "Listdropspinner.winfo_colormapfull")
  '(token                 "Listspinner.winfo_colormapfull")
  '(token                 "Menu.winfo_colormapfull")
  '(token                 "Menubutton.winfo_colormapfull")
  '(token                 "Message.winfo_colormapfull")
  '(token                 "Message_Window.winfo_colormapfull")
  '(token                 "Misc.winfo_colormapfull")
  '(token                 "Multicombobox.winfo_colormapfull")
  '(token                 "Multicombobox_X.winfo_colormapfull")
  '(token                 "Notebook.winfo_colormapfull")
  '(token                 "Num_Spinner.winfo_colormapfull")
  '(token                 "OptionMenu.winfo_colormapfull")
  '(token                 "Progress_Gauge.winfo_colormapfull")
  '(token                 "Progress_Gauge_T.winfo_colormapfull")
  '(token                 "Radiobutton.winfo_colormapfull")
  '(token                 "Scale.winfo_colormapfull")
  '(token                 "Scrollbar.winfo_colormapfull")
  '(token                 "Scrolled_Listbox.winfo_colormapfull")
  '(token                 "Scrolled_Text.winfo_colormapfull")
  '(token                 "Slide_Show.winfo_colormapfull")
  '(token                 "Statuslabel.winfo_colormapfull")
  '(token                 "Statuslabel.Label.winfo_colormapfull")
  '(token                 "Statustext.winfo_colormapfull")
  '(token                 "Statustext.Text.winfo_colormapfull")
  '(token                 "Studbutton.winfo_colormapfull")
  '(token                 "Tabbed_Notebook.winfo_colormapfull")
  '(token                 "Text.winfo_colormapfull")
  '(token                 "Tk.winfo_colormapfull")
  '(token                 "Toplevel.winfo_colormapfull")
  '(token                 "Tributton.winfo_colormapfull")
  '(token                 "Up_Down_Button.winfo_colormapfull")
  '(token                 "V_Panedwindow.winfo_colormapfull")
  '(token                 "V_Panedwindow.H_Separator.winfo_colormapfull")
  '(token                 "V_Scrollable.winfo_colormapfull")
  '(token                 "V_Separator.winfo_colormapfull")
  '(token                 "V_Strut.winfo_colormapfull")
  '(token                 "Widget.winfo_colormapfull")
  '(token                 "_C_Frame.winfo_colormapfull")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_colormapfull")
  '(token                 "_Panedwindow.winfo_colormapfull")
  '(token                 "_Scrollable.winfo_colormapfull")
  '(token                 "_Separator.winfo_colormapfull")
  '(token                 "_Spinnerentry.winfo_colormapfull")
  '(token                 "_Statusframe.winfo_colormapfull")
  '(replacement           "winfo_colormapfull ()")
;;; winfo_colormapfull()
)

(lse-define-fill-in "Misc.winfo_containing:rootX" 
  '(description           "Argument 1 of Misc.winfo_containing")
  '(leading               ",")
;;; Misc.winfo_containing:rootX
)

(lse-define-fill-in "Misc.winfo_containing:rootY" 
  '(description           "Argument 2 of Misc.winfo_containing")
  '(leading               ",")
;;; Misc.winfo_containing:rootY
)

(lse-define-fill-in "Misc.winfo_containing:displayof" 
  '(description           "Argument 3 of Misc.winfo_containing (default = 0)")
  '(leading               ",")
;;; Misc.winfo_containing:displayof
)

(lse-define-fill-in "winfo_containing(rootX,rootY,displayof)" 
  '(token)
  '(token                 "Balloon.winfo_containing")
  '(token                 "BaseWidget.winfo_containing")
  '(token                 "Button.winfo_containing")
  '(token                 "Buttonbox.winfo_containing")
  '(token                 "C_Entry.winfo_containing")
  '(token                 "C_Frame.winfo_containing")
  '(token                 "C_Listbox.winfo_containing")
  '(token                 "C_Menu.winfo_containing")
  '(token                 "C_Text.winfo_containing")
  '(token                 "Canvas.winfo_containing")
  '(token                 "Checkbutton.winfo_containing")
  '(token                 "Combo_Tuple.winfo_containing")
  '(token                 "Combo_Tuple_X.winfo_containing")
  '(token                 "Combobox.winfo_containing")
  '(token                 "Entry.winfo_containing")
  '(token                 "Entrybox.winfo_containing")
  '(token                 "Filename_Entry.winfo_containing")
  '(token                 "Frame.winfo_containing")
  '(token                 "H_Panedwindow.winfo_containing")
  '(token                 "H_Panedwindow.V_Separator.winfo_containing")
  '(token                 "H_Scrollable.winfo_containing")
  '(token                 "H_Separator.winfo_containing")
  '(token                 "H_Strut.winfo_containing")
  '(token                 "Label.winfo_containing")
  '(token                 "Listbox.winfo_containing")
  '(token                 "Listbox_Tuple.winfo_containing")
  '(token                 "Listdropentry.winfo_containing")
  '(token                 "Listdropspinner.winfo_containing")
  '(token                 "Listspinner.winfo_containing")
  '(token                 "Menu.winfo_containing")
  '(token                 "Menubutton.winfo_containing")
  '(token                 "Message.winfo_containing")
  '(token                 "Message_Window.winfo_containing")
  '(token                 "Misc.winfo_containing")
  '(token                 "Multicombobox.winfo_containing")
  '(token                 "Multicombobox_X.winfo_containing")
  '(token                 "Notebook.winfo_containing")
  '(token                 "Num_Spinner.winfo_containing")
  '(token                 "OptionMenu.winfo_containing")
  '(token                 "Progress_Gauge.winfo_containing")
  '(token                 "Progress_Gauge_T.winfo_containing")
  '(token                 "Radiobutton.winfo_containing")
  '(token                 "Scale.winfo_containing")
  '(token                 "Scrollbar.winfo_containing")
  '(token                 "Scrolled_Listbox.winfo_containing")
  '(token                 "Scrolled_Text.winfo_containing")
  '(token                 "Slide_Show.winfo_containing")
  '(token                 "Statuslabel.winfo_containing")
  '(token                 "Statuslabel.Label.winfo_containing")
  '(token                 "Statustext.winfo_containing")
  '(token                 "Statustext.Text.winfo_containing")
  '(token                 "Studbutton.winfo_containing")
  '(token                 "Tabbed_Notebook.winfo_containing")
  '(token                 "Text.winfo_containing")
  '(token                 "Tk.winfo_containing")
  '(token                 "Toplevel.winfo_containing")
  '(token                 "Tributton.winfo_containing")
  '(token                 "Up_Down_Button.winfo_containing")
  '(token                 "V_Panedwindow.winfo_containing")
  '(token                 "V_Panedwindow.H_Separator.winfo_containing")
  '(token                 "V_Scrollable.winfo_containing")
  '(token                 "V_Separator.winfo_containing")
  '(token                 "V_Strut.winfo_containing")
  '(token                 "Widget.winfo_containing")
  '(token                 "_C_Frame.winfo_containing")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_containing")
  '(token                 "_Panedwindow.winfo_containing")
  '(token                 "_Scrollable.winfo_containing")
  '(token                 "_Separator.winfo_containing")
  '(token                 "_Spinnerentry.winfo_containing")
  '(token                 "_Statusframe.winfo_containing")
  '(replacement           "winfo_containing («Misc.winfo_containing:rootX», «Misc.winfo_containing:rootY», ««Misc.winfo_containing:displayof»»)")
;;; winfo_containing(rootX,rootY,displayof)
)

(lse-define-fill-in "winfo_depth()" 
  '(token)
  '(token                 "Balloon.winfo_depth")
  '(token                 "BaseWidget.winfo_depth")
  '(token                 "Button.winfo_depth")
  '(token                 "Buttonbox.winfo_depth")
  '(token                 "C_Entry.winfo_depth")
  '(token                 "C_Frame.winfo_depth")
  '(token                 "C_Listbox.winfo_depth")
  '(token                 "C_Menu.winfo_depth")
  '(token                 "C_Text.winfo_depth")
  '(token                 "Canvas.winfo_depth")
  '(token                 "Checkbutton.winfo_depth")
  '(token                 "Combo_Tuple.winfo_depth")
  '(token                 "Combo_Tuple_X.winfo_depth")
  '(token                 "Combobox.winfo_depth")
  '(token                 "Entry.winfo_depth")
  '(token                 "Entrybox.winfo_depth")
  '(token                 "Filename_Entry.winfo_depth")
  '(token                 "Frame.winfo_depth")
  '(token                 "H_Panedwindow.winfo_depth")
  '(token                 "H_Panedwindow.V_Separator.winfo_depth")
  '(token                 "H_Scrollable.winfo_depth")
  '(token                 "H_Separator.winfo_depth")
  '(token                 "H_Strut.winfo_depth")
  '(token                 "Label.winfo_depth")
  '(token                 "Listbox.winfo_depth")
  '(token                 "Listbox_Tuple.winfo_depth")
  '(token                 "Listdropentry.winfo_depth")
  '(token                 "Listdropspinner.winfo_depth")
  '(token                 "Listspinner.winfo_depth")
  '(token                 "Menu.winfo_depth")
  '(token                 "Menubutton.winfo_depth")
  '(token                 "Message.winfo_depth")
  '(token                 "Message_Window.winfo_depth")
  '(token                 "Misc.winfo_depth")
  '(token                 "Multicombobox.winfo_depth")
  '(token                 "Multicombobox_X.winfo_depth")
  '(token                 "Notebook.winfo_depth")
  '(token                 "Num_Spinner.winfo_depth")
  '(token                 "OptionMenu.winfo_depth")
  '(token                 "Progress_Gauge.winfo_depth")
  '(token                 "Progress_Gauge_T.winfo_depth")
  '(token                 "Radiobutton.winfo_depth")
  '(token                 "Scale.winfo_depth")
  '(token                 "Scrollbar.winfo_depth")
  '(token                 "Scrolled_Listbox.winfo_depth")
  '(token                 "Scrolled_Text.winfo_depth")
  '(token                 "Slide_Show.winfo_depth")
  '(token                 "Statuslabel.winfo_depth")
  '(token                 "Statuslabel.Label.winfo_depth")
  '(token                 "Statustext.winfo_depth")
  '(token                 "Statustext.Text.winfo_depth")
  '(token                 "Studbutton.winfo_depth")
  '(token                 "Tabbed_Notebook.winfo_depth")
  '(token                 "Text.winfo_depth")
  '(token                 "Tk.winfo_depth")
  '(token                 "Toplevel.winfo_depth")
  '(token                 "Tributton.winfo_depth")
  '(token                 "Up_Down_Button.winfo_depth")
  '(token                 "V_Panedwindow.winfo_depth")
  '(token                 "V_Panedwindow.H_Separator.winfo_depth")
  '(token                 "V_Scrollable.winfo_depth")
  '(token                 "V_Separator.winfo_depth")
  '(token                 "V_Strut.winfo_depth")
  '(token                 "Widget.winfo_depth")
  '(token                 "_C_Frame.winfo_depth")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_depth")
  '(token                 "_Panedwindow.winfo_depth")
  '(token                 "_Scrollable.winfo_depth")
  '(token                 "_Separator.winfo_depth")
  '(token                 "_Spinnerentry.winfo_depth")
  '(token                 "_Statusframe.winfo_depth")
  '(replacement           "winfo_depth ()")
;;; winfo_depth()
)

(lse-define-fill-in "winfo_exists()" 
  '(token)
  '(token                 "Balloon.winfo_exists")
  '(token                 "BaseWidget.winfo_exists")
  '(token                 "Button.winfo_exists")
  '(token                 "Buttonbox.winfo_exists")
  '(token                 "C_Entry.winfo_exists")
  '(token                 "C_Frame.winfo_exists")
  '(token                 "C_Listbox.winfo_exists")
  '(token                 "C_Menu.winfo_exists")
  '(token                 "C_Text.winfo_exists")
  '(token                 "Canvas.winfo_exists")
  '(token                 "Checkbutton.winfo_exists")
  '(token                 "Combo_Tuple.winfo_exists")
  '(token                 "Combo_Tuple_X.winfo_exists")
  '(token                 "Combobox.winfo_exists")
  '(token                 "Entry.winfo_exists")
  '(token                 "Entrybox.winfo_exists")
  '(token                 "Filename_Entry.winfo_exists")
  '(token                 "Frame.winfo_exists")
  '(token                 "H_Panedwindow.winfo_exists")
  '(token                 "H_Panedwindow.V_Separator.winfo_exists")
  '(token                 "H_Scrollable.winfo_exists")
  '(token                 "H_Separator.winfo_exists")
  '(token                 "H_Strut.winfo_exists")
  '(token                 "Label.winfo_exists")
  '(token                 "Listbox.winfo_exists")
  '(token                 "Listbox_Tuple.winfo_exists")
  '(token                 "Listdropentry.winfo_exists")
  '(token                 "Listdropspinner.winfo_exists")
  '(token                 "Listspinner.winfo_exists")
  '(token                 "Menu.winfo_exists")
  '(token                 "Menubutton.winfo_exists")
  '(token                 "Message.winfo_exists")
  '(token                 "Message_Window.winfo_exists")
  '(token                 "Misc.winfo_exists")
  '(token                 "Multicombobox.winfo_exists")
  '(token                 "Multicombobox_X.winfo_exists")
  '(token                 "Notebook.winfo_exists")
  '(token                 "Num_Spinner.winfo_exists")
  '(token                 "OptionMenu.winfo_exists")
  '(token                 "Progress_Gauge.winfo_exists")
  '(token                 "Progress_Gauge_T.winfo_exists")
  '(token                 "Radiobutton.winfo_exists")
  '(token                 "Scale.winfo_exists")
  '(token                 "Scrollbar.winfo_exists")
  '(token                 "Scrolled_Listbox.winfo_exists")
  '(token                 "Scrolled_Text.winfo_exists")
  '(token                 "Slide_Show.winfo_exists")
  '(token                 "Statuslabel.winfo_exists")
  '(token                 "Statuslabel.Label.winfo_exists")
  '(token                 "Statustext.winfo_exists")
  '(token                 "Statustext.Text.winfo_exists")
  '(token                 "Studbutton.winfo_exists")
  '(token                 "Tabbed_Notebook.winfo_exists")
  '(token                 "Text.winfo_exists")
  '(token                 "Tk.winfo_exists")
  '(token                 "Toplevel.winfo_exists")
  '(token                 "Tributton.winfo_exists")
  '(token                 "Up_Down_Button.winfo_exists")
  '(token                 "V_Panedwindow.winfo_exists")
  '(token                 "V_Panedwindow.H_Separator.winfo_exists")
  '(token                 "V_Scrollable.winfo_exists")
  '(token                 "V_Separator.winfo_exists")
  '(token                 "V_Strut.winfo_exists")
  '(token                 "Widget.winfo_exists")
  '(token                 "_C_Frame.winfo_exists")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_exists")
  '(token                 "_Panedwindow.winfo_exists")
  '(token                 "_Scrollable.winfo_exists")
  '(token                 "_Separator.winfo_exists")
  '(token                 "_Spinnerentry.winfo_exists")
  '(token                 "_Statusframe.winfo_exists")
  '(replacement           "winfo_exists ()")
;;; winfo_exists()
)

(lse-define-fill-in "Misc.winfo_fpixels:number" 
  '(description           "Argument 1 of Misc.winfo_fpixels")
  '(leading               ",")
;;; Misc.winfo_fpixels:number
)

(lse-define-fill-in "winfo_fpixels(number)" 
  '(token)
  '(token                 "Balloon.winfo_fpixels")
  '(token                 "BaseWidget.winfo_fpixels")
  '(token                 "Button.winfo_fpixels")
  '(token                 "Buttonbox.winfo_fpixels")
  '(token                 "C_Entry.winfo_fpixels")
  '(token                 "C_Frame.winfo_fpixels")
  '(token                 "C_Listbox.winfo_fpixels")
  '(token                 "C_Menu.winfo_fpixels")
  '(token                 "C_Text.winfo_fpixels")
  '(token                 "Canvas.winfo_fpixels")
  '(token                 "Checkbutton.winfo_fpixels")
  '(token                 "Combo_Tuple.winfo_fpixels")
  '(token                 "Combo_Tuple_X.winfo_fpixels")
  '(token                 "Combobox.winfo_fpixels")
  '(token                 "Entry.winfo_fpixels")
  '(token                 "Entrybox.winfo_fpixels")
  '(token                 "Filename_Entry.winfo_fpixels")
  '(token                 "Frame.winfo_fpixels")
  '(token                 "H_Panedwindow.winfo_fpixels")
  '(token                 "H_Panedwindow.V_Separator.winfo_fpixels")
  '(token                 "H_Scrollable.winfo_fpixels")
  '(token                 "H_Separator.winfo_fpixels")
  '(token                 "H_Strut.winfo_fpixels")
  '(token                 "Label.winfo_fpixels")
  '(token                 "Listbox.winfo_fpixels")
  '(token                 "Listbox_Tuple.winfo_fpixels")
  '(token                 "Listdropentry.winfo_fpixels")
  '(token                 "Listdropspinner.winfo_fpixels")
  '(token                 "Listspinner.winfo_fpixels")
  '(token                 "Menu.winfo_fpixels")
  '(token                 "Menubutton.winfo_fpixels")
  '(token                 "Message.winfo_fpixels")
  '(token                 "Message_Window.winfo_fpixels")
  '(token                 "Misc.winfo_fpixels")
  '(token                 "Multicombobox.winfo_fpixels")
  '(token                 "Multicombobox_X.winfo_fpixels")
  '(token                 "Notebook.winfo_fpixels")
  '(token                 "Num_Spinner.winfo_fpixels")
  '(token                 "OptionMenu.winfo_fpixels")
  '(token                 "Progress_Gauge.winfo_fpixels")
  '(token                 "Progress_Gauge_T.winfo_fpixels")
  '(token                 "Radiobutton.winfo_fpixels")
  '(token                 "Scale.winfo_fpixels")
  '(token                 "Scrollbar.winfo_fpixels")
  '(token                 "Scrolled_Listbox.winfo_fpixels")
  '(token                 "Scrolled_Text.winfo_fpixels")
  '(token                 "Slide_Show.winfo_fpixels")
  '(token                 "Statuslabel.winfo_fpixels")
  '(token                 "Statuslabel.Label.winfo_fpixels")
  '(token                 "Statustext.winfo_fpixels")
  '(token                 "Statustext.Text.winfo_fpixels")
  '(token                 "Studbutton.winfo_fpixels")
  '(token                 "Tabbed_Notebook.winfo_fpixels")
  '(token                 "Text.winfo_fpixels")
  '(token                 "Tk.winfo_fpixels")
  '(token                 "Toplevel.winfo_fpixels")
  '(token                 "Tributton.winfo_fpixels")
  '(token                 "Up_Down_Button.winfo_fpixels")
  '(token                 "V_Panedwindow.winfo_fpixels")
  '(token                 "V_Panedwindow.H_Separator.winfo_fpixels")
  '(token                 "V_Scrollable.winfo_fpixels")
  '(token                 "V_Separator.winfo_fpixels")
  '(token                 "V_Strut.winfo_fpixels")
  '(token                 "Widget.winfo_fpixels")
  '(token                 "_C_Frame.winfo_fpixels")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_fpixels")
  '(token                 "_Panedwindow.winfo_fpixels")
  '(token                 "_Scrollable.winfo_fpixels")
  '(token                 "_Separator.winfo_fpixels")
  '(token                 "_Spinnerentry.winfo_fpixels")
  '(token                 "_Statusframe.winfo_fpixels")
  '(replacement           "winfo_fpixels («Misc.winfo_fpixels:number»)")
;;; winfo_fpixels(number)
)

(lse-define-fill-in "winfo_geometry()" 
  '(token)
  '(token                 "Balloon.winfo_geometry")
  '(token                 "BaseWidget.winfo_geometry")
  '(token                 "Button.winfo_geometry")
  '(token                 "Buttonbox.winfo_geometry")
  '(token                 "C_Entry.winfo_geometry")
  '(token                 "C_Frame.winfo_geometry")
  '(token                 "C_Listbox.winfo_geometry")
  '(token                 "C_Menu.winfo_geometry")
  '(token                 "C_Text.winfo_geometry")
  '(token                 "Canvas.winfo_geometry")
  '(token                 "Checkbutton.winfo_geometry")
  '(token                 "Combo_Tuple.winfo_geometry")
  '(token                 "Combo_Tuple_X.winfo_geometry")
  '(token                 "Combobox.winfo_geometry")
  '(token                 "Entry.winfo_geometry")
  '(token                 "Entrybox.winfo_geometry")
  '(token                 "Filename_Entry.winfo_geometry")
  '(token                 "Frame.winfo_geometry")
  '(token                 "H_Panedwindow.winfo_geometry")
  '(token                 "H_Panedwindow.V_Separator.winfo_geometry")
  '(token                 "H_Scrollable.winfo_geometry")
  '(token                 "H_Separator.winfo_geometry")
  '(token                 "H_Strut.winfo_geometry")
  '(token                 "Label.winfo_geometry")
  '(token                 "Listbox.winfo_geometry")
  '(token                 "Listbox_Tuple.winfo_geometry")
  '(token                 "Listdropentry.winfo_geometry")
  '(token                 "Listdropspinner.winfo_geometry")
  '(token                 "Listspinner.winfo_geometry")
  '(token                 "Menu.winfo_geometry")
  '(token                 "Menubutton.winfo_geometry")
  '(token                 "Message.winfo_geometry")
  '(token                 "Message_Window.winfo_geometry")
  '(token                 "Misc.winfo_geometry")
  '(token                 "Multicombobox.winfo_geometry")
  '(token                 "Multicombobox_X.winfo_geometry")
  '(token                 "Notebook.winfo_geometry")
  '(token                 "Num_Spinner.winfo_geometry")
  '(token                 "OptionMenu.winfo_geometry")
  '(token                 "Progress_Gauge.winfo_geometry")
  '(token                 "Progress_Gauge_T.winfo_geometry")
  '(token                 "Radiobutton.winfo_geometry")
  '(token                 "Scale.winfo_geometry")
  '(token                 "Scrollbar.winfo_geometry")
  '(token                 "Scrolled_Listbox.winfo_geometry")
  '(token                 "Scrolled_Text.winfo_geometry")
  '(token                 "Slide_Show.winfo_geometry")
  '(token                 "Statuslabel.winfo_geometry")
  '(token                 "Statuslabel.Label.winfo_geometry")
  '(token                 "Statustext.winfo_geometry")
  '(token                 "Statustext.Text.winfo_geometry")
  '(token                 "Studbutton.winfo_geometry")
  '(token                 "Tabbed_Notebook.winfo_geometry")
  '(token                 "Text.winfo_geometry")
  '(token                 "Tk.winfo_geometry")
  '(token                 "Toplevel.winfo_geometry")
  '(token                 "Tributton.winfo_geometry")
  '(token                 "Up_Down_Button.winfo_geometry")
  '(token                 "V_Panedwindow.winfo_geometry")
  '(token                 "V_Panedwindow.H_Separator.winfo_geometry")
  '(token                 "V_Scrollable.winfo_geometry")
  '(token                 "V_Separator.winfo_geometry")
  '(token                 "V_Strut.winfo_geometry")
  '(token                 "Widget.winfo_geometry")
  '(token                 "_C_Frame.winfo_geometry")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_geometry")
  '(token                 "_Panedwindow.winfo_geometry")
  '(token                 "_Scrollable.winfo_geometry")
  '(token                 "_Separator.winfo_geometry")
  '(token                 "_Spinnerentry.winfo_geometry")
  '(token                 "_Statusframe.winfo_geometry")
  '(replacement           "winfo_geometry ()")
;;; winfo_geometry()
)

(lse-define-fill-in "winfo_height()" 
  '(token)
  '(token                 "Balloon.winfo_height")
  '(token                 "BaseWidget.winfo_height")
  '(token                 "Button.winfo_height")
  '(token                 "Buttonbox.winfo_height")
  '(token                 "C_Entry.winfo_height")
  '(token                 "C_Frame.winfo_height")
  '(token                 "C_Listbox.winfo_height")
  '(token                 "C_Menu.winfo_height")
  '(token                 "C_Text.winfo_height")
  '(token                 "Canvas.winfo_height")
  '(token                 "Checkbutton.winfo_height")
  '(token                 "Combo_Tuple.winfo_height")
  '(token                 "Combo_Tuple_X.winfo_height")
  '(token                 "Combobox.winfo_height")
  '(token                 "Entry.winfo_height")
  '(token                 "Entrybox.winfo_height")
  '(token                 "Filename_Entry.winfo_height")
  '(token                 "Frame.winfo_height")
  '(token                 "H_Panedwindow.winfo_height")
  '(token                 "H_Panedwindow.V_Separator.winfo_height")
  '(token                 "H_Scrollable.winfo_height")
  '(token                 "H_Separator.winfo_height")
  '(token                 "H_Strut.winfo_height")
  '(token                 "Label.winfo_height")
  '(token                 "Listbox.winfo_height")
  '(token                 "Listbox_Tuple.winfo_height")
  '(token                 "Listdropentry.winfo_height")
  '(token                 "Listdropspinner.winfo_height")
  '(token                 "Listspinner.winfo_height")
  '(token                 "Menu.winfo_height")
  '(token                 "Menubutton.winfo_height")
  '(token                 "Message.winfo_height")
  '(token                 "Message_Window.winfo_height")
  '(token                 "Misc.winfo_height")
  '(token                 "Multicombobox.winfo_height")
  '(token                 "Multicombobox_X.winfo_height")
  '(token                 "Notebook.winfo_height")
  '(token                 "Num_Spinner.winfo_height")
  '(token                 "OptionMenu.winfo_height")
  '(token                 "Progress_Gauge.winfo_height")
  '(token                 "Progress_Gauge_T.winfo_height")
  '(token                 "Radiobutton.winfo_height")
  '(token                 "Scale.winfo_height")
  '(token                 "Scrollbar.winfo_height")
  '(token                 "Scrolled_Listbox.winfo_height")
  '(token                 "Scrolled_Text.winfo_height")
  '(token                 "Slide_Show.winfo_height")
  '(token                 "Statuslabel.winfo_height")
  '(token                 "Statuslabel.Label.winfo_height")
  '(token                 "Statustext.winfo_height")
  '(token                 "Statustext.Text.winfo_height")
  '(token                 "Studbutton.winfo_height")
  '(token                 "Tabbed_Notebook.winfo_height")
  '(token                 "Text.winfo_height")
  '(token                 "Tk.winfo_height")
  '(token                 "Toplevel.winfo_height")
  '(token                 "Tributton.winfo_height")
  '(token                 "Up_Down_Button.winfo_height")
  '(token                 "V_Panedwindow.winfo_height")
  '(token                 "V_Panedwindow.H_Separator.winfo_height")
  '(token                 "V_Scrollable.winfo_height")
  '(token                 "V_Separator.winfo_height")
  '(token                 "V_Strut.winfo_height")
  '(token                 "Widget.winfo_height")
  '(token                 "_C_Frame.winfo_height")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_height")
  '(token                 "_Panedwindow.winfo_height")
  '(token                 "_Scrollable.winfo_height")
  '(token                 "_Separator.winfo_height")
  '(token                 "_Spinnerentry.winfo_height")
  '(token                 "_Statusframe.winfo_height")
  '(replacement           "winfo_height ()")
;;; winfo_height()
)

(lse-define-fill-in "winfo_id()" 
  '(token)
  '(token                 "Balloon.winfo_id")
  '(token                 "BaseWidget.winfo_id")
  '(token                 "Button.winfo_id")
  '(token                 "Buttonbox.winfo_id")
  '(token                 "C_Entry.winfo_id")
  '(token                 "C_Frame.winfo_id")
  '(token                 "C_Listbox.winfo_id")
  '(token                 "C_Menu.winfo_id")
  '(token                 "C_Text.winfo_id")
  '(token                 "Canvas.winfo_id")
  '(token                 "Checkbutton.winfo_id")
  '(token                 "Combo_Tuple.winfo_id")
  '(token                 "Combo_Tuple_X.winfo_id")
  '(token                 "Combobox.winfo_id")
  '(token                 "Entry.winfo_id")
  '(token                 "Entrybox.winfo_id")
  '(token                 "Filename_Entry.winfo_id")
  '(token                 "Frame.winfo_id")
  '(token                 "H_Panedwindow.winfo_id")
  '(token                 "H_Panedwindow.V_Separator.winfo_id")
  '(token                 "H_Scrollable.winfo_id")
  '(token                 "H_Separator.winfo_id")
  '(token                 "H_Strut.winfo_id")
  '(token                 "Label.winfo_id")
  '(token                 "Listbox.winfo_id")
  '(token                 "Listbox_Tuple.winfo_id")
  '(token                 "Listdropentry.winfo_id")
  '(token                 "Listdropspinner.winfo_id")
  '(token                 "Listspinner.winfo_id")
  '(token                 "Menu.winfo_id")
  '(token                 "Menubutton.winfo_id")
  '(token                 "Message.winfo_id")
  '(token                 "Message_Window.winfo_id")
  '(token                 "Misc.winfo_id")
  '(token                 "Multicombobox.winfo_id")
  '(token                 "Multicombobox_X.winfo_id")
  '(token                 "Notebook.winfo_id")
  '(token                 "Num_Spinner.winfo_id")
  '(token                 "OptionMenu.winfo_id")
  '(token                 "Progress_Gauge.winfo_id")
  '(token                 "Progress_Gauge_T.winfo_id")
  '(token                 "Radiobutton.winfo_id")
  '(token                 "Scale.winfo_id")
  '(token                 "Scrollbar.winfo_id")
  '(token                 "Scrolled_Listbox.winfo_id")
  '(token                 "Scrolled_Text.winfo_id")
  '(token                 "Slide_Show.winfo_id")
  '(token                 "Statuslabel.winfo_id")
  '(token                 "Statuslabel.Label.winfo_id")
  '(token                 "Statustext.winfo_id")
  '(token                 "Statustext.Text.winfo_id")
  '(token                 "Studbutton.winfo_id")
  '(token                 "Tabbed_Notebook.winfo_id")
  '(token                 "Text.winfo_id")
  '(token                 "Tk.winfo_id")
  '(token                 "Toplevel.winfo_id")
  '(token                 "Tributton.winfo_id")
  '(token                 "Up_Down_Button.winfo_id")
  '(token                 "V_Panedwindow.winfo_id")
  '(token                 "V_Panedwindow.H_Separator.winfo_id")
  '(token                 "V_Scrollable.winfo_id")
  '(token                 "V_Separator.winfo_id")
  '(token                 "V_Strut.winfo_id")
  '(token                 "Widget.winfo_id")
  '(token                 "_C_Frame.winfo_id")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_id")
  '(token                 "_Panedwindow.winfo_id")
  '(token                 "_Scrollable.winfo_id")
  '(token                 "_Separator.winfo_id")
  '(token                 "_Spinnerentry.winfo_id")
  '(token                 "_Statusframe.winfo_id")
  '(replacement           "winfo_id ()")
;;; winfo_id()
)

(lse-define-fill-in "Misc.winfo_interps:displayof" 
  '(description           "Argument 1 of Misc.winfo_interps (default = 0)")
  '(leading               ",")
;;; Misc.winfo_interps:displayof
)

(lse-define-fill-in "winfo_interps(displayof)" 
  '(token)
  '(token                 "Balloon.winfo_interps")
  '(token                 "BaseWidget.winfo_interps")
  '(token                 "Button.winfo_interps")
  '(token                 "Buttonbox.winfo_interps")
  '(token                 "C_Entry.winfo_interps")
  '(token                 "C_Frame.winfo_interps")
  '(token                 "C_Listbox.winfo_interps")
  '(token                 "C_Menu.winfo_interps")
  '(token                 "C_Text.winfo_interps")
  '(token                 "Canvas.winfo_interps")
  '(token                 "Checkbutton.winfo_interps")
  '(token                 "Combo_Tuple.winfo_interps")
  '(token                 "Combo_Tuple_X.winfo_interps")
  '(token                 "Combobox.winfo_interps")
  '(token                 "Entry.winfo_interps")
  '(token                 "Entrybox.winfo_interps")
  '(token                 "Filename_Entry.winfo_interps")
  '(token                 "Frame.winfo_interps")
  '(token                 "H_Panedwindow.winfo_interps")
  '(token                 "H_Panedwindow.V_Separator.winfo_interps")
  '(token                 "H_Scrollable.winfo_interps")
  '(token                 "H_Separator.winfo_interps")
  '(token                 "H_Strut.winfo_interps")
  '(token                 "Label.winfo_interps")
  '(token                 "Listbox.winfo_interps")
  '(token                 "Listbox_Tuple.winfo_interps")
  '(token                 "Listdropentry.winfo_interps")
  '(token                 "Listdropspinner.winfo_interps")
  '(token                 "Listspinner.winfo_interps")
  '(token                 "Menu.winfo_interps")
  '(token                 "Menubutton.winfo_interps")
  '(token                 "Message.winfo_interps")
  '(token                 "Message_Window.winfo_interps")
  '(token                 "Misc.winfo_interps")
  '(token                 "Multicombobox.winfo_interps")
  '(token                 "Multicombobox_X.winfo_interps")
  '(token                 "Notebook.winfo_interps")
  '(token                 "Num_Spinner.winfo_interps")
  '(token                 "OptionMenu.winfo_interps")
  '(token                 "Progress_Gauge.winfo_interps")
  '(token                 "Progress_Gauge_T.winfo_interps")
  '(token                 "Radiobutton.winfo_interps")
  '(token                 "Scale.winfo_interps")
  '(token                 "Scrollbar.winfo_interps")
  '(token                 "Scrolled_Listbox.winfo_interps")
  '(token                 "Scrolled_Text.winfo_interps")
  '(token                 "Slide_Show.winfo_interps")
  '(token                 "Statuslabel.winfo_interps")
  '(token                 "Statuslabel.Label.winfo_interps")
  '(token                 "Statustext.winfo_interps")
  '(token                 "Statustext.Text.winfo_interps")
  '(token                 "Studbutton.winfo_interps")
  '(token                 "Tabbed_Notebook.winfo_interps")
  '(token                 "Text.winfo_interps")
  '(token                 "Tk.winfo_interps")
  '(token                 "Toplevel.winfo_interps")
  '(token                 "Tributton.winfo_interps")
  '(token                 "Up_Down_Button.winfo_interps")
  '(token                 "V_Panedwindow.winfo_interps")
  '(token                 "V_Panedwindow.H_Separator.winfo_interps")
  '(token                 "V_Scrollable.winfo_interps")
  '(token                 "V_Separator.winfo_interps")
  '(token                 "V_Strut.winfo_interps")
  '(token                 "Widget.winfo_interps")
  '(token                 "_C_Frame.winfo_interps")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_interps")
  '(token                 "_Panedwindow.winfo_interps")
  '(token                 "_Scrollable.winfo_interps")
  '(token                 "_Separator.winfo_interps")
  '(token                 "_Spinnerentry.winfo_interps")
  '(token                 "_Statusframe.winfo_interps")
  '(replacement           "winfo_interps (««Misc.winfo_interps:displayof»»)")
;;; winfo_interps(displayof)
)

(lse-define-fill-in "winfo_ismapped()" 
  '(token)
  '(token                 "Balloon.winfo_ismapped")
  '(token                 "BaseWidget.winfo_ismapped")
  '(token                 "Button.winfo_ismapped")
  '(token                 "Buttonbox.winfo_ismapped")
  '(token                 "C_Entry.winfo_ismapped")
  '(token                 "C_Frame.winfo_ismapped")
  '(token                 "C_Listbox.winfo_ismapped")
  '(token                 "C_Menu.winfo_ismapped")
  '(token                 "C_Text.winfo_ismapped")
  '(token                 "Canvas.winfo_ismapped")
  '(token                 "Checkbutton.winfo_ismapped")
  '(token                 "Combo_Tuple.winfo_ismapped")
  '(token                 "Combo_Tuple_X.winfo_ismapped")
  '(token                 "Combobox.winfo_ismapped")
  '(token                 "Entry.winfo_ismapped")
  '(token                 "Entrybox.winfo_ismapped")
  '(token                 "Filename_Entry.winfo_ismapped")
  '(token                 "Frame.winfo_ismapped")
  '(token                 "H_Panedwindow.winfo_ismapped")
  '(token                 "H_Panedwindow.V_Separator.winfo_ismapped")
  '(token                 "H_Scrollable.winfo_ismapped")
  '(token                 "H_Separator.winfo_ismapped")
  '(token                 "H_Strut.winfo_ismapped")
  '(token                 "Label.winfo_ismapped")
  '(token                 "Listbox.winfo_ismapped")
  '(token                 "Listbox_Tuple.winfo_ismapped")
  '(token                 "Listdropentry.winfo_ismapped")
  '(token                 "Listdropspinner.winfo_ismapped")
  '(token                 "Listspinner.winfo_ismapped")
  '(token                 "Menu.winfo_ismapped")
  '(token                 "Menubutton.winfo_ismapped")
  '(token                 "Message.winfo_ismapped")
  '(token                 "Message_Window.winfo_ismapped")
  '(token                 "Misc.winfo_ismapped")
  '(token                 "Multicombobox.winfo_ismapped")
  '(token                 "Multicombobox_X.winfo_ismapped")
  '(token                 "Notebook.winfo_ismapped")
  '(token                 "Num_Spinner.winfo_ismapped")
  '(token                 "OptionMenu.winfo_ismapped")
  '(token                 "Progress_Gauge.winfo_ismapped")
  '(token                 "Progress_Gauge_T.winfo_ismapped")
  '(token                 "Radiobutton.winfo_ismapped")
  '(token                 "Scale.winfo_ismapped")
  '(token                 "Scrollbar.winfo_ismapped")
  '(token                 "Scrolled_Listbox.winfo_ismapped")
  '(token                 "Scrolled_Text.winfo_ismapped")
  '(token                 "Slide_Show.winfo_ismapped")
  '(token                 "Statuslabel.winfo_ismapped")
  '(token                 "Statuslabel.Label.winfo_ismapped")
  '(token                 "Statustext.winfo_ismapped")
  '(token                 "Statustext.Text.winfo_ismapped")
  '(token                 "Studbutton.winfo_ismapped")
  '(token                 "Tabbed_Notebook.winfo_ismapped")
  '(token                 "Text.winfo_ismapped")
  '(token                 "Tk.winfo_ismapped")
  '(token                 "Toplevel.winfo_ismapped")
  '(token                 "Tributton.winfo_ismapped")
  '(token                 "Up_Down_Button.winfo_ismapped")
  '(token                 "V_Panedwindow.winfo_ismapped")
  '(token                 "V_Panedwindow.H_Separator.winfo_ismapped")
  '(token                 "V_Scrollable.winfo_ismapped")
  '(token                 "V_Separator.winfo_ismapped")
  '(token                 "V_Strut.winfo_ismapped")
  '(token                 "Widget.winfo_ismapped")
  '(token                 "_C_Frame.winfo_ismapped")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_ismapped")
  '(token                 "_Panedwindow.winfo_ismapped")
  '(token                 "_Scrollable.winfo_ismapped")
  '(token                 "_Separator.winfo_ismapped")
  '(token                 "_Spinnerentry.winfo_ismapped")
  '(token                 "_Statusframe.winfo_ismapped")
  '(replacement           "winfo_ismapped ()")
;;; winfo_ismapped()
)

(lse-define-fill-in "winfo_manager()" 
  '(token)
  '(token                 "Balloon.winfo_manager")
  '(token                 "BaseWidget.winfo_manager")
  '(token                 "Button.winfo_manager")
  '(token                 "Buttonbox.winfo_manager")
  '(token                 "C_Entry.winfo_manager")
  '(token                 "C_Frame.winfo_manager")
  '(token                 "C_Listbox.winfo_manager")
  '(token                 "C_Menu.winfo_manager")
  '(token                 "C_Text.winfo_manager")
  '(token                 "Canvas.winfo_manager")
  '(token                 "Checkbutton.winfo_manager")
  '(token                 "Combo_Tuple.winfo_manager")
  '(token                 "Combo_Tuple_X.winfo_manager")
  '(token                 "Combobox.winfo_manager")
  '(token                 "Entry.winfo_manager")
  '(token                 "Entrybox.winfo_manager")
  '(token                 "Filename_Entry.winfo_manager")
  '(token                 "Frame.winfo_manager")
  '(token                 "H_Panedwindow.winfo_manager")
  '(token                 "H_Panedwindow.V_Separator.winfo_manager")
  '(token                 "H_Scrollable.winfo_manager")
  '(token                 "H_Separator.winfo_manager")
  '(token                 "H_Strut.winfo_manager")
  '(token                 "Label.winfo_manager")
  '(token                 "Listbox.winfo_manager")
  '(token                 "Listbox_Tuple.winfo_manager")
  '(token                 "Listdropentry.winfo_manager")
  '(token                 "Listdropspinner.winfo_manager")
  '(token                 "Listspinner.winfo_manager")
  '(token                 "Menu.winfo_manager")
  '(token                 "Menubutton.winfo_manager")
  '(token                 "Message.winfo_manager")
  '(token                 "Message_Window.winfo_manager")
  '(token                 "Misc.winfo_manager")
  '(token                 "Multicombobox.winfo_manager")
  '(token                 "Multicombobox_X.winfo_manager")
  '(token                 "Notebook.winfo_manager")
  '(token                 "Num_Spinner.winfo_manager")
  '(token                 "OptionMenu.winfo_manager")
  '(token                 "Progress_Gauge.winfo_manager")
  '(token                 "Progress_Gauge_T.winfo_manager")
  '(token                 "Radiobutton.winfo_manager")
  '(token                 "Scale.winfo_manager")
  '(token                 "Scrollbar.winfo_manager")
  '(token                 "Scrolled_Listbox.winfo_manager")
  '(token                 "Scrolled_Text.winfo_manager")
  '(token                 "Slide_Show.winfo_manager")
  '(token                 "Statuslabel.winfo_manager")
  '(token                 "Statuslabel.Label.winfo_manager")
  '(token                 "Statustext.winfo_manager")
  '(token                 "Statustext.Text.winfo_manager")
  '(token                 "Studbutton.winfo_manager")
  '(token                 "Tabbed_Notebook.winfo_manager")
  '(token                 "Text.winfo_manager")
  '(token                 "Tk.winfo_manager")
  '(token                 "Toplevel.winfo_manager")
  '(token                 "Tributton.winfo_manager")
  '(token                 "Up_Down_Button.winfo_manager")
  '(token                 "V_Panedwindow.winfo_manager")
  '(token                 "V_Panedwindow.H_Separator.winfo_manager")
  '(token                 "V_Scrollable.winfo_manager")
  '(token                 "V_Separator.winfo_manager")
  '(token                 "V_Strut.winfo_manager")
  '(token                 "Widget.winfo_manager")
  '(token                 "_C_Frame.winfo_manager")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_manager")
  '(token                 "_Panedwindow.winfo_manager")
  '(token                 "_Scrollable.winfo_manager")
  '(token                 "_Separator.winfo_manager")
  '(token                 "_Spinnerentry.winfo_manager")
  '(token                 "_Statusframe.winfo_manager")
  '(replacement           "winfo_manager ()")
;;; winfo_manager()
)

(lse-define-fill-in "winfo_name()" 
  '(token)
  '(token                 "Balloon.winfo_name")
  '(token                 "BaseWidget.winfo_name")
  '(token                 "Button.winfo_name")
  '(token                 "Buttonbox.winfo_name")
  '(token                 "C_Entry.winfo_name")
  '(token                 "C_Frame.winfo_name")
  '(token                 "C_Listbox.winfo_name")
  '(token                 "C_Menu.winfo_name")
  '(token                 "C_Text.winfo_name")
  '(token                 "Canvas.winfo_name")
  '(token                 "Checkbutton.winfo_name")
  '(token                 "Combo_Tuple.winfo_name")
  '(token                 "Combo_Tuple_X.winfo_name")
  '(token                 "Combobox.winfo_name")
  '(token                 "Entry.winfo_name")
  '(token                 "Entrybox.winfo_name")
  '(token                 "Filename_Entry.winfo_name")
  '(token                 "Frame.winfo_name")
  '(token                 "H_Panedwindow.winfo_name")
  '(token                 "H_Panedwindow.V_Separator.winfo_name")
  '(token                 "H_Scrollable.winfo_name")
  '(token                 "H_Separator.winfo_name")
  '(token                 "H_Strut.winfo_name")
  '(token                 "Label.winfo_name")
  '(token                 "Listbox.winfo_name")
  '(token                 "Listbox_Tuple.winfo_name")
  '(token                 "Listdropentry.winfo_name")
  '(token                 "Listdropspinner.winfo_name")
  '(token                 "Listspinner.winfo_name")
  '(token                 "Menu.winfo_name")
  '(token                 "Menubutton.winfo_name")
  '(token                 "Message.winfo_name")
  '(token                 "Message_Window.winfo_name")
  '(token                 "Misc.winfo_name")
  '(token                 "Multicombobox.winfo_name")
  '(token                 "Multicombobox_X.winfo_name")
  '(token                 "Notebook.winfo_name")
  '(token                 "Num_Spinner.winfo_name")
  '(token                 "OptionMenu.winfo_name")
  '(token                 "Progress_Gauge.winfo_name")
  '(token                 "Progress_Gauge_T.winfo_name")
  '(token                 "Radiobutton.winfo_name")
  '(token                 "Scale.winfo_name")
  '(token                 "Scrollbar.winfo_name")
  '(token                 "Scrolled_Listbox.winfo_name")
  '(token                 "Scrolled_Text.winfo_name")
  '(token                 "Slide_Show.winfo_name")
  '(token                 "Statuslabel.winfo_name")
  '(token                 "Statuslabel.Label.winfo_name")
  '(token                 "Statustext.winfo_name")
  '(token                 "Statustext.Text.winfo_name")
  '(token                 "Studbutton.winfo_name")
  '(token                 "Tabbed_Notebook.winfo_name")
  '(token                 "Text.winfo_name")
  '(token                 "Tk.winfo_name")
  '(token                 "Toplevel.winfo_name")
  '(token                 "Tributton.winfo_name")
  '(token                 "Up_Down_Button.winfo_name")
  '(token                 "V_Panedwindow.winfo_name")
  '(token                 "V_Panedwindow.H_Separator.winfo_name")
  '(token                 "V_Scrollable.winfo_name")
  '(token                 "V_Separator.winfo_name")
  '(token                 "V_Strut.winfo_name")
  '(token                 "Widget.winfo_name")
  '(token                 "_C_Frame.winfo_name")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_name")
  '(token                 "_Panedwindow.winfo_name")
  '(token                 "_Scrollable.winfo_name")
  '(token                 "_Separator.winfo_name")
  '(token                 "_Spinnerentry.winfo_name")
  '(token                 "_Statusframe.winfo_name")
  '(replacement           "winfo_name ()")
;;; winfo_name()
)

(lse-define-fill-in "winfo_parent()" 
  '(token)
  '(token                 "Balloon.winfo_parent")
  '(token                 "BaseWidget.winfo_parent")
  '(token                 "Button.winfo_parent")
  '(token                 "Buttonbox.winfo_parent")
  '(token                 "C_Entry.winfo_parent")
  '(token                 "C_Frame.winfo_parent")
  '(token                 "C_Listbox.winfo_parent")
  '(token                 "C_Menu.winfo_parent")
  '(token                 "C_Text.winfo_parent")
  '(token                 "Canvas.winfo_parent")
  '(token                 "Checkbutton.winfo_parent")
  '(token                 "Combo_Tuple.winfo_parent")
  '(token                 "Combo_Tuple_X.winfo_parent")
  '(token                 "Combobox.winfo_parent")
  '(token                 "Entry.winfo_parent")
  '(token                 "Entrybox.winfo_parent")
  '(token                 "Filename_Entry.winfo_parent")
  '(token                 "Frame.winfo_parent")
  '(token                 "H_Panedwindow.winfo_parent")
  '(token                 "H_Panedwindow.V_Separator.winfo_parent")
  '(token                 "H_Scrollable.winfo_parent")
  '(token                 "H_Separator.winfo_parent")
  '(token                 "H_Strut.winfo_parent")
  '(token                 "Label.winfo_parent")
  '(token                 "Listbox.winfo_parent")
  '(token                 "Listbox_Tuple.winfo_parent")
  '(token                 "Listdropentry.winfo_parent")
  '(token                 "Listdropspinner.winfo_parent")
  '(token                 "Listspinner.winfo_parent")
  '(token                 "Menu.winfo_parent")
  '(token                 "Menubutton.winfo_parent")
  '(token                 "Message.winfo_parent")
  '(token                 "Message_Window.winfo_parent")
  '(token                 "Misc.winfo_parent")
  '(token                 "Multicombobox.winfo_parent")
  '(token                 "Multicombobox_X.winfo_parent")
  '(token                 "Notebook.winfo_parent")
  '(token                 "Num_Spinner.winfo_parent")
  '(token                 "OptionMenu.winfo_parent")
  '(token                 "Progress_Gauge.winfo_parent")
  '(token                 "Progress_Gauge_T.winfo_parent")
  '(token                 "Radiobutton.winfo_parent")
  '(token                 "Scale.winfo_parent")
  '(token                 "Scrollbar.winfo_parent")
  '(token                 "Scrolled_Listbox.winfo_parent")
  '(token                 "Scrolled_Text.winfo_parent")
  '(token                 "Slide_Show.winfo_parent")
  '(token                 "Statuslabel.winfo_parent")
  '(token                 "Statuslabel.Label.winfo_parent")
  '(token                 "Statustext.winfo_parent")
  '(token                 "Statustext.Text.winfo_parent")
  '(token                 "Studbutton.winfo_parent")
  '(token                 "Tabbed_Notebook.winfo_parent")
  '(token                 "Text.winfo_parent")
  '(token                 "Tk.winfo_parent")
  '(token                 "Toplevel.winfo_parent")
  '(token                 "Tributton.winfo_parent")
  '(token                 "Up_Down_Button.winfo_parent")
  '(token                 "V_Panedwindow.winfo_parent")
  '(token                 "V_Panedwindow.H_Separator.winfo_parent")
  '(token                 "V_Scrollable.winfo_parent")
  '(token                 "V_Separator.winfo_parent")
  '(token                 "V_Strut.winfo_parent")
  '(token                 "Widget.winfo_parent")
  '(token                 "_C_Frame.winfo_parent")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_parent")
  '(token                 "_Panedwindow.winfo_parent")
  '(token                 "_Scrollable.winfo_parent")
  '(token                 "_Separator.winfo_parent")
  '(token                 "_Spinnerentry.winfo_parent")
  '(token                 "_Statusframe.winfo_parent")
  '(replacement           "winfo_parent ()")
;;; winfo_parent()
)

(lse-define-fill-in "Misc.winfo_pathname:id" 
  '(description           "Argument 1 of Misc.winfo_pathname")
  '(leading               ",")
;;; Misc.winfo_pathname:id
)

(lse-define-fill-in "Misc.winfo_pathname:displayof" 
  '(description           "Argument 2 of Misc.winfo_pathname (default = 0)")
  '(leading               ",")
;;; Misc.winfo_pathname:displayof
)

(lse-define-fill-in "winfo_pathname(id,displayof)" 
  '(token)
  '(token                 "Balloon.winfo_pathname")
  '(token                 "BaseWidget.winfo_pathname")
  '(token                 "Button.winfo_pathname")
  '(token                 "Buttonbox.winfo_pathname")
  '(token                 "C_Entry.winfo_pathname")
  '(token                 "C_Frame.winfo_pathname")
  '(token                 "C_Listbox.winfo_pathname")
  '(token                 "C_Menu.winfo_pathname")
  '(token                 "C_Text.winfo_pathname")
  '(token                 "Canvas.winfo_pathname")
  '(token                 "Checkbutton.winfo_pathname")
  '(token                 "Combo_Tuple.winfo_pathname")
  '(token                 "Combo_Tuple_X.winfo_pathname")
  '(token                 "Combobox.winfo_pathname")
  '(token                 "Entry.winfo_pathname")
  '(token                 "Entrybox.winfo_pathname")
  '(token                 "Filename_Entry.winfo_pathname")
  '(token                 "Frame.winfo_pathname")
  '(token                 "H_Panedwindow.winfo_pathname")
  '(token                 "H_Panedwindow.V_Separator.winfo_pathname")
  '(token                 "H_Scrollable.winfo_pathname")
  '(token                 "H_Separator.winfo_pathname")
  '(token                 "H_Strut.winfo_pathname")
  '(token                 "Label.winfo_pathname")
  '(token                 "Listbox.winfo_pathname")
  '(token                 "Listbox_Tuple.winfo_pathname")
  '(token                 "Listdropentry.winfo_pathname")
  '(token                 "Listdropspinner.winfo_pathname")
  '(token                 "Listspinner.winfo_pathname")
  '(token                 "Menu.winfo_pathname")
  '(token                 "Menubutton.winfo_pathname")
  '(token                 "Message.winfo_pathname")
  '(token                 "Message_Window.winfo_pathname")
  '(token                 "Misc.winfo_pathname")
  '(token                 "Multicombobox.winfo_pathname")
  '(token                 "Multicombobox_X.winfo_pathname")
  '(token                 "Notebook.winfo_pathname")
  '(token                 "Num_Spinner.winfo_pathname")
  '(token                 "OptionMenu.winfo_pathname")
  '(token                 "Progress_Gauge.winfo_pathname")
  '(token                 "Progress_Gauge_T.winfo_pathname")
  '(token                 "Radiobutton.winfo_pathname")
  '(token                 "Scale.winfo_pathname")
  '(token                 "Scrollbar.winfo_pathname")
  '(token                 "Scrolled_Listbox.winfo_pathname")
  '(token                 "Scrolled_Text.winfo_pathname")
  '(token                 "Slide_Show.winfo_pathname")
  '(token                 "Statuslabel.winfo_pathname")
  '(token                 "Statuslabel.Label.winfo_pathname")
  '(token                 "Statustext.winfo_pathname")
  '(token                 "Statustext.Text.winfo_pathname")
  '(token                 "Studbutton.winfo_pathname")
  '(token                 "Tabbed_Notebook.winfo_pathname")
  '(token                 "Text.winfo_pathname")
  '(token                 "Tk.winfo_pathname")
  '(token                 "Toplevel.winfo_pathname")
  '(token                 "Tributton.winfo_pathname")
  '(token                 "Up_Down_Button.winfo_pathname")
  '(token                 "V_Panedwindow.winfo_pathname")
  '(token                 "V_Panedwindow.H_Separator.winfo_pathname")
  '(token                 "V_Scrollable.winfo_pathname")
  '(token                 "V_Separator.winfo_pathname")
  '(token                 "V_Strut.winfo_pathname")
  '(token                 "Widget.winfo_pathname")
  '(token                 "_C_Frame.winfo_pathname")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_pathname")
  '(token                 "_Panedwindow.winfo_pathname")
  '(token                 "_Scrollable.winfo_pathname")
  '(token                 "_Separator.winfo_pathname")
  '(token                 "_Spinnerentry.winfo_pathname")
  '(token                 "_Statusframe.winfo_pathname")
  '(replacement           "winfo_pathname («Misc.winfo_pathname:id», ««Misc.winfo_pathname:displayof»»)")
;;; winfo_pathname(id,displayof)
)

(lse-define-fill-in "Misc.winfo_pixels:number" 
  '(description           "Argument 1 of Misc.winfo_pixels")
  '(leading               ",")
;;; Misc.winfo_pixels:number
)

(lse-define-fill-in "winfo_pixels(number)" 
  '(token)
  '(token                 "Balloon.winfo_pixels")
  '(token                 "BaseWidget.winfo_pixels")
  '(token                 "Button.winfo_pixels")
  '(token                 "Buttonbox.winfo_pixels")
  '(token                 "C_Entry.winfo_pixels")
  '(token                 "C_Frame.winfo_pixels")
  '(token                 "C_Listbox.winfo_pixels")
  '(token                 "C_Menu.winfo_pixels")
  '(token                 "C_Text.winfo_pixels")
  '(token                 "Canvas.winfo_pixels")
  '(token                 "Checkbutton.winfo_pixels")
  '(token                 "Combo_Tuple.winfo_pixels")
  '(token                 "Combo_Tuple_X.winfo_pixels")
  '(token                 "Combobox.winfo_pixels")
  '(token                 "Entry.winfo_pixels")
  '(token                 "Entrybox.winfo_pixels")
  '(token                 "Filename_Entry.winfo_pixels")
  '(token                 "Frame.winfo_pixels")
  '(token                 "H_Panedwindow.winfo_pixels")
  '(token                 "H_Panedwindow.V_Separator.winfo_pixels")
  '(token                 "H_Scrollable.winfo_pixels")
  '(token                 "H_Separator.winfo_pixels")
  '(token                 "H_Strut.winfo_pixels")
  '(token                 "Label.winfo_pixels")
  '(token                 "Listbox.winfo_pixels")
  '(token                 "Listbox_Tuple.winfo_pixels")
  '(token                 "Listdropentry.winfo_pixels")
  '(token                 "Listdropspinner.winfo_pixels")
  '(token                 "Listspinner.winfo_pixels")
  '(token                 "Menu.winfo_pixels")
  '(token                 "Menubutton.winfo_pixels")
  '(token                 "Message.winfo_pixels")
  '(token                 "Message_Window.winfo_pixels")
  '(token                 "Misc.winfo_pixels")
  '(token                 "Multicombobox.winfo_pixels")
  '(token                 "Multicombobox_X.winfo_pixels")
  '(token                 "Notebook.winfo_pixels")
  '(token                 "Num_Spinner.winfo_pixels")
  '(token                 "OptionMenu.winfo_pixels")
  '(token                 "Progress_Gauge.winfo_pixels")
  '(token                 "Progress_Gauge_T.winfo_pixels")
  '(token                 "Radiobutton.winfo_pixels")
  '(token                 "Scale.winfo_pixels")
  '(token                 "Scrollbar.winfo_pixels")
  '(token                 "Scrolled_Listbox.winfo_pixels")
  '(token                 "Scrolled_Text.winfo_pixels")
  '(token                 "Slide_Show.winfo_pixels")
  '(token                 "Statuslabel.winfo_pixels")
  '(token                 "Statuslabel.Label.winfo_pixels")
  '(token                 "Statustext.winfo_pixels")
  '(token                 "Statustext.Text.winfo_pixels")
  '(token                 "Studbutton.winfo_pixels")
  '(token                 "Tabbed_Notebook.winfo_pixels")
  '(token                 "Text.winfo_pixels")
  '(token                 "Tk.winfo_pixels")
  '(token                 "Toplevel.winfo_pixels")
  '(token                 "Tributton.winfo_pixels")
  '(token                 "Up_Down_Button.winfo_pixels")
  '(token                 "V_Panedwindow.winfo_pixels")
  '(token                 "V_Panedwindow.H_Separator.winfo_pixels")
  '(token                 "V_Scrollable.winfo_pixels")
  '(token                 "V_Separator.winfo_pixels")
  '(token                 "V_Strut.winfo_pixels")
  '(token                 "Widget.winfo_pixels")
  '(token                 "_C_Frame.winfo_pixels")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_pixels")
  '(token                 "_Panedwindow.winfo_pixels")
  '(token                 "_Scrollable.winfo_pixels")
  '(token                 "_Separator.winfo_pixels")
  '(token                 "_Spinnerentry.winfo_pixels")
  '(token                 "_Statusframe.winfo_pixels")
  '(replacement           "winfo_pixels («Misc.winfo_pixels:number»)")
;;; winfo_pixels(number)
)

(lse-define-fill-in "winfo_pointerx()" 
  '(token)
  '(token                 "Balloon.winfo_pointerx")
  '(token                 "BaseWidget.winfo_pointerx")
  '(token                 "Button.winfo_pointerx")
  '(token                 "Buttonbox.winfo_pointerx")
  '(token                 "C_Entry.winfo_pointerx")
  '(token                 "C_Frame.winfo_pointerx")
  '(token                 "C_Listbox.winfo_pointerx")
  '(token                 "C_Menu.winfo_pointerx")
  '(token                 "C_Text.winfo_pointerx")
  '(token                 "Canvas.winfo_pointerx")
  '(token                 "Checkbutton.winfo_pointerx")
  '(token                 "Combo_Tuple.winfo_pointerx")
  '(token                 "Combo_Tuple_X.winfo_pointerx")
  '(token                 "Combobox.winfo_pointerx")
  '(token                 "Entry.winfo_pointerx")
  '(token                 "Entrybox.winfo_pointerx")
  '(token                 "Filename_Entry.winfo_pointerx")
  '(token                 "Frame.winfo_pointerx")
  '(token                 "H_Panedwindow.winfo_pointerx")
  '(token                 "H_Panedwindow.V_Separator.winfo_pointerx")
  '(token                 "H_Scrollable.winfo_pointerx")
  '(token                 "H_Separator.winfo_pointerx")
  '(token                 "H_Strut.winfo_pointerx")
  '(token                 "Label.winfo_pointerx")
  '(token                 "Listbox.winfo_pointerx")
  '(token                 "Listbox_Tuple.winfo_pointerx")
  '(token                 "Listdropentry.winfo_pointerx")
  '(token                 "Listdropspinner.winfo_pointerx")
  '(token                 "Listspinner.winfo_pointerx")
  '(token                 "Menu.winfo_pointerx")
  '(token                 "Menubutton.winfo_pointerx")
  '(token                 "Message.winfo_pointerx")
  '(token                 "Message_Window.winfo_pointerx")
  '(token                 "Misc.winfo_pointerx")
  '(token                 "Multicombobox.winfo_pointerx")
  '(token                 "Multicombobox_X.winfo_pointerx")
  '(token                 "Notebook.winfo_pointerx")
  '(token                 "Num_Spinner.winfo_pointerx")
  '(token                 "OptionMenu.winfo_pointerx")
  '(token                 "Progress_Gauge.winfo_pointerx")
  '(token                 "Progress_Gauge_T.winfo_pointerx")
  '(token                 "Radiobutton.winfo_pointerx")
  '(token                 "Scale.winfo_pointerx")
  '(token                 "Scrollbar.winfo_pointerx")
  '(token                 "Scrolled_Listbox.winfo_pointerx")
  '(token                 "Scrolled_Text.winfo_pointerx")
  '(token                 "Slide_Show.winfo_pointerx")
  '(token                 "Statuslabel.winfo_pointerx")
  '(token                 "Statuslabel.Label.winfo_pointerx")
  '(token                 "Statustext.winfo_pointerx")
  '(token                 "Statustext.Text.winfo_pointerx")
  '(token                 "Studbutton.winfo_pointerx")
  '(token                 "Tabbed_Notebook.winfo_pointerx")
  '(token                 "Text.winfo_pointerx")
  '(token                 "Tk.winfo_pointerx")
  '(token                 "Toplevel.winfo_pointerx")
  '(token                 "Tributton.winfo_pointerx")
  '(token                 "Up_Down_Button.winfo_pointerx")
  '(token                 "V_Panedwindow.winfo_pointerx")
  '(token                 "V_Panedwindow.H_Separator.winfo_pointerx")
  '(token                 "V_Scrollable.winfo_pointerx")
  '(token                 "V_Separator.winfo_pointerx")
  '(token                 "V_Strut.winfo_pointerx")
  '(token                 "Widget.winfo_pointerx")
  '(token                 "_C_Frame.winfo_pointerx")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_pointerx")
  '(token                 "_Panedwindow.winfo_pointerx")
  '(token                 "_Scrollable.winfo_pointerx")
  '(token                 "_Separator.winfo_pointerx")
  '(token                 "_Spinnerentry.winfo_pointerx")
  '(token                 "_Statusframe.winfo_pointerx")
  '(replacement           "winfo_pointerx ()")
;;; winfo_pointerx()
)

(lse-define-fill-in "winfo_pointerxy()" 
  '(token)
  '(token                 "Balloon.winfo_pointerxy")
  '(token                 "BaseWidget.winfo_pointerxy")
  '(token                 "Button.winfo_pointerxy")
  '(token                 "Buttonbox.winfo_pointerxy")
  '(token                 "C_Entry.winfo_pointerxy")
  '(token                 "C_Frame.winfo_pointerxy")
  '(token                 "C_Listbox.winfo_pointerxy")
  '(token                 "C_Menu.winfo_pointerxy")
  '(token                 "C_Text.winfo_pointerxy")
  '(token                 "Canvas.winfo_pointerxy")
  '(token                 "Checkbutton.winfo_pointerxy")
  '(token                 "Combo_Tuple.winfo_pointerxy")
  '(token                 "Combo_Tuple_X.winfo_pointerxy")
  '(token                 "Combobox.winfo_pointerxy")
  '(token                 "Entry.winfo_pointerxy")
  '(token                 "Entrybox.winfo_pointerxy")
  '(token                 "Filename_Entry.winfo_pointerxy")
  '(token                 "Frame.winfo_pointerxy")
  '(token                 "H_Panedwindow.winfo_pointerxy")
  '(token                 "H_Panedwindow.V_Separator.winfo_pointerxy")
  '(token                 "H_Scrollable.winfo_pointerxy")
  '(token                 "H_Separator.winfo_pointerxy")
  '(token                 "H_Strut.winfo_pointerxy")
  '(token                 "Label.winfo_pointerxy")
  '(token                 "Listbox.winfo_pointerxy")
  '(token                 "Listbox_Tuple.winfo_pointerxy")
  '(token                 "Listdropentry.winfo_pointerxy")
  '(token                 "Listdropspinner.winfo_pointerxy")
  '(token                 "Listspinner.winfo_pointerxy")
  '(token                 "Menu.winfo_pointerxy")
  '(token                 "Menubutton.winfo_pointerxy")
  '(token                 "Message.winfo_pointerxy")
  '(token                 "Message_Window.winfo_pointerxy")
  '(token                 "Misc.winfo_pointerxy")
  '(token                 "Multicombobox.winfo_pointerxy")
  '(token                 "Multicombobox_X.winfo_pointerxy")
  '(token                 "Notebook.winfo_pointerxy")
  '(token                 "Num_Spinner.winfo_pointerxy")
  '(token                 "OptionMenu.winfo_pointerxy")
  '(token                 "Progress_Gauge.winfo_pointerxy")
  '(token                 "Progress_Gauge_T.winfo_pointerxy")
  '(token                 "Radiobutton.winfo_pointerxy")
  '(token                 "Scale.winfo_pointerxy")
  '(token                 "Scrollbar.winfo_pointerxy")
  '(token                 "Scrolled_Listbox.winfo_pointerxy")
  '(token                 "Scrolled_Text.winfo_pointerxy")
  '(token                 "Slide_Show.winfo_pointerxy")
  '(token                 "Statuslabel.winfo_pointerxy")
  '(token                 "Statuslabel.Label.winfo_pointerxy")
  '(token                 "Statustext.winfo_pointerxy")
  '(token                 "Statustext.Text.winfo_pointerxy")
  '(token                 "Studbutton.winfo_pointerxy")
  '(token                 "Tabbed_Notebook.winfo_pointerxy")
  '(token                 "Text.winfo_pointerxy")
  '(token                 "Tk.winfo_pointerxy")
  '(token                 "Toplevel.winfo_pointerxy")
  '(token                 "Tributton.winfo_pointerxy")
  '(token                 "Up_Down_Button.winfo_pointerxy")
  '(token                 "V_Panedwindow.winfo_pointerxy")
  '(token                 "V_Panedwindow.H_Separator.winfo_pointerxy")
  '(token                 "V_Scrollable.winfo_pointerxy")
  '(token                 "V_Separator.winfo_pointerxy")
  '(token                 "V_Strut.winfo_pointerxy")
  '(token                 "Widget.winfo_pointerxy")
  '(token                 "_C_Frame.winfo_pointerxy")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_pointerxy")
  '(token                 "_Panedwindow.winfo_pointerxy")
  '(token                 "_Scrollable.winfo_pointerxy")
  '(token                 "_Separator.winfo_pointerxy")
  '(token                 "_Spinnerentry.winfo_pointerxy")
  '(token                 "_Statusframe.winfo_pointerxy")
  '(replacement           "winfo_pointerxy ()")
;;; winfo_pointerxy()
)

(lse-define-fill-in "winfo_pointery()" 
  '(token)
  '(token                 "Balloon.winfo_pointery")
  '(token                 "BaseWidget.winfo_pointery")
  '(token                 "Button.winfo_pointery")
  '(token                 "Buttonbox.winfo_pointery")
  '(token                 "C_Entry.winfo_pointery")
  '(token                 "C_Frame.winfo_pointery")
  '(token                 "C_Listbox.winfo_pointery")
  '(token                 "C_Menu.winfo_pointery")
  '(token                 "C_Text.winfo_pointery")
  '(token                 "Canvas.winfo_pointery")
  '(token                 "Checkbutton.winfo_pointery")
  '(token                 "Combo_Tuple.winfo_pointery")
  '(token                 "Combo_Tuple_X.winfo_pointery")
  '(token                 "Combobox.winfo_pointery")
  '(token                 "Entry.winfo_pointery")
  '(token                 "Entrybox.winfo_pointery")
  '(token                 "Filename_Entry.winfo_pointery")
  '(token                 "Frame.winfo_pointery")
  '(token                 "H_Panedwindow.winfo_pointery")
  '(token                 "H_Panedwindow.V_Separator.winfo_pointery")
  '(token                 "H_Scrollable.winfo_pointery")
  '(token                 "H_Separator.winfo_pointery")
  '(token                 "H_Strut.winfo_pointery")
  '(token                 "Label.winfo_pointery")
  '(token                 "Listbox.winfo_pointery")
  '(token                 "Listbox_Tuple.winfo_pointery")
  '(token                 "Listdropentry.winfo_pointery")
  '(token                 "Listdropspinner.winfo_pointery")
  '(token                 "Listspinner.winfo_pointery")
  '(token                 "Menu.winfo_pointery")
  '(token                 "Menubutton.winfo_pointery")
  '(token                 "Message.winfo_pointery")
  '(token                 "Message_Window.winfo_pointery")
  '(token                 "Misc.winfo_pointery")
  '(token                 "Multicombobox.winfo_pointery")
  '(token                 "Multicombobox_X.winfo_pointery")
  '(token                 "Notebook.winfo_pointery")
  '(token                 "Num_Spinner.winfo_pointery")
  '(token                 "OptionMenu.winfo_pointery")
  '(token                 "Progress_Gauge.winfo_pointery")
  '(token                 "Progress_Gauge_T.winfo_pointery")
  '(token                 "Radiobutton.winfo_pointery")
  '(token                 "Scale.winfo_pointery")
  '(token                 "Scrollbar.winfo_pointery")
  '(token                 "Scrolled_Listbox.winfo_pointery")
  '(token                 "Scrolled_Text.winfo_pointery")
  '(token                 "Slide_Show.winfo_pointery")
  '(token                 "Statuslabel.winfo_pointery")
  '(token                 "Statuslabel.Label.winfo_pointery")
  '(token                 "Statustext.winfo_pointery")
  '(token                 "Statustext.Text.winfo_pointery")
  '(token                 "Studbutton.winfo_pointery")
  '(token                 "Tabbed_Notebook.winfo_pointery")
  '(token                 "Text.winfo_pointery")
  '(token                 "Tk.winfo_pointery")
  '(token                 "Toplevel.winfo_pointery")
  '(token                 "Tributton.winfo_pointery")
  '(token                 "Up_Down_Button.winfo_pointery")
  '(token                 "V_Panedwindow.winfo_pointery")
  '(token                 "V_Panedwindow.H_Separator.winfo_pointery")
  '(token                 "V_Scrollable.winfo_pointery")
  '(token                 "V_Separator.winfo_pointery")
  '(token                 "V_Strut.winfo_pointery")
  '(token                 "Widget.winfo_pointery")
  '(token                 "_C_Frame.winfo_pointery")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_pointery")
  '(token                 "_Panedwindow.winfo_pointery")
  '(token                 "_Scrollable.winfo_pointery")
  '(token                 "_Separator.winfo_pointery")
  '(token                 "_Spinnerentry.winfo_pointery")
  '(token                 "_Statusframe.winfo_pointery")
  '(replacement           "winfo_pointery ()")
;;; winfo_pointery()
)

(lse-define-fill-in "winfo_reqheight()" 
  '(token)
  '(token                 "Balloon.winfo_reqheight")
  '(token                 "BaseWidget.winfo_reqheight")
  '(token                 "Button.winfo_reqheight")
  '(token                 "Buttonbox.winfo_reqheight")
  '(token                 "C_Entry.winfo_reqheight")
  '(token                 "C_Frame.winfo_reqheight")
  '(token                 "C_Listbox.winfo_reqheight")
  '(token                 "C_Menu.winfo_reqheight")
  '(token                 "C_Text.winfo_reqheight")
  '(token                 "Canvas.winfo_reqheight")
  '(token                 "Checkbutton.winfo_reqheight")
  '(token                 "Combo_Tuple.winfo_reqheight")
  '(token                 "Combo_Tuple_X.winfo_reqheight")
  '(token                 "Combobox.winfo_reqheight")
  '(token                 "Entry.winfo_reqheight")
  '(token                 "Entrybox.winfo_reqheight")
  '(token                 "Filename_Entry.winfo_reqheight")
  '(token                 "Frame.winfo_reqheight")
  '(token                 "H_Panedwindow.winfo_reqheight")
  '(token                 "H_Panedwindow.V_Separator.winfo_reqheight")
  '(token                 "H_Scrollable.winfo_reqheight")
  '(token                 "H_Separator.winfo_reqheight")
  '(token                 "H_Strut.winfo_reqheight")
  '(token                 "Label.winfo_reqheight")
  '(token                 "Listbox.winfo_reqheight")
  '(token                 "Listbox_Tuple.winfo_reqheight")
  '(token                 "Listdropentry.winfo_reqheight")
  '(token                 "Listdropspinner.winfo_reqheight")
  '(token                 "Listspinner.winfo_reqheight")
  '(token                 "Menu.winfo_reqheight")
  '(token                 "Menubutton.winfo_reqheight")
  '(token                 "Message.winfo_reqheight")
  '(token                 "Message_Window.winfo_reqheight")
  '(token                 "Misc.winfo_reqheight")
  '(token                 "Multicombobox.winfo_reqheight")
  '(token                 "Multicombobox_X.winfo_reqheight")
  '(token                 "Notebook.winfo_reqheight")
  '(token                 "Num_Spinner.winfo_reqheight")
  '(token                 "OptionMenu.winfo_reqheight")
  '(token                 "Progress_Gauge.winfo_reqheight")
  '(token                 "Progress_Gauge_T.winfo_reqheight")
  '(token                 "Radiobutton.winfo_reqheight")
  '(token                 "Scale.winfo_reqheight")
  '(token                 "Scrollbar.winfo_reqheight")
  '(token                 "Scrolled_Listbox.winfo_reqheight")
  '(token                 "Scrolled_Text.winfo_reqheight")
  '(token                 "Slide_Show.winfo_reqheight")
  '(token                 "Statuslabel.winfo_reqheight")
  '(token                 "Statuslabel.Label.winfo_reqheight")
  '(token                 "Statustext.winfo_reqheight")
  '(token                 "Statustext.Text.winfo_reqheight")
  '(token                 "Studbutton.winfo_reqheight")
  '(token                 "Tabbed_Notebook.winfo_reqheight")
  '(token                 "Text.winfo_reqheight")
  '(token                 "Tk.winfo_reqheight")
  '(token                 "Toplevel.winfo_reqheight")
  '(token                 "Tributton.winfo_reqheight")
  '(token                 "Up_Down_Button.winfo_reqheight")
  '(token                 "V_Panedwindow.winfo_reqheight")
  '(token                 "V_Panedwindow.H_Separator.winfo_reqheight")
  '(token                 "V_Scrollable.winfo_reqheight")
  '(token                 "V_Separator.winfo_reqheight")
  '(token                 "V_Strut.winfo_reqheight")
  '(token                 "Widget.winfo_reqheight")
  '(token                 "_C_Frame.winfo_reqheight")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_reqheight")
  '(token                 "_Panedwindow.winfo_reqheight")
  '(token                 "_Scrollable.winfo_reqheight")
  '(token                 "_Separator.winfo_reqheight")
  '(token                 "_Spinnerentry.winfo_reqheight")
  '(token                 "_Statusframe.winfo_reqheight")
  '(replacement           "winfo_reqheight ()")
;;; winfo_reqheight()
)

(lse-define-fill-in "winfo_reqwidth()" 
  '(token)
  '(token                 "Balloon.winfo_reqwidth")
  '(token                 "BaseWidget.winfo_reqwidth")
  '(token                 "Button.winfo_reqwidth")
  '(token                 "Buttonbox.winfo_reqwidth")
  '(token                 "C_Entry.winfo_reqwidth")
  '(token                 "C_Frame.winfo_reqwidth")
  '(token                 "C_Listbox.winfo_reqwidth")
  '(token                 "C_Menu.winfo_reqwidth")
  '(token                 "C_Text.winfo_reqwidth")
  '(token                 "Canvas.winfo_reqwidth")
  '(token                 "Checkbutton.winfo_reqwidth")
  '(token                 "Combo_Tuple.winfo_reqwidth")
  '(token                 "Combo_Tuple_X.winfo_reqwidth")
  '(token                 "Combobox.winfo_reqwidth")
  '(token                 "Entry.winfo_reqwidth")
  '(token                 "Entrybox.winfo_reqwidth")
  '(token                 "Filename_Entry.winfo_reqwidth")
  '(token                 "Frame.winfo_reqwidth")
  '(token                 "H_Panedwindow.winfo_reqwidth")
  '(token                 "H_Panedwindow.V_Separator.winfo_reqwidth")
  '(token                 "H_Scrollable.winfo_reqwidth")
  '(token                 "H_Separator.winfo_reqwidth")
  '(token                 "H_Strut.winfo_reqwidth")
  '(token                 "Label.winfo_reqwidth")
  '(token                 "Listbox.winfo_reqwidth")
  '(token                 "Listbox_Tuple.winfo_reqwidth")
  '(token                 "Listdropentry.winfo_reqwidth")
  '(token                 "Listdropspinner.winfo_reqwidth")
  '(token                 "Listspinner.winfo_reqwidth")
  '(token                 "Menu.winfo_reqwidth")
  '(token                 "Menubutton.winfo_reqwidth")
  '(token                 "Message.winfo_reqwidth")
  '(token                 "Message_Window.winfo_reqwidth")
  '(token                 "Misc.winfo_reqwidth")
  '(token                 "Multicombobox.winfo_reqwidth")
  '(token                 "Multicombobox_X.winfo_reqwidth")
  '(token                 "Notebook.winfo_reqwidth")
  '(token                 "Num_Spinner.winfo_reqwidth")
  '(token                 "OptionMenu.winfo_reqwidth")
  '(token                 "Progress_Gauge.winfo_reqwidth")
  '(token                 "Progress_Gauge_T.winfo_reqwidth")
  '(token                 "Radiobutton.winfo_reqwidth")
  '(token                 "Scale.winfo_reqwidth")
  '(token                 "Scrollbar.winfo_reqwidth")
  '(token                 "Scrolled_Listbox.winfo_reqwidth")
  '(token                 "Scrolled_Text.winfo_reqwidth")
  '(token                 "Slide_Show.winfo_reqwidth")
  '(token                 "Statuslabel.winfo_reqwidth")
  '(token                 "Statuslabel.Label.winfo_reqwidth")
  '(token                 "Statustext.winfo_reqwidth")
  '(token                 "Statustext.Text.winfo_reqwidth")
  '(token                 "Studbutton.winfo_reqwidth")
  '(token                 "Tabbed_Notebook.winfo_reqwidth")
  '(token                 "Text.winfo_reqwidth")
  '(token                 "Tk.winfo_reqwidth")
  '(token                 "Toplevel.winfo_reqwidth")
  '(token                 "Tributton.winfo_reqwidth")
  '(token                 "Up_Down_Button.winfo_reqwidth")
  '(token                 "V_Panedwindow.winfo_reqwidth")
  '(token                 "V_Panedwindow.H_Separator.winfo_reqwidth")
  '(token                 "V_Scrollable.winfo_reqwidth")
  '(token                 "V_Separator.winfo_reqwidth")
  '(token                 "V_Strut.winfo_reqwidth")
  '(token                 "Widget.winfo_reqwidth")
  '(token                 "_C_Frame.winfo_reqwidth")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_reqwidth")
  '(token                 "_Panedwindow.winfo_reqwidth")
  '(token                 "_Scrollable.winfo_reqwidth")
  '(token                 "_Separator.winfo_reqwidth")
  '(token                 "_Spinnerentry.winfo_reqwidth")
  '(token                 "_Statusframe.winfo_reqwidth")
  '(replacement           "winfo_reqwidth ()")
;;; winfo_reqwidth()
)

(lse-define-fill-in "Misc.winfo_rgb:color" 
  '(description           "Argument 1 of Misc.winfo_rgb")
  '(leading               ",")
;;; Misc.winfo_rgb:color
)

(lse-define-fill-in "winfo_rgb(color)" 
  '(token)
  '(token                 "Balloon.winfo_rgb")
  '(token                 "BaseWidget.winfo_rgb")
  '(token                 "Button.winfo_rgb")
  '(token                 "Buttonbox.winfo_rgb")
  '(token                 "C_Entry.winfo_rgb")
  '(token                 "C_Frame.winfo_rgb")
  '(token                 "C_Listbox.winfo_rgb")
  '(token                 "C_Menu.winfo_rgb")
  '(token                 "C_Text.winfo_rgb")
  '(token                 "Canvas.winfo_rgb")
  '(token                 "Checkbutton.winfo_rgb")
  '(token                 "Combo_Tuple.winfo_rgb")
  '(token                 "Combo_Tuple_X.winfo_rgb")
  '(token                 "Combobox.winfo_rgb")
  '(token                 "Entry.winfo_rgb")
  '(token                 "Entrybox.winfo_rgb")
  '(token                 "Filename_Entry.winfo_rgb")
  '(token                 "Frame.winfo_rgb")
  '(token                 "H_Panedwindow.winfo_rgb")
  '(token                 "H_Panedwindow.V_Separator.winfo_rgb")
  '(token                 "H_Scrollable.winfo_rgb")
  '(token                 "H_Separator.winfo_rgb")
  '(token                 "H_Strut.winfo_rgb")
  '(token                 "Label.winfo_rgb")
  '(token                 "Listbox.winfo_rgb")
  '(token                 "Listbox_Tuple.winfo_rgb")
  '(token                 "Listdropentry.winfo_rgb")
  '(token                 "Listdropspinner.winfo_rgb")
  '(token                 "Listspinner.winfo_rgb")
  '(token                 "Menu.winfo_rgb")
  '(token                 "Menubutton.winfo_rgb")
  '(token                 "Message.winfo_rgb")
  '(token                 "Message_Window.winfo_rgb")
  '(token                 "Misc.winfo_rgb")
  '(token                 "Multicombobox.winfo_rgb")
  '(token                 "Multicombobox_X.winfo_rgb")
  '(token                 "Notebook.winfo_rgb")
  '(token                 "Num_Spinner.winfo_rgb")
  '(token                 "OptionMenu.winfo_rgb")
  '(token                 "Progress_Gauge.winfo_rgb")
  '(token                 "Progress_Gauge_T.winfo_rgb")
  '(token                 "Radiobutton.winfo_rgb")
  '(token                 "Scale.winfo_rgb")
  '(token                 "Scrollbar.winfo_rgb")
  '(token                 "Scrolled_Listbox.winfo_rgb")
  '(token                 "Scrolled_Text.winfo_rgb")
  '(token                 "Slide_Show.winfo_rgb")
  '(token                 "Statuslabel.winfo_rgb")
  '(token                 "Statuslabel.Label.winfo_rgb")
  '(token                 "Statustext.winfo_rgb")
  '(token                 "Statustext.Text.winfo_rgb")
  '(token                 "Studbutton.winfo_rgb")
  '(token                 "Tabbed_Notebook.winfo_rgb")
  '(token                 "Text.winfo_rgb")
  '(token                 "Tk.winfo_rgb")
  '(token                 "Toplevel.winfo_rgb")
  '(token                 "Tributton.winfo_rgb")
  '(token                 "Up_Down_Button.winfo_rgb")
  '(token                 "V_Panedwindow.winfo_rgb")
  '(token                 "V_Panedwindow.H_Separator.winfo_rgb")
  '(token                 "V_Scrollable.winfo_rgb")
  '(token                 "V_Separator.winfo_rgb")
  '(token                 "V_Strut.winfo_rgb")
  '(token                 "Widget.winfo_rgb")
  '(token                 "_C_Frame.winfo_rgb")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_rgb")
  '(token                 "_Panedwindow.winfo_rgb")
  '(token                 "_Scrollable.winfo_rgb")
  '(token                 "_Separator.winfo_rgb")
  '(token                 "_Spinnerentry.winfo_rgb")
  '(token                 "_Statusframe.winfo_rgb")
  '(replacement           "winfo_rgb («Misc.winfo_rgb:color»)")
;;; winfo_rgb(color)
)

(lse-define-fill-in "winfo_rootx()" 
  '(token)
  '(token                 "Balloon.winfo_rootx")
  '(token                 "BaseWidget.winfo_rootx")
  '(token                 "Button.winfo_rootx")
  '(token                 "Buttonbox.winfo_rootx")
  '(token                 "C_Entry.winfo_rootx")
  '(token                 "C_Frame.winfo_rootx")
  '(token                 "C_Listbox.winfo_rootx")
  '(token                 "C_Menu.winfo_rootx")
  '(token                 "C_Text.winfo_rootx")
  '(token                 "Canvas.winfo_rootx")
  '(token                 "Checkbutton.winfo_rootx")
  '(token                 "Combo_Tuple.winfo_rootx")
  '(token                 "Combo_Tuple_X.winfo_rootx")
  '(token                 "Combobox.winfo_rootx")
  '(token                 "Entry.winfo_rootx")
  '(token                 "Entrybox.winfo_rootx")
  '(token                 "Filename_Entry.winfo_rootx")
  '(token                 "Frame.winfo_rootx")
  '(token                 "H_Panedwindow.winfo_rootx")
  '(token                 "H_Panedwindow.V_Separator.winfo_rootx")
  '(token                 "H_Scrollable.winfo_rootx")
  '(token                 "H_Separator.winfo_rootx")
  '(token                 "H_Strut.winfo_rootx")
  '(token                 "Label.winfo_rootx")
  '(token                 "Listbox.winfo_rootx")
  '(token                 "Listbox_Tuple.winfo_rootx")
  '(token                 "Listdropentry.winfo_rootx")
  '(token                 "Listdropspinner.winfo_rootx")
  '(token                 "Listspinner.winfo_rootx")
  '(token                 "Menu.winfo_rootx")
  '(token                 "Menubutton.winfo_rootx")
  '(token                 "Message.winfo_rootx")
  '(token                 "Message_Window.winfo_rootx")
  '(token                 "Misc.winfo_rootx")
  '(token                 "Multicombobox.winfo_rootx")
  '(token                 "Multicombobox_X.winfo_rootx")
  '(token                 "Notebook.winfo_rootx")
  '(token                 "Num_Spinner.winfo_rootx")
  '(token                 "OptionMenu.winfo_rootx")
  '(token                 "Progress_Gauge.winfo_rootx")
  '(token                 "Progress_Gauge_T.winfo_rootx")
  '(token                 "Radiobutton.winfo_rootx")
  '(token                 "Scale.winfo_rootx")
  '(token                 "Scrollbar.winfo_rootx")
  '(token                 "Scrolled_Listbox.winfo_rootx")
  '(token                 "Scrolled_Text.winfo_rootx")
  '(token                 "Slide_Show.winfo_rootx")
  '(token                 "Statuslabel.winfo_rootx")
  '(token                 "Statuslabel.Label.winfo_rootx")
  '(token                 "Statustext.winfo_rootx")
  '(token                 "Statustext.Text.winfo_rootx")
  '(token                 "Studbutton.winfo_rootx")
  '(token                 "Tabbed_Notebook.winfo_rootx")
  '(token                 "Text.winfo_rootx")
  '(token                 "Tk.winfo_rootx")
  '(token                 "Toplevel.winfo_rootx")
  '(token                 "Tributton.winfo_rootx")
  '(token                 "Up_Down_Button.winfo_rootx")
  '(token                 "V_Panedwindow.winfo_rootx")
  '(token                 "V_Panedwindow.H_Separator.winfo_rootx")
  '(token                 "V_Scrollable.winfo_rootx")
  '(token                 "V_Separator.winfo_rootx")
  '(token                 "V_Strut.winfo_rootx")
  '(token                 "Widget.winfo_rootx")
  '(token                 "_C_Frame.winfo_rootx")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_rootx")
  '(token                 "_Panedwindow.winfo_rootx")
  '(token                 "_Scrollable.winfo_rootx")
  '(token                 "_Separator.winfo_rootx")
  '(token                 "_Spinnerentry.winfo_rootx")
  '(token                 "_Statusframe.winfo_rootx")
  '(replacement           "winfo_rootx ()")
;;; winfo_rootx()
)

(lse-define-fill-in "winfo_rooty()" 
  '(token)
  '(token                 "Balloon.winfo_rooty")
  '(token                 "BaseWidget.winfo_rooty")
  '(token                 "Button.winfo_rooty")
  '(token                 "Buttonbox.winfo_rooty")
  '(token                 "C_Entry.winfo_rooty")
  '(token                 "C_Frame.winfo_rooty")
  '(token                 "C_Listbox.winfo_rooty")
  '(token                 "C_Menu.winfo_rooty")
  '(token                 "C_Text.winfo_rooty")
  '(token                 "Canvas.winfo_rooty")
  '(token                 "Checkbutton.winfo_rooty")
  '(token                 "Combo_Tuple.winfo_rooty")
  '(token                 "Combo_Tuple_X.winfo_rooty")
  '(token                 "Combobox.winfo_rooty")
  '(token                 "Entry.winfo_rooty")
  '(token                 "Entrybox.winfo_rooty")
  '(token                 "Filename_Entry.winfo_rooty")
  '(token                 "Frame.winfo_rooty")
  '(token                 "H_Panedwindow.winfo_rooty")
  '(token                 "H_Panedwindow.V_Separator.winfo_rooty")
  '(token                 "H_Scrollable.winfo_rooty")
  '(token                 "H_Separator.winfo_rooty")
  '(token                 "H_Strut.winfo_rooty")
  '(token                 "Label.winfo_rooty")
  '(token                 "Listbox.winfo_rooty")
  '(token                 "Listbox_Tuple.winfo_rooty")
  '(token                 "Listdropentry.winfo_rooty")
  '(token                 "Listdropspinner.winfo_rooty")
  '(token                 "Listspinner.winfo_rooty")
  '(token                 "Menu.winfo_rooty")
  '(token                 "Menubutton.winfo_rooty")
  '(token                 "Message.winfo_rooty")
  '(token                 "Message_Window.winfo_rooty")
  '(token                 "Misc.winfo_rooty")
  '(token                 "Multicombobox.winfo_rooty")
  '(token                 "Multicombobox_X.winfo_rooty")
  '(token                 "Notebook.winfo_rooty")
  '(token                 "Num_Spinner.winfo_rooty")
  '(token                 "OptionMenu.winfo_rooty")
  '(token                 "Progress_Gauge.winfo_rooty")
  '(token                 "Progress_Gauge_T.winfo_rooty")
  '(token                 "Radiobutton.winfo_rooty")
  '(token                 "Scale.winfo_rooty")
  '(token                 "Scrollbar.winfo_rooty")
  '(token                 "Scrolled_Listbox.winfo_rooty")
  '(token                 "Scrolled_Text.winfo_rooty")
  '(token                 "Slide_Show.winfo_rooty")
  '(token                 "Statuslabel.winfo_rooty")
  '(token                 "Statuslabel.Label.winfo_rooty")
  '(token                 "Statustext.winfo_rooty")
  '(token                 "Statustext.Text.winfo_rooty")
  '(token                 "Studbutton.winfo_rooty")
  '(token                 "Tabbed_Notebook.winfo_rooty")
  '(token                 "Text.winfo_rooty")
  '(token                 "Tk.winfo_rooty")
  '(token                 "Toplevel.winfo_rooty")
  '(token                 "Tributton.winfo_rooty")
  '(token                 "Up_Down_Button.winfo_rooty")
  '(token                 "V_Panedwindow.winfo_rooty")
  '(token                 "V_Panedwindow.H_Separator.winfo_rooty")
  '(token                 "V_Scrollable.winfo_rooty")
  '(token                 "V_Separator.winfo_rooty")
  '(token                 "V_Strut.winfo_rooty")
  '(token                 "Widget.winfo_rooty")
  '(token                 "_C_Frame.winfo_rooty")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_rooty")
  '(token                 "_Panedwindow.winfo_rooty")
  '(token                 "_Scrollable.winfo_rooty")
  '(token                 "_Separator.winfo_rooty")
  '(token                 "_Spinnerentry.winfo_rooty")
  '(token                 "_Statusframe.winfo_rooty")
  '(replacement           "winfo_rooty ()")
;;; winfo_rooty()
)

(lse-define-fill-in "winfo_screen()" 
  '(token)
  '(token                 "Balloon.winfo_screen")
  '(token                 "BaseWidget.winfo_screen")
  '(token                 "Button.winfo_screen")
  '(token                 "Buttonbox.winfo_screen")
  '(token                 "C_Entry.winfo_screen")
  '(token                 "C_Frame.winfo_screen")
  '(token                 "C_Listbox.winfo_screen")
  '(token                 "C_Menu.winfo_screen")
  '(token                 "C_Text.winfo_screen")
  '(token                 "Canvas.winfo_screen")
  '(token                 "Checkbutton.winfo_screen")
  '(token                 "Combo_Tuple.winfo_screen")
  '(token                 "Combo_Tuple_X.winfo_screen")
  '(token                 "Combobox.winfo_screen")
  '(token                 "Entry.winfo_screen")
  '(token                 "Entrybox.winfo_screen")
  '(token                 "Filename_Entry.winfo_screen")
  '(token                 "Frame.winfo_screen")
  '(token                 "H_Panedwindow.winfo_screen")
  '(token                 "H_Panedwindow.V_Separator.winfo_screen")
  '(token                 "H_Scrollable.winfo_screen")
  '(token                 "H_Separator.winfo_screen")
  '(token                 "H_Strut.winfo_screen")
  '(token                 "Label.winfo_screen")
  '(token                 "Listbox.winfo_screen")
  '(token                 "Listbox_Tuple.winfo_screen")
  '(token                 "Listdropentry.winfo_screen")
  '(token                 "Listdropspinner.winfo_screen")
  '(token                 "Listspinner.winfo_screen")
  '(token                 "Menu.winfo_screen")
  '(token                 "Menubutton.winfo_screen")
  '(token                 "Message.winfo_screen")
  '(token                 "Message_Window.winfo_screen")
  '(token                 "Misc.winfo_screen")
  '(token                 "Multicombobox.winfo_screen")
  '(token                 "Multicombobox_X.winfo_screen")
  '(token                 "Notebook.winfo_screen")
  '(token                 "Num_Spinner.winfo_screen")
  '(token                 "OptionMenu.winfo_screen")
  '(token                 "Progress_Gauge.winfo_screen")
  '(token                 "Progress_Gauge_T.winfo_screen")
  '(token                 "Radiobutton.winfo_screen")
  '(token                 "Scale.winfo_screen")
  '(token                 "Scrollbar.winfo_screen")
  '(token                 "Scrolled_Listbox.winfo_screen")
  '(token                 "Scrolled_Text.winfo_screen")
  '(token                 "Slide_Show.winfo_screen")
  '(token                 "Statuslabel.winfo_screen")
  '(token                 "Statuslabel.Label.winfo_screen")
  '(token                 "Statustext.winfo_screen")
  '(token                 "Statustext.Text.winfo_screen")
  '(token                 "Studbutton.winfo_screen")
  '(token                 "Tabbed_Notebook.winfo_screen")
  '(token                 "Text.winfo_screen")
  '(token                 "Tk.winfo_screen")
  '(token                 "Toplevel.winfo_screen")
  '(token                 "Tributton.winfo_screen")
  '(token                 "Up_Down_Button.winfo_screen")
  '(token                 "V_Panedwindow.winfo_screen")
  '(token                 "V_Panedwindow.H_Separator.winfo_screen")
  '(token                 "V_Scrollable.winfo_screen")
  '(token                 "V_Separator.winfo_screen")
  '(token                 "V_Strut.winfo_screen")
  '(token                 "Widget.winfo_screen")
  '(token                 "_C_Frame.winfo_screen")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_screen")
  '(token                 "_Panedwindow.winfo_screen")
  '(token                 "_Scrollable.winfo_screen")
  '(token                 "_Separator.winfo_screen")
  '(token                 "_Spinnerentry.winfo_screen")
  '(token                 "_Statusframe.winfo_screen")
  '(replacement           "winfo_screen ()")
;;; winfo_screen()
)

(lse-define-fill-in "winfo_screencells()" 
  '(token)
  '(token                 "Balloon.winfo_screencells")
  '(token                 "BaseWidget.winfo_screencells")
  '(token                 "Button.winfo_screencells")
  '(token                 "Buttonbox.winfo_screencells")
  '(token                 "C_Entry.winfo_screencells")
  '(token                 "C_Frame.winfo_screencells")
  '(token                 "C_Listbox.winfo_screencells")
  '(token                 "C_Menu.winfo_screencells")
  '(token                 "C_Text.winfo_screencells")
  '(token                 "Canvas.winfo_screencells")
  '(token                 "Checkbutton.winfo_screencells")
  '(token                 "Combo_Tuple.winfo_screencells")
  '(token                 "Combo_Tuple_X.winfo_screencells")
  '(token                 "Combobox.winfo_screencells")
  '(token                 "Entry.winfo_screencells")
  '(token                 "Entrybox.winfo_screencells")
  '(token                 "Filename_Entry.winfo_screencells")
  '(token                 "Frame.winfo_screencells")
  '(token                 "H_Panedwindow.winfo_screencells")
  '(token                 "H_Panedwindow.V_Separator.winfo_screencells")
  '(token                 "H_Scrollable.winfo_screencells")
  '(token                 "H_Separator.winfo_screencells")
  '(token                 "H_Strut.winfo_screencells")
  '(token                 "Label.winfo_screencells")
  '(token                 "Listbox.winfo_screencells")
  '(token                 "Listbox_Tuple.winfo_screencells")
  '(token                 "Listdropentry.winfo_screencells")
  '(token                 "Listdropspinner.winfo_screencells")
  '(token                 "Listspinner.winfo_screencells")
  '(token                 "Menu.winfo_screencells")
  '(token                 "Menubutton.winfo_screencells")
  '(token                 "Message.winfo_screencells")
  '(token                 "Message_Window.winfo_screencells")
  '(token                 "Misc.winfo_screencells")
  '(token                 "Multicombobox.winfo_screencells")
  '(token                 "Multicombobox_X.winfo_screencells")
  '(token                 "Notebook.winfo_screencells")
  '(token                 "Num_Spinner.winfo_screencells")
  '(token                 "OptionMenu.winfo_screencells")
  '(token                 "Progress_Gauge.winfo_screencells")
  '(token                 "Progress_Gauge_T.winfo_screencells")
  '(token                 "Radiobutton.winfo_screencells")
  '(token                 "Scale.winfo_screencells")
  '(token                 "Scrollbar.winfo_screencells")
  '(token                 "Scrolled_Listbox.winfo_screencells")
  '(token                 "Scrolled_Text.winfo_screencells")
  '(token                 "Slide_Show.winfo_screencells")
  '(token                 "Statuslabel.winfo_screencells")
  '(token                 "Statuslabel.Label.winfo_screencells")
  '(token                 "Statustext.winfo_screencells")
  '(token                 "Statustext.Text.winfo_screencells")
  '(token                 "Studbutton.winfo_screencells")
  '(token                 "Tabbed_Notebook.winfo_screencells")
  '(token                 "Text.winfo_screencells")
  '(token                 "Tk.winfo_screencells")
  '(token                 "Toplevel.winfo_screencells")
  '(token                 "Tributton.winfo_screencells")
  '(token                 "Up_Down_Button.winfo_screencells")
  '(token                 "V_Panedwindow.winfo_screencells")
  '(token                 "V_Panedwindow.H_Separator.winfo_screencells")
  '(token                 "V_Scrollable.winfo_screencells")
  '(token                 "V_Separator.winfo_screencells")
  '(token                 "V_Strut.winfo_screencells")
  '(token                 "Widget.winfo_screencells")
  '(token                 "_C_Frame.winfo_screencells")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_screencells")
  '(token                 "_Panedwindow.winfo_screencells")
  '(token                 "_Scrollable.winfo_screencells")
  '(token                 "_Separator.winfo_screencells")
  '(token                 "_Spinnerentry.winfo_screencells")
  '(token                 "_Statusframe.winfo_screencells")
  '(replacement           "winfo_screencells ()")
;;; winfo_screencells()
)

(lse-define-fill-in "winfo_screendepth()" 
  '(token)
  '(token                 "Balloon.winfo_screendepth")
  '(token                 "BaseWidget.winfo_screendepth")
  '(token                 "Button.winfo_screendepth")
  '(token                 "Buttonbox.winfo_screendepth")
  '(token                 "C_Entry.winfo_screendepth")
  '(token                 "C_Frame.winfo_screendepth")
  '(token                 "C_Listbox.winfo_screendepth")
  '(token                 "C_Menu.winfo_screendepth")
  '(token                 "C_Text.winfo_screendepth")
  '(token                 "Canvas.winfo_screendepth")
  '(token                 "Checkbutton.winfo_screendepth")
  '(token                 "Combo_Tuple.winfo_screendepth")
  '(token                 "Combo_Tuple_X.winfo_screendepth")
  '(token                 "Combobox.winfo_screendepth")
  '(token                 "Entry.winfo_screendepth")
  '(token                 "Entrybox.winfo_screendepth")
  '(token                 "Filename_Entry.winfo_screendepth")
  '(token                 "Frame.winfo_screendepth")
  '(token                 "H_Panedwindow.winfo_screendepth")
  '(token                 "H_Panedwindow.V_Separator.winfo_screendepth")
  '(token                 "H_Scrollable.winfo_screendepth")
  '(token                 "H_Separator.winfo_screendepth")
  '(token                 "H_Strut.winfo_screendepth")
  '(token                 "Label.winfo_screendepth")
  '(token                 "Listbox.winfo_screendepth")
  '(token                 "Listbox_Tuple.winfo_screendepth")
  '(token                 "Listdropentry.winfo_screendepth")
  '(token                 "Listdropspinner.winfo_screendepth")
  '(token                 "Listspinner.winfo_screendepth")
  '(token                 "Menu.winfo_screendepth")
  '(token                 "Menubutton.winfo_screendepth")
  '(token                 "Message.winfo_screendepth")
  '(token                 "Message_Window.winfo_screendepth")
  '(token                 "Misc.winfo_screendepth")
  '(token                 "Multicombobox.winfo_screendepth")
  '(token                 "Multicombobox_X.winfo_screendepth")
  '(token                 "Notebook.winfo_screendepth")
  '(token                 "Num_Spinner.winfo_screendepth")
  '(token                 "OptionMenu.winfo_screendepth")
  '(token                 "Progress_Gauge.winfo_screendepth")
  '(token                 "Progress_Gauge_T.winfo_screendepth")
  '(token                 "Radiobutton.winfo_screendepth")
  '(token                 "Scale.winfo_screendepth")
  '(token                 "Scrollbar.winfo_screendepth")
  '(token                 "Scrolled_Listbox.winfo_screendepth")
  '(token                 "Scrolled_Text.winfo_screendepth")
  '(token                 "Slide_Show.winfo_screendepth")
  '(token                 "Statuslabel.winfo_screendepth")
  '(token                 "Statuslabel.Label.winfo_screendepth")
  '(token                 "Statustext.winfo_screendepth")
  '(token                 "Statustext.Text.winfo_screendepth")
  '(token                 "Studbutton.winfo_screendepth")
  '(token                 "Tabbed_Notebook.winfo_screendepth")
  '(token                 "Text.winfo_screendepth")
  '(token                 "Tk.winfo_screendepth")
  '(token                 "Toplevel.winfo_screendepth")
  '(token                 "Tributton.winfo_screendepth")
  '(token                 "Up_Down_Button.winfo_screendepth")
  '(token                 "V_Panedwindow.winfo_screendepth")
  '(token                 "V_Panedwindow.H_Separator.winfo_screendepth")
  '(token                 "V_Scrollable.winfo_screendepth")
  '(token                 "V_Separator.winfo_screendepth")
  '(token                 "V_Strut.winfo_screendepth")
  '(token                 "Widget.winfo_screendepth")
  '(token                 "_C_Frame.winfo_screendepth")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_screendepth")
  '(token                 "_Panedwindow.winfo_screendepth")
  '(token                 "_Scrollable.winfo_screendepth")
  '(token                 "_Separator.winfo_screendepth")
  '(token                 "_Spinnerentry.winfo_screendepth")
  '(token                 "_Statusframe.winfo_screendepth")
  '(replacement           "winfo_screendepth ()")
;;; winfo_screendepth()
)

(lse-define-fill-in "winfo_screenheight()" 
  '(token)
  '(token                 "Balloon.winfo_screenheight")
  '(token                 "BaseWidget.winfo_screenheight")
  '(token                 "Button.winfo_screenheight")
  '(token                 "Buttonbox.winfo_screenheight")
  '(token                 "C_Entry.winfo_screenheight")
  '(token                 "C_Frame.winfo_screenheight")
  '(token                 "C_Listbox.winfo_screenheight")
  '(token                 "C_Menu.winfo_screenheight")
  '(token                 "C_Text.winfo_screenheight")
  '(token                 "Canvas.winfo_screenheight")
  '(token                 "Checkbutton.winfo_screenheight")
  '(token                 "Combo_Tuple.winfo_screenheight")
  '(token                 "Combo_Tuple_X.winfo_screenheight")
  '(token                 "Combobox.winfo_screenheight")
  '(token                 "Entry.winfo_screenheight")
  '(token                 "Entrybox.winfo_screenheight")
  '(token                 "Filename_Entry.winfo_screenheight")
  '(token                 "Frame.winfo_screenheight")
  '(token                 "H_Panedwindow.winfo_screenheight")
  '(token                 "H_Panedwindow.V_Separator.winfo_screenheight")
  '(token                 "H_Scrollable.winfo_screenheight")
  '(token                 "H_Separator.winfo_screenheight")
  '(token                 "H_Strut.winfo_screenheight")
  '(token                 "Label.winfo_screenheight")
  '(token                 "Listbox.winfo_screenheight")
  '(token                 "Listbox_Tuple.winfo_screenheight")
  '(token                 "Listdropentry.winfo_screenheight")
  '(token                 "Listdropspinner.winfo_screenheight")
  '(token                 "Listspinner.winfo_screenheight")
  '(token                 "Menu.winfo_screenheight")
  '(token                 "Menubutton.winfo_screenheight")
  '(token                 "Message.winfo_screenheight")
  '(token                 "Message_Window.winfo_screenheight")
  '(token                 "Misc.winfo_screenheight")
  '(token                 "Multicombobox.winfo_screenheight")
  '(token                 "Multicombobox_X.winfo_screenheight")
  '(token                 "Notebook.winfo_screenheight")
  '(token                 "Num_Spinner.winfo_screenheight")
  '(token                 "OptionMenu.winfo_screenheight")
  '(token                 "Progress_Gauge.winfo_screenheight")
  '(token                 "Progress_Gauge_T.winfo_screenheight")
  '(token                 "Radiobutton.winfo_screenheight")
  '(token                 "Scale.winfo_screenheight")
  '(token                 "Scrollbar.winfo_screenheight")
  '(token                 "Scrolled_Listbox.winfo_screenheight")
  '(token                 "Scrolled_Text.winfo_screenheight")
  '(token                 "Slide_Show.winfo_screenheight")
  '(token                 "Statuslabel.winfo_screenheight")
  '(token                 "Statuslabel.Label.winfo_screenheight")
  '(token                 "Statustext.winfo_screenheight")
  '(token                 "Statustext.Text.winfo_screenheight")
  '(token                 "Studbutton.winfo_screenheight")
  '(token                 "Tabbed_Notebook.winfo_screenheight")
  '(token                 "Text.winfo_screenheight")
  '(token                 "Tk.winfo_screenheight")
  '(token                 "Toplevel.winfo_screenheight")
  '(token                 "Tributton.winfo_screenheight")
  '(token                 "Up_Down_Button.winfo_screenheight")
  '(token                 "V_Panedwindow.winfo_screenheight")
  '(token                 "V_Panedwindow.H_Separator.winfo_screenheight")
  '(token                 "V_Scrollable.winfo_screenheight")
  '(token                 "V_Separator.winfo_screenheight")
  '(token                 "V_Strut.winfo_screenheight")
  '(token                 "Widget.winfo_screenheight")
  '(token                 "_C_Frame.winfo_screenheight")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_screenheight")
  '(token                 "_Panedwindow.winfo_screenheight")
  '(token                 "_Scrollable.winfo_screenheight")
  '(token                 "_Separator.winfo_screenheight")
  '(token                 "_Spinnerentry.winfo_screenheight")
  '(token                 "_Statusframe.winfo_screenheight")
  '(replacement           "winfo_screenheight ()")
;;; winfo_screenheight()
)

(lse-define-fill-in "winfo_screenmmheight()" 
  '(token)
  '(token                 "Balloon.winfo_screenmmheight")
  '(token                 "BaseWidget.winfo_screenmmheight")
  '(token                 "Button.winfo_screenmmheight")
  '(token                 "Buttonbox.winfo_screenmmheight")
  '(token                 "C_Entry.winfo_screenmmheight")
  '(token                 "C_Frame.winfo_screenmmheight")
  '(token                 "C_Listbox.winfo_screenmmheight")
  '(token                 "C_Menu.winfo_screenmmheight")
  '(token                 "C_Text.winfo_screenmmheight")
  '(token                 "Canvas.winfo_screenmmheight")
  '(token                 "Checkbutton.winfo_screenmmheight")
  '(token                 "Combo_Tuple.winfo_screenmmheight")
  '(token                 "Combo_Tuple_X.winfo_screenmmheight")
  '(token                 "Combobox.winfo_screenmmheight")
  '(token                 "Entry.winfo_screenmmheight")
  '(token                 "Entrybox.winfo_screenmmheight")
  '(token                 "Filename_Entry.winfo_screenmmheight")
  '(token                 "Frame.winfo_screenmmheight")
  '(token                 "H_Panedwindow.winfo_screenmmheight")
  '(token                 "H_Panedwindow.V_Separator.winfo_screenmmheight")
  '(token                 "H_Scrollable.winfo_screenmmheight")
  '(token                 "H_Separator.winfo_screenmmheight")
  '(token                 "H_Strut.winfo_screenmmheight")
  '(token                 "Label.winfo_screenmmheight")
  '(token                 "Listbox.winfo_screenmmheight")
  '(token                 "Listbox_Tuple.winfo_screenmmheight")
  '(token                 "Listdropentry.winfo_screenmmheight")
  '(token                 "Listdropspinner.winfo_screenmmheight")
  '(token                 "Listspinner.winfo_screenmmheight")
  '(token                 "Menu.winfo_screenmmheight")
  '(token                 "Menubutton.winfo_screenmmheight")
  '(token                 "Message.winfo_screenmmheight")
  '(token                 "Message_Window.winfo_screenmmheight")
  '(token                 "Misc.winfo_screenmmheight")
  '(token                 "Multicombobox.winfo_screenmmheight")
  '(token                 "Multicombobox_X.winfo_screenmmheight")
  '(token                 "Notebook.winfo_screenmmheight")
  '(token                 "Num_Spinner.winfo_screenmmheight")
  '(token                 "OptionMenu.winfo_screenmmheight")
  '(token                 "Progress_Gauge.winfo_screenmmheight")
  '(token                 "Progress_Gauge_T.winfo_screenmmheight")
  '(token                 "Radiobutton.winfo_screenmmheight")
  '(token                 "Scale.winfo_screenmmheight")
  '(token                 "Scrollbar.winfo_screenmmheight")
  '(token                 "Scrolled_Listbox.winfo_screenmmheight")
  '(token                 "Scrolled_Text.winfo_screenmmheight")
  '(token                 "Slide_Show.winfo_screenmmheight")
  '(token                 "Statuslabel.winfo_screenmmheight")
  '(token                 "Statuslabel.Label.winfo_screenmmheight")
  '(token                 "Statustext.winfo_screenmmheight")
  '(token                 "Statustext.Text.winfo_screenmmheight")
  '(token                 "Studbutton.winfo_screenmmheight")
  '(token                 "Tabbed_Notebook.winfo_screenmmheight")
  '(token                 "Text.winfo_screenmmheight")
  '(token                 "Tk.winfo_screenmmheight")
  '(token                 "Toplevel.winfo_screenmmheight")
  '(token                 "Tributton.winfo_screenmmheight")
  '(token                 "Up_Down_Button.winfo_screenmmheight")
  '(token                 "V_Panedwindow.winfo_screenmmheight")
  '(token                 "V_Panedwindow.H_Separator.winfo_screenmmheight")
  '(token                 "V_Scrollable.winfo_screenmmheight")
  '(token                 "V_Separator.winfo_screenmmheight")
  '(token                 "V_Strut.winfo_screenmmheight")
  '(token                 "Widget.winfo_screenmmheight")
  '(token                 "_C_Frame.winfo_screenmmheight")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_screenmmheight")
  '(token                 "_Panedwindow.winfo_screenmmheight")
  '(token                 "_Scrollable.winfo_screenmmheight")
  '(token                 "_Separator.winfo_screenmmheight")
  '(token                 "_Spinnerentry.winfo_screenmmheight")
  '(token                 "_Statusframe.winfo_screenmmheight")
  '(replacement           "winfo_screenmmheight ()")
;;; winfo_screenmmheight()
)

(lse-define-fill-in "winfo_screenmmwidth()" 
  '(token)
  '(token                 "Balloon.winfo_screenmmwidth")
  '(token                 "BaseWidget.winfo_screenmmwidth")
  '(token                 "Button.winfo_screenmmwidth")
  '(token                 "Buttonbox.winfo_screenmmwidth")
  '(token                 "C_Entry.winfo_screenmmwidth")
  '(token                 "C_Frame.winfo_screenmmwidth")
  '(token                 "C_Listbox.winfo_screenmmwidth")
  '(token                 "C_Menu.winfo_screenmmwidth")
  '(token                 "C_Text.winfo_screenmmwidth")
  '(token                 "Canvas.winfo_screenmmwidth")
  '(token                 "Checkbutton.winfo_screenmmwidth")
  '(token                 "Combo_Tuple.winfo_screenmmwidth")
  '(token                 "Combo_Tuple_X.winfo_screenmmwidth")
  '(token                 "Combobox.winfo_screenmmwidth")
  '(token                 "Entry.winfo_screenmmwidth")
  '(token                 "Entrybox.winfo_screenmmwidth")
  '(token                 "Filename_Entry.winfo_screenmmwidth")
  '(token                 "Frame.winfo_screenmmwidth")
  '(token                 "H_Panedwindow.winfo_screenmmwidth")
  '(token                 "H_Panedwindow.V_Separator.winfo_screenmmwidth")
  '(token                 "H_Scrollable.winfo_screenmmwidth")
  '(token                 "H_Separator.winfo_screenmmwidth")
  '(token                 "H_Strut.winfo_screenmmwidth")
  '(token                 "Label.winfo_screenmmwidth")
  '(token                 "Listbox.winfo_screenmmwidth")
  '(token                 "Listbox_Tuple.winfo_screenmmwidth")
  '(token                 "Listdropentry.winfo_screenmmwidth")
  '(token                 "Listdropspinner.winfo_screenmmwidth")
  '(token                 "Listspinner.winfo_screenmmwidth")
  '(token                 "Menu.winfo_screenmmwidth")
  '(token                 "Menubutton.winfo_screenmmwidth")
  '(token                 "Message.winfo_screenmmwidth")
  '(token                 "Message_Window.winfo_screenmmwidth")
  '(token                 "Misc.winfo_screenmmwidth")
  '(token                 "Multicombobox.winfo_screenmmwidth")
  '(token                 "Multicombobox_X.winfo_screenmmwidth")
  '(token                 "Notebook.winfo_screenmmwidth")
  '(token                 "Num_Spinner.winfo_screenmmwidth")
  '(token                 "OptionMenu.winfo_screenmmwidth")
  '(token                 "Progress_Gauge.winfo_screenmmwidth")
  '(token                 "Progress_Gauge_T.winfo_screenmmwidth")
  '(token                 "Radiobutton.winfo_screenmmwidth")
  '(token                 "Scale.winfo_screenmmwidth")
  '(token                 "Scrollbar.winfo_screenmmwidth")
  '(token                 "Scrolled_Listbox.winfo_screenmmwidth")
  '(token                 "Scrolled_Text.winfo_screenmmwidth")
  '(token                 "Slide_Show.winfo_screenmmwidth")
  '(token                 "Statuslabel.winfo_screenmmwidth")
  '(token                 "Statuslabel.Label.winfo_screenmmwidth")
  '(token                 "Statustext.winfo_screenmmwidth")
  '(token                 "Statustext.Text.winfo_screenmmwidth")
  '(token                 "Studbutton.winfo_screenmmwidth")
  '(token                 "Tabbed_Notebook.winfo_screenmmwidth")
  '(token                 "Text.winfo_screenmmwidth")
  '(token                 "Tk.winfo_screenmmwidth")
  '(token                 "Toplevel.winfo_screenmmwidth")
  '(token                 "Tributton.winfo_screenmmwidth")
  '(token                 "Up_Down_Button.winfo_screenmmwidth")
  '(token                 "V_Panedwindow.winfo_screenmmwidth")
  '(token                 "V_Panedwindow.H_Separator.winfo_screenmmwidth")
  '(token                 "V_Scrollable.winfo_screenmmwidth")
  '(token                 "V_Separator.winfo_screenmmwidth")
  '(token                 "V_Strut.winfo_screenmmwidth")
  '(token                 "Widget.winfo_screenmmwidth")
  '(token                 "_C_Frame.winfo_screenmmwidth")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_screenmmwidth")
  '(token                 "_Panedwindow.winfo_screenmmwidth")
  '(token                 "_Scrollable.winfo_screenmmwidth")
  '(token                 "_Separator.winfo_screenmmwidth")
  '(token                 "_Spinnerentry.winfo_screenmmwidth")
  '(token                 "_Statusframe.winfo_screenmmwidth")
  '(replacement           "winfo_screenmmwidth ()")
;;; winfo_screenmmwidth()
)

(lse-define-fill-in "winfo_screenvisual()" 
  '(token)
  '(token                 "Balloon.winfo_screenvisual")
  '(token                 "BaseWidget.winfo_screenvisual")
  '(token                 "Button.winfo_screenvisual")
  '(token                 "Buttonbox.winfo_screenvisual")
  '(token                 "C_Entry.winfo_screenvisual")
  '(token                 "C_Frame.winfo_screenvisual")
  '(token                 "C_Listbox.winfo_screenvisual")
  '(token                 "C_Menu.winfo_screenvisual")
  '(token                 "C_Text.winfo_screenvisual")
  '(token                 "Canvas.winfo_screenvisual")
  '(token                 "Checkbutton.winfo_screenvisual")
  '(token                 "Combo_Tuple.winfo_screenvisual")
  '(token                 "Combo_Tuple_X.winfo_screenvisual")
  '(token                 "Combobox.winfo_screenvisual")
  '(token                 "Entry.winfo_screenvisual")
  '(token                 "Entrybox.winfo_screenvisual")
  '(token                 "Filename_Entry.winfo_screenvisual")
  '(token                 "Frame.winfo_screenvisual")
  '(token                 "H_Panedwindow.winfo_screenvisual")
  '(token                 "H_Panedwindow.V_Separator.winfo_screenvisual")
  '(token                 "H_Scrollable.winfo_screenvisual")
  '(token                 "H_Separator.winfo_screenvisual")
  '(token                 "H_Strut.winfo_screenvisual")
  '(token                 "Label.winfo_screenvisual")
  '(token                 "Listbox.winfo_screenvisual")
  '(token                 "Listbox_Tuple.winfo_screenvisual")
  '(token                 "Listdropentry.winfo_screenvisual")
  '(token                 "Listdropspinner.winfo_screenvisual")
  '(token                 "Listspinner.winfo_screenvisual")
  '(token                 "Menu.winfo_screenvisual")
  '(token                 "Menubutton.winfo_screenvisual")
  '(token                 "Message.winfo_screenvisual")
  '(token                 "Message_Window.winfo_screenvisual")
  '(token                 "Misc.winfo_screenvisual")
  '(token                 "Multicombobox.winfo_screenvisual")
  '(token                 "Multicombobox_X.winfo_screenvisual")
  '(token                 "Notebook.winfo_screenvisual")
  '(token                 "Num_Spinner.winfo_screenvisual")
  '(token                 "OptionMenu.winfo_screenvisual")
  '(token                 "Progress_Gauge.winfo_screenvisual")
  '(token                 "Progress_Gauge_T.winfo_screenvisual")
  '(token                 "Radiobutton.winfo_screenvisual")
  '(token                 "Scale.winfo_screenvisual")
  '(token                 "Scrollbar.winfo_screenvisual")
  '(token                 "Scrolled_Listbox.winfo_screenvisual")
  '(token                 "Scrolled_Text.winfo_screenvisual")
  '(token                 "Slide_Show.winfo_screenvisual")
  '(token                 "Statuslabel.winfo_screenvisual")
  '(token                 "Statuslabel.Label.winfo_screenvisual")
  '(token                 "Statustext.winfo_screenvisual")
  '(token                 "Statustext.Text.winfo_screenvisual")
  '(token                 "Studbutton.winfo_screenvisual")
  '(token                 "Tabbed_Notebook.winfo_screenvisual")
  '(token                 "Text.winfo_screenvisual")
  '(token                 "Tk.winfo_screenvisual")
  '(token                 "Toplevel.winfo_screenvisual")
  '(token                 "Tributton.winfo_screenvisual")
  '(token                 "Up_Down_Button.winfo_screenvisual")
  '(token                 "V_Panedwindow.winfo_screenvisual")
  '(token                 "V_Panedwindow.H_Separator.winfo_screenvisual")
  '(token                 "V_Scrollable.winfo_screenvisual")
  '(token                 "V_Separator.winfo_screenvisual")
  '(token                 "V_Strut.winfo_screenvisual")
  '(token                 "Widget.winfo_screenvisual")
  '(token                 "_C_Frame.winfo_screenvisual")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_screenvisual")
  '(token                 "_Panedwindow.winfo_screenvisual")
  '(token                 "_Scrollable.winfo_screenvisual")
  '(token                 "_Separator.winfo_screenvisual")
  '(token                 "_Spinnerentry.winfo_screenvisual")
  '(token                 "_Statusframe.winfo_screenvisual")
  '(replacement           "winfo_screenvisual ()")
;;; winfo_screenvisual()
)

(lse-define-fill-in "winfo_screenwidth()" 
  '(token)
  '(token                 "Balloon.winfo_screenwidth")
  '(token                 "BaseWidget.winfo_screenwidth")
  '(token                 "Button.winfo_screenwidth")
  '(token                 "Buttonbox.winfo_screenwidth")
  '(token                 "C_Entry.winfo_screenwidth")
  '(token                 "C_Frame.winfo_screenwidth")
  '(token                 "C_Listbox.winfo_screenwidth")
  '(token                 "C_Menu.winfo_screenwidth")
  '(token                 "C_Text.winfo_screenwidth")
  '(token                 "Canvas.winfo_screenwidth")
  '(token                 "Checkbutton.winfo_screenwidth")
  '(token                 "Combo_Tuple.winfo_screenwidth")
  '(token                 "Combo_Tuple_X.winfo_screenwidth")
  '(token                 "Combobox.winfo_screenwidth")
  '(token                 "Entry.winfo_screenwidth")
  '(token                 "Entrybox.winfo_screenwidth")
  '(token                 "Filename_Entry.winfo_screenwidth")
  '(token                 "Frame.winfo_screenwidth")
  '(token                 "H_Panedwindow.winfo_screenwidth")
  '(token                 "H_Panedwindow.V_Separator.winfo_screenwidth")
  '(token                 "H_Scrollable.winfo_screenwidth")
  '(token                 "H_Separator.winfo_screenwidth")
  '(token                 "H_Strut.winfo_screenwidth")
  '(token                 "Label.winfo_screenwidth")
  '(token                 "Listbox.winfo_screenwidth")
  '(token                 "Listbox_Tuple.winfo_screenwidth")
  '(token                 "Listdropentry.winfo_screenwidth")
  '(token                 "Listdropspinner.winfo_screenwidth")
  '(token                 "Listspinner.winfo_screenwidth")
  '(token                 "Menu.winfo_screenwidth")
  '(token                 "Menubutton.winfo_screenwidth")
  '(token                 "Message.winfo_screenwidth")
  '(token                 "Message_Window.winfo_screenwidth")
  '(token                 "Misc.winfo_screenwidth")
  '(token                 "Multicombobox.winfo_screenwidth")
  '(token                 "Multicombobox_X.winfo_screenwidth")
  '(token                 "Notebook.winfo_screenwidth")
  '(token                 "Num_Spinner.winfo_screenwidth")
  '(token                 "OptionMenu.winfo_screenwidth")
  '(token                 "Progress_Gauge.winfo_screenwidth")
  '(token                 "Progress_Gauge_T.winfo_screenwidth")
  '(token                 "Radiobutton.winfo_screenwidth")
  '(token                 "Scale.winfo_screenwidth")
  '(token                 "Scrollbar.winfo_screenwidth")
  '(token                 "Scrolled_Listbox.winfo_screenwidth")
  '(token                 "Scrolled_Text.winfo_screenwidth")
  '(token                 "Slide_Show.winfo_screenwidth")
  '(token                 "Statuslabel.winfo_screenwidth")
  '(token                 "Statuslabel.Label.winfo_screenwidth")
  '(token                 "Statustext.winfo_screenwidth")
  '(token                 "Statustext.Text.winfo_screenwidth")
  '(token                 "Studbutton.winfo_screenwidth")
  '(token                 "Tabbed_Notebook.winfo_screenwidth")
  '(token                 "Text.winfo_screenwidth")
  '(token                 "Tk.winfo_screenwidth")
  '(token                 "Toplevel.winfo_screenwidth")
  '(token                 "Tributton.winfo_screenwidth")
  '(token                 "Up_Down_Button.winfo_screenwidth")
  '(token                 "V_Panedwindow.winfo_screenwidth")
  '(token                 "V_Panedwindow.H_Separator.winfo_screenwidth")
  '(token                 "V_Scrollable.winfo_screenwidth")
  '(token                 "V_Separator.winfo_screenwidth")
  '(token                 "V_Strut.winfo_screenwidth")
  '(token                 "Widget.winfo_screenwidth")
  '(token                 "_C_Frame.winfo_screenwidth")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_screenwidth")
  '(token                 "_Panedwindow.winfo_screenwidth")
  '(token                 "_Scrollable.winfo_screenwidth")
  '(token                 "_Separator.winfo_screenwidth")
  '(token                 "_Spinnerentry.winfo_screenwidth")
  '(token                 "_Statusframe.winfo_screenwidth")
  '(replacement           "winfo_screenwidth ()")
;;; winfo_screenwidth()
)

(lse-define-fill-in "winfo_server()" 
  '(token)
  '(token                 "Balloon.winfo_server")
  '(token                 "BaseWidget.winfo_server")
  '(token                 "Button.winfo_server")
  '(token                 "Buttonbox.winfo_server")
  '(token                 "C_Entry.winfo_server")
  '(token                 "C_Frame.winfo_server")
  '(token                 "C_Listbox.winfo_server")
  '(token                 "C_Menu.winfo_server")
  '(token                 "C_Text.winfo_server")
  '(token                 "Canvas.winfo_server")
  '(token                 "Checkbutton.winfo_server")
  '(token                 "Combo_Tuple.winfo_server")
  '(token                 "Combo_Tuple_X.winfo_server")
  '(token                 "Combobox.winfo_server")
  '(token                 "Entry.winfo_server")
  '(token                 "Entrybox.winfo_server")
  '(token                 "Filename_Entry.winfo_server")
  '(token                 "Frame.winfo_server")
  '(token                 "H_Panedwindow.winfo_server")
  '(token                 "H_Panedwindow.V_Separator.winfo_server")
  '(token                 "H_Scrollable.winfo_server")
  '(token                 "H_Separator.winfo_server")
  '(token                 "H_Strut.winfo_server")
  '(token                 "Label.winfo_server")
  '(token                 "Listbox.winfo_server")
  '(token                 "Listbox_Tuple.winfo_server")
  '(token                 "Listdropentry.winfo_server")
  '(token                 "Listdropspinner.winfo_server")
  '(token                 "Listspinner.winfo_server")
  '(token                 "Menu.winfo_server")
  '(token                 "Menubutton.winfo_server")
  '(token                 "Message.winfo_server")
  '(token                 "Message_Window.winfo_server")
  '(token                 "Misc.winfo_server")
  '(token                 "Multicombobox.winfo_server")
  '(token                 "Multicombobox_X.winfo_server")
  '(token                 "Notebook.winfo_server")
  '(token                 "Num_Spinner.winfo_server")
  '(token                 "OptionMenu.winfo_server")
  '(token                 "Progress_Gauge.winfo_server")
  '(token                 "Progress_Gauge_T.winfo_server")
  '(token                 "Radiobutton.winfo_server")
  '(token                 "Scale.winfo_server")
  '(token                 "Scrollbar.winfo_server")
  '(token                 "Scrolled_Listbox.winfo_server")
  '(token                 "Scrolled_Text.winfo_server")
  '(token                 "Slide_Show.winfo_server")
  '(token                 "Statuslabel.winfo_server")
  '(token                 "Statuslabel.Label.winfo_server")
  '(token                 "Statustext.winfo_server")
  '(token                 "Statustext.Text.winfo_server")
  '(token                 "Studbutton.winfo_server")
  '(token                 "Tabbed_Notebook.winfo_server")
  '(token                 "Text.winfo_server")
  '(token                 "Tk.winfo_server")
  '(token                 "Toplevel.winfo_server")
  '(token                 "Tributton.winfo_server")
  '(token                 "Up_Down_Button.winfo_server")
  '(token                 "V_Panedwindow.winfo_server")
  '(token                 "V_Panedwindow.H_Separator.winfo_server")
  '(token                 "V_Scrollable.winfo_server")
  '(token                 "V_Separator.winfo_server")
  '(token                 "V_Strut.winfo_server")
  '(token                 "Widget.winfo_server")
  '(token                 "_C_Frame.winfo_server")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_server")
  '(token                 "_Panedwindow.winfo_server")
  '(token                 "_Scrollable.winfo_server")
  '(token                 "_Separator.winfo_server")
  '(token                 "_Spinnerentry.winfo_server")
  '(token                 "_Statusframe.winfo_server")
  '(replacement           "winfo_server ()")
;;; winfo_server()
)

(lse-define-fill-in "winfo_toplevel()" 
  '(token)
  '(token                 "Balloon.winfo_toplevel")
  '(token                 "BaseWidget.winfo_toplevel")
  '(token                 "Button.winfo_toplevel")
  '(token                 "Buttonbox.winfo_toplevel")
  '(token                 "C_Entry.winfo_toplevel")
  '(token                 "C_Frame.winfo_toplevel")
  '(token                 "C_Listbox.winfo_toplevel")
  '(token                 "C_Menu.winfo_toplevel")
  '(token                 "C_Text.winfo_toplevel")
  '(token                 "Canvas.winfo_toplevel")
  '(token                 "Checkbutton.winfo_toplevel")
  '(token                 "Combo_Tuple.winfo_toplevel")
  '(token                 "Combo_Tuple_X.winfo_toplevel")
  '(token                 "Combobox.winfo_toplevel")
  '(token                 "Entry.winfo_toplevel")
  '(token                 "Entrybox.winfo_toplevel")
  '(token                 "Filename_Entry.winfo_toplevel")
  '(token                 "Frame.winfo_toplevel")
  '(token                 "H_Panedwindow.winfo_toplevel")
  '(token                 "H_Panedwindow.V_Separator.winfo_toplevel")
  '(token                 "H_Scrollable.winfo_toplevel")
  '(token                 "H_Separator.winfo_toplevel")
  '(token                 "H_Strut.winfo_toplevel")
  '(token                 "Label.winfo_toplevel")
  '(token                 "Listbox.winfo_toplevel")
  '(token                 "Listbox_Tuple.winfo_toplevel")
  '(token                 "Listdropentry.winfo_toplevel")
  '(token                 "Listdropspinner.winfo_toplevel")
  '(token                 "Listspinner.winfo_toplevel")
  '(token                 "Menu.winfo_toplevel")
  '(token                 "Menubutton.winfo_toplevel")
  '(token                 "Message.winfo_toplevel")
  '(token                 "Message_Window.winfo_toplevel")
  '(token                 "Misc.winfo_toplevel")
  '(token                 "Multicombobox.winfo_toplevel")
  '(token                 "Multicombobox_X.winfo_toplevel")
  '(token                 "Notebook.winfo_toplevel")
  '(token                 "Num_Spinner.winfo_toplevel")
  '(token                 "OptionMenu.winfo_toplevel")
  '(token                 "Progress_Gauge.winfo_toplevel")
  '(token                 "Progress_Gauge_T.winfo_toplevel")
  '(token                 "Radiobutton.winfo_toplevel")
  '(token                 "Scale.winfo_toplevel")
  '(token                 "Scrollbar.winfo_toplevel")
  '(token                 "Scrolled_Listbox.winfo_toplevel")
  '(token                 "Scrolled_Text.winfo_toplevel")
  '(token                 "Slide_Show.winfo_toplevel")
  '(token                 "Statuslabel.winfo_toplevel")
  '(token                 "Statuslabel.Label.winfo_toplevel")
  '(token                 "Statustext.winfo_toplevel")
  '(token                 "Statustext.Text.winfo_toplevel")
  '(token                 "Studbutton.winfo_toplevel")
  '(token                 "Tabbed_Notebook.winfo_toplevel")
  '(token                 "Text.winfo_toplevel")
  '(token                 "Tk.winfo_toplevel")
  '(token                 "Toplevel.winfo_toplevel")
  '(token                 "Tributton.winfo_toplevel")
  '(token                 "Up_Down_Button.winfo_toplevel")
  '(token                 "V_Panedwindow.winfo_toplevel")
  '(token                 "V_Panedwindow.H_Separator.winfo_toplevel")
  '(token                 "V_Scrollable.winfo_toplevel")
  '(token                 "V_Separator.winfo_toplevel")
  '(token                 "V_Strut.winfo_toplevel")
  '(token                 "Widget.winfo_toplevel")
  '(token                 "_C_Frame.winfo_toplevel")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_toplevel")
  '(token                 "_Panedwindow.winfo_toplevel")
  '(token                 "_Scrollable.winfo_toplevel")
  '(token                 "_Separator.winfo_toplevel")
  '(token                 "_Spinnerentry.winfo_toplevel")
  '(token                 "_Statusframe.winfo_toplevel")
  '(replacement           "winfo_toplevel ()")
;;; winfo_toplevel()
)

(lse-define-fill-in "winfo_viewable()" 
  '(token)
  '(token                 "Balloon.winfo_viewable")
  '(token                 "BaseWidget.winfo_viewable")
  '(token                 "Button.winfo_viewable")
  '(token                 "Buttonbox.winfo_viewable")
  '(token                 "C_Entry.winfo_viewable")
  '(token                 "C_Frame.winfo_viewable")
  '(token                 "C_Listbox.winfo_viewable")
  '(token                 "C_Menu.winfo_viewable")
  '(token                 "C_Text.winfo_viewable")
  '(token                 "Canvas.winfo_viewable")
  '(token                 "Checkbutton.winfo_viewable")
  '(token                 "Combo_Tuple.winfo_viewable")
  '(token                 "Combo_Tuple_X.winfo_viewable")
  '(token                 "Combobox.winfo_viewable")
  '(token                 "Entry.winfo_viewable")
  '(token                 "Entrybox.winfo_viewable")
  '(token                 "Filename_Entry.winfo_viewable")
  '(token                 "Frame.winfo_viewable")
  '(token                 "H_Panedwindow.winfo_viewable")
  '(token                 "H_Panedwindow.V_Separator.winfo_viewable")
  '(token                 "H_Scrollable.winfo_viewable")
  '(token                 "H_Separator.winfo_viewable")
  '(token                 "H_Strut.winfo_viewable")
  '(token                 "Label.winfo_viewable")
  '(token                 "Listbox.winfo_viewable")
  '(token                 "Listbox_Tuple.winfo_viewable")
  '(token                 "Listdropentry.winfo_viewable")
  '(token                 "Listdropspinner.winfo_viewable")
  '(token                 "Listspinner.winfo_viewable")
  '(token                 "Menu.winfo_viewable")
  '(token                 "Menubutton.winfo_viewable")
  '(token                 "Message.winfo_viewable")
  '(token                 "Message_Window.winfo_viewable")
  '(token                 "Misc.winfo_viewable")
  '(token                 "Multicombobox.winfo_viewable")
  '(token                 "Multicombobox_X.winfo_viewable")
  '(token                 "Notebook.winfo_viewable")
  '(token                 "Num_Spinner.winfo_viewable")
  '(token                 "OptionMenu.winfo_viewable")
  '(token                 "Progress_Gauge.winfo_viewable")
  '(token                 "Progress_Gauge_T.winfo_viewable")
  '(token                 "Radiobutton.winfo_viewable")
  '(token                 "Scale.winfo_viewable")
  '(token                 "Scrollbar.winfo_viewable")
  '(token                 "Scrolled_Listbox.winfo_viewable")
  '(token                 "Scrolled_Text.winfo_viewable")
  '(token                 "Slide_Show.winfo_viewable")
  '(token                 "Statuslabel.winfo_viewable")
  '(token                 "Statuslabel.Label.winfo_viewable")
  '(token                 "Statustext.winfo_viewable")
  '(token                 "Statustext.Text.winfo_viewable")
  '(token                 "Studbutton.winfo_viewable")
  '(token                 "Tabbed_Notebook.winfo_viewable")
  '(token                 "Text.winfo_viewable")
  '(token                 "Tk.winfo_viewable")
  '(token                 "Toplevel.winfo_viewable")
  '(token                 "Tributton.winfo_viewable")
  '(token                 "Up_Down_Button.winfo_viewable")
  '(token                 "V_Panedwindow.winfo_viewable")
  '(token                 "V_Panedwindow.H_Separator.winfo_viewable")
  '(token                 "V_Scrollable.winfo_viewable")
  '(token                 "V_Separator.winfo_viewable")
  '(token                 "V_Strut.winfo_viewable")
  '(token                 "Widget.winfo_viewable")
  '(token                 "_C_Frame.winfo_viewable")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_viewable")
  '(token                 "_Panedwindow.winfo_viewable")
  '(token                 "_Scrollable.winfo_viewable")
  '(token                 "_Separator.winfo_viewable")
  '(token                 "_Spinnerentry.winfo_viewable")
  '(token                 "_Statusframe.winfo_viewable")
  '(replacement           "winfo_viewable ()")
;;; winfo_viewable()
)

(lse-define-fill-in "winfo_visual()" 
  '(token)
  '(token                 "Balloon.winfo_visual")
  '(token                 "BaseWidget.winfo_visual")
  '(token                 "Button.winfo_visual")
  '(token                 "Buttonbox.winfo_visual")
  '(token                 "C_Entry.winfo_visual")
  '(token                 "C_Frame.winfo_visual")
  '(token                 "C_Listbox.winfo_visual")
  '(token                 "C_Menu.winfo_visual")
  '(token                 "C_Text.winfo_visual")
  '(token                 "Canvas.winfo_visual")
  '(token                 "Checkbutton.winfo_visual")
  '(token                 "Combo_Tuple.winfo_visual")
  '(token                 "Combo_Tuple_X.winfo_visual")
  '(token                 "Combobox.winfo_visual")
  '(token                 "Entry.winfo_visual")
  '(token                 "Entrybox.winfo_visual")
  '(token                 "Filename_Entry.winfo_visual")
  '(token                 "Frame.winfo_visual")
  '(token                 "H_Panedwindow.winfo_visual")
  '(token                 "H_Panedwindow.V_Separator.winfo_visual")
  '(token                 "H_Scrollable.winfo_visual")
  '(token                 "H_Separator.winfo_visual")
  '(token                 "H_Strut.winfo_visual")
  '(token                 "Label.winfo_visual")
  '(token                 "Listbox.winfo_visual")
  '(token                 "Listbox_Tuple.winfo_visual")
  '(token                 "Listdropentry.winfo_visual")
  '(token                 "Listdropspinner.winfo_visual")
  '(token                 "Listspinner.winfo_visual")
  '(token                 "Menu.winfo_visual")
  '(token                 "Menubutton.winfo_visual")
  '(token                 "Message.winfo_visual")
  '(token                 "Message_Window.winfo_visual")
  '(token                 "Misc.winfo_visual")
  '(token                 "Multicombobox.winfo_visual")
  '(token                 "Multicombobox_X.winfo_visual")
  '(token                 "Notebook.winfo_visual")
  '(token                 "Num_Spinner.winfo_visual")
  '(token                 "OptionMenu.winfo_visual")
  '(token                 "Progress_Gauge.winfo_visual")
  '(token                 "Progress_Gauge_T.winfo_visual")
  '(token                 "Radiobutton.winfo_visual")
  '(token                 "Scale.winfo_visual")
  '(token                 "Scrollbar.winfo_visual")
  '(token                 "Scrolled_Listbox.winfo_visual")
  '(token                 "Scrolled_Text.winfo_visual")
  '(token                 "Slide_Show.winfo_visual")
  '(token                 "Statuslabel.winfo_visual")
  '(token                 "Statuslabel.Label.winfo_visual")
  '(token                 "Statustext.winfo_visual")
  '(token                 "Statustext.Text.winfo_visual")
  '(token                 "Studbutton.winfo_visual")
  '(token                 "Tabbed_Notebook.winfo_visual")
  '(token                 "Text.winfo_visual")
  '(token                 "Tk.winfo_visual")
  '(token                 "Toplevel.winfo_visual")
  '(token                 "Tributton.winfo_visual")
  '(token                 "Up_Down_Button.winfo_visual")
  '(token                 "V_Panedwindow.winfo_visual")
  '(token                 "V_Panedwindow.H_Separator.winfo_visual")
  '(token                 "V_Scrollable.winfo_visual")
  '(token                 "V_Separator.winfo_visual")
  '(token                 "V_Strut.winfo_visual")
  '(token                 "Widget.winfo_visual")
  '(token                 "_C_Frame.winfo_visual")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_visual")
  '(token                 "_Panedwindow.winfo_visual")
  '(token                 "_Scrollable.winfo_visual")
  '(token                 "_Separator.winfo_visual")
  '(token                 "_Spinnerentry.winfo_visual")
  '(token                 "_Statusframe.winfo_visual")
  '(replacement           "winfo_visual ()")
;;; winfo_visual()
)

(lse-define-fill-in "winfo_visualid()" 
  '(token)
  '(token                 "Balloon.winfo_visualid")
  '(token                 "BaseWidget.winfo_visualid")
  '(token                 "Button.winfo_visualid")
  '(token                 "Buttonbox.winfo_visualid")
  '(token                 "C_Entry.winfo_visualid")
  '(token                 "C_Frame.winfo_visualid")
  '(token                 "C_Listbox.winfo_visualid")
  '(token                 "C_Menu.winfo_visualid")
  '(token                 "C_Text.winfo_visualid")
  '(token                 "Canvas.winfo_visualid")
  '(token                 "Checkbutton.winfo_visualid")
  '(token                 "Combo_Tuple.winfo_visualid")
  '(token                 "Combo_Tuple_X.winfo_visualid")
  '(token                 "Combobox.winfo_visualid")
  '(token                 "Entry.winfo_visualid")
  '(token                 "Entrybox.winfo_visualid")
  '(token                 "Filename_Entry.winfo_visualid")
  '(token                 "Frame.winfo_visualid")
  '(token                 "H_Panedwindow.winfo_visualid")
  '(token                 "H_Panedwindow.V_Separator.winfo_visualid")
  '(token                 "H_Scrollable.winfo_visualid")
  '(token                 "H_Separator.winfo_visualid")
  '(token                 "H_Strut.winfo_visualid")
  '(token                 "Label.winfo_visualid")
  '(token                 "Listbox.winfo_visualid")
  '(token                 "Listbox_Tuple.winfo_visualid")
  '(token                 "Listdropentry.winfo_visualid")
  '(token                 "Listdropspinner.winfo_visualid")
  '(token                 "Listspinner.winfo_visualid")
  '(token                 "Menu.winfo_visualid")
  '(token                 "Menubutton.winfo_visualid")
  '(token                 "Message.winfo_visualid")
  '(token                 "Message_Window.winfo_visualid")
  '(token                 "Misc.winfo_visualid")
  '(token                 "Multicombobox.winfo_visualid")
  '(token                 "Multicombobox_X.winfo_visualid")
  '(token                 "Notebook.winfo_visualid")
  '(token                 "Num_Spinner.winfo_visualid")
  '(token                 "OptionMenu.winfo_visualid")
  '(token                 "Progress_Gauge.winfo_visualid")
  '(token                 "Progress_Gauge_T.winfo_visualid")
  '(token                 "Radiobutton.winfo_visualid")
  '(token                 "Scale.winfo_visualid")
  '(token                 "Scrollbar.winfo_visualid")
  '(token                 "Scrolled_Listbox.winfo_visualid")
  '(token                 "Scrolled_Text.winfo_visualid")
  '(token                 "Slide_Show.winfo_visualid")
  '(token                 "Statuslabel.winfo_visualid")
  '(token                 "Statuslabel.Label.winfo_visualid")
  '(token                 "Statustext.winfo_visualid")
  '(token                 "Statustext.Text.winfo_visualid")
  '(token                 "Studbutton.winfo_visualid")
  '(token                 "Tabbed_Notebook.winfo_visualid")
  '(token                 "Text.winfo_visualid")
  '(token                 "Tk.winfo_visualid")
  '(token                 "Toplevel.winfo_visualid")
  '(token                 "Tributton.winfo_visualid")
  '(token                 "Up_Down_Button.winfo_visualid")
  '(token                 "V_Panedwindow.winfo_visualid")
  '(token                 "V_Panedwindow.H_Separator.winfo_visualid")
  '(token                 "V_Scrollable.winfo_visualid")
  '(token                 "V_Separator.winfo_visualid")
  '(token                 "V_Strut.winfo_visualid")
  '(token                 "Widget.winfo_visualid")
  '(token                 "_C_Frame.winfo_visualid")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_visualid")
  '(token                 "_Panedwindow.winfo_visualid")
  '(token                 "_Scrollable.winfo_visualid")
  '(token                 "_Separator.winfo_visualid")
  '(token                 "_Spinnerentry.winfo_visualid")
  '(token                 "_Statusframe.winfo_visualid")
  '(replacement           "winfo_visualid ()")
;;; winfo_visualid()
)

(lse-define-fill-in "Misc.winfo_visualsavailable:includeids" 
  '(description           "Argument 1 of Misc.winfo_visualsavailable (default = 0)")
  '(leading               ",")
;;; Misc.winfo_visualsavailable:includeids
)

(lse-define-fill-in "winfo_visualsavailable(includeids)" 
  '(token)
  '(token                 "Balloon.winfo_visualsavailable")
  '(token                 "BaseWidget.winfo_visualsavailable")
  '(token                 "Button.winfo_visualsavailable")
  '(token                 "Buttonbox.winfo_visualsavailable")
  '(token                 "C_Entry.winfo_visualsavailable")
  '(token                 "C_Frame.winfo_visualsavailable")
  '(token                 "C_Listbox.winfo_visualsavailable")
  '(token                 "C_Menu.winfo_visualsavailable")
  '(token                 "C_Text.winfo_visualsavailable")
  '(token                 "Canvas.winfo_visualsavailable")
  '(token                 "Checkbutton.winfo_visualsavailable")
  '(token                 "Combo_Tuple.winfo_visualsavailable")
  '(token                 "Combo_Tuple_X.winfo_visualsavailable")
  '(token                 "Combobox.winfo_visualsavailable")
  '(token                 "Entry.winfo_visualsavailable")
  '(token                 "Entrybox.winfo_visualsavailable")
  '(token                 "Filename_Entry.winfo_visualsavailable")
  '(token                 "Frame.winfo_visualsavailable")
  '(token                 "H_Panedwindow.winfo_visualsavailable")
  '(token                 "H_Panedwindow.V_Separator.winfo_visualsavailable")
  '(token                 "H_Scrollable.winfo_visualsavailable")
  '(token                 "H_Separator.winfo_visualsavailable")
  '(token                 "H_Strut.winfo_visualsavailable")
  '(token                 "Label.winfo_visualsavailable")
  '(token                 "Listbox.winfo_visualsavailable")
  '(token                 "Listbox_Tuple.winfo_visualsavailable")
  '(token                 "Listdropentry.winfo_visualsavailable")
  '(token                 "Listdropspinner.winfo_visualsavailable")
  '(token                 "Listspinner.winfo_visualsavailable")
  '(token                 "Menu.winfo_visualsavailable")
  '(token                 "Menubutton.winfo_visualsavailable")
  '(token                 "Message.winfo_visualsavailable")
  '(token                 "Message_Window.winfo_visualsavailable")
  '(token                 "Misc.winfo_visualsavailable")
  '(token                 "Multicombobox.winfo_visualsavailable")
  '(token                 "Multicombobox_X.winfo_visualsavailable")
  '(token                 "Notebook.winfo_visualsavailable")
  '(token                 "Num_Spinner.winfo_visualsavailable")
  '(token                 "OptionMenu.winfo_visualsavailable")
  '(token                 "Progress_Gauge.winfo_visualsavailable")
  '(token                 "Progress_Gauge_T.winfo_visualsavailable")
  '(token                 "Radiobutton.winfo_visualsavailable")
  '(token                 "Scale.winfo_visualsavailable")
  '(token                 "Scrollbar.winfo_visualsavailable")
  '(token                 "Scrolled_Listbox.winfo_visualsavailable")
  '(token                 "Scrolled_Text.winfo_visualsavailable")
  '(token                 "Slide_Show.winfo_visualsavailable")
  '(token                 "Statuslabel.winfo_visualsavailable")
  '(token                 "Statuslabel.Label.winfo_visualsavailable")
  '(token                 "Statustext.winfo_visualsavailable")
  '(token                 "Statustext.Text.winfo_visualsavailable")
  '(token                 "Studbutton.winfo_visualsavailable")
  '(token                 "Tabbed_Notebook.winfo_visualsavailable")
  '(token                 "Text.winfo_visualsavailable")
  '(token                 "Tk.winfo_visualsavailable")
  '(token                 "Toplevel.winfo_visualsavailable")
  '(token                 "Tributton.winfo_visualsavailable")
  '(token                 "Up_Down_Button.winfo_visualsavailable")
  '(token                 "V_Panedwindow.winfo_visualsavailable")
  '(token                 "V_Panedwindow.H_Separator.winfo_visualsavailable")
  '(token                 "V_Scrollable.winfo_visualsavailable")
  '(token                 "V_Separator.winfo_visualsavailable")
  '(token                 "V_Strut.winfo_visualsavailable")
  '(token                 "Widget.winfo_visualsavailable")
  '(token                 "_C_Frame.winfo_visualsavailable")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_visualsavailable")
  '(token                 "_Panedwindow.winfo_visualsavailable")
  '(token                 "_Scrollable.winfo_visualsavailable")
  '(token                 "_Separator.winfo_visualsavailable")
  '(token                 "_Spinnerentry.winfo_visualsavailable")
  '(token                 "_Statusframe.winfo_visualsavailable")
  '(replacement           "winfo_visualsavailable (««Misc.winfo_visualsavailable:includeids»»)")
;;; winfo_visualsavailable(includeids)
)

(lse-define-fill-in "winfo_vrootheight()" 
  '(token)
  '(token                 "Balloon.winfo_vrootheight")
  '(token                 "BaseWidget.winfo_vrootheight")
  '(token                 "Button.winfo_vrootheight")
  '(token                 "Buttonbox.winfo_vrootheight")
  '(token                 "C_Entry.winfo_vrootheight")
  '(token                 "C_Frame.winfo_vrootheight")
  '(token                 "C_Listbox.winfo_vrootheight")
  '(token                 "C_Menu.winfo_vrootheight")
  '(token                 "C_Text.winfo_vrootheight")
  '(token                 "Canvas.winfo_vrootheight")
  '(token                 "Checkbutton.winfo_vrootheight")
  '(token                 "Combo_Tuple.winfo_vrootheight")
  '(token                 "Combo_Tuple_X.winfo_vrootheight")
  '(token                 "Combobox.winfo_vrootheight")
  '(token                 "Entry.winfo_vrootheight")
  '(token                 "Entrybox.winfo_vrootheight")
  '(token                 "Filename_Entry.winfo_vrootheight")
  '(token                 "Frame.winfo_vrootheight")
  '(token                 "H_Panedwindow.winfo_vrootheight")
  '(token                 "H_Panedwindow.V_Separator.winfo_vrootheight")
  '(token                 "H_Scrollable.winfo_vrootheight")
  '(token                 "H_Separator.winfo_vrootheight")
  '(token                 "H_Strut.winfo_vrootheight")
  '(token                 "Label.winfo_vrootheight")
  '(token                 "Listbox.winfo_vrootheight")
  '(token                 "Listbox_Tuple.winfo_vrootheight")
  '(token                 "Listdropentry.winfo_vrootheight")
  '(token                 "Listdropspinner.winfo_vrootheight")
  '(token                 "Listspinner.winfo_vrootheight")
  '(token                 "Menu.winfo_vrootheight")
  '(token                 "Menubutton.winfo_vrootheight")
  '(token                 "Message.winfo_vrootheight")
  '(token                 "Message_Window.winfo_vrootheight")
  '(token                 "Misc.winfo_vrootheight")
  '(token                 "Multicombobox.winfo_vrootheight")
  '(token                 "Multicombobox_X.winfo_vrootheight")
  '(token                 "Notebook.winfo_vrootheight")
  '(token                 "Num_Spinner.winfo_vrootheight")
  '(token                 "OptionMenu.winfo_vrootheight")
  '(token                 "Progress_Gauge.winfo_vrootheight")
  '(token                 "Progress_Gauge_T.winfo_vrootheight")
  '(token                 "Radiobutton.winfo_vrootheight")
  '(token                 "Scale.winfo_vrootheight")
  '(token                 "Scrollbar.winfo_vrootheight")
  '(token                 "Scrolled_Listbox.winfo_vrootheight")
  '(token                 "Scrolled_Text.winfo_vrootheight")
  '(token                 "Slide_Show.winfo_vrootheight")
  '(token                 "Statuslabel.winfo_vrootheight")
  '(token                 "Statuslabel.Label.winfo_vrootheight")
  '(token                 "Statustext.winfo_vrootheight")
  '(token                 "Statustext.Text.winfo_vrootheight")
  '(token                 "Studbutton.winfo_vrootheight")
  '(token                 "Tabbed_Notebook.winfo_vrootheight")
  '(token                 "Text.winfo_vrootheight")
  '(token                 "Tk.winfo_vrootheight")
  '(token                 "Toplevel.winfo_vrootheight")
  '(token                 "Tributton.winfo_vrootheight")
  '(token                 "Up_Down_Button.winfo_vrootheight")
  '(token                 "V_Panedwindow.winfo_vrootheight")
  '(token                 "V_Panedwindow.H_Separator.winfo_vrootheight")
  '(token                 "V_Scrollable.winfo_vrootheight")
  '(token                 "V_Separator.winfo_vrootheight")
  '(token                 "V_Strut.winfo_vrootheight")
  '(token                 "Widget.winfo_vrootheight")
  '(token                 "_C_Frame.winfo_vrootheight")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_vrootheight")
  '(token                 "_Panedwindow.winfo_vrootheight")
  '(token                 "_Scrollable.winfo_vrootheight")
  '(token                 "_Separator.winfo_vrootheight")
  '(token                 "_Spinnerentry.winfo_vrootheight")
  '(token                 "_Statusframe.winfo_vrootheight")
  '(replacement           "winfo_vrootheight ()")
;;; winfo_vrootheight()
)

(lse-define-fill-in "winfo_vrootwidth()" 
  '(token)
  '(token                 "Balloon.winfo_vrootwidth")
  '(token                 "BaseWidget.winfo_vrootwidth")
  '(token                 "Button.winfo_vrootwidth")
  '(token                 "Buttonbox.winfo_vrootwidth")
  '(token                 "C_Entry.winfo_vrootwidth")
  '(token                 "C_Frame.winfo_vrootwidth")
  '(token                 "C_Listbox.winfo_vrootwidth")
  '(token                 "C_Menu.winfo_vrootwidth")
  '(token                 "C_Text.winfo_vrootwidth")
  '(token                 "Canvas.winfo_vrootwidth")
  '(token                 "Checkbutton.winfo_vrootwidth")
  '(token                 "Combo_Tuple.winfo_vrootwidth")
  '(token                 "Combo_Tuple_X.winfo_vrootwidth")
  '(token                 "Combobox.winfo_vrootwidth")
  '(token                 "Entry.winfo_vrootwidth")
  '(token                 "Entrybox.winfo_vrootwidth")
  '(token                 "Filename_Entry.winfo_vrootwidth")
  '(token                 "Frame.winfo_vrootwidth")
  '(token                 "H_Panedwindow.winfo_vrootwidth")
  '(token                 "H_Panedwindow.V_Separator.winfo_vrootwidth")
  '(token                 "H_Scrollable.winfo_vrootwidth")
  '(token                 "H_Separator.winfo_vrootwidth")
  '(token                 "H_Strut.winfo_vrootwidth")
  '(token                 "Label.winfo_vrootwidth")
  '(token                 "Listbox.winfo_vrootwidth")
  '(token                 "Listbox_Tuple.winfo_vrootwidth")
  '(token                 "Listdropentry.winfo_vrootwidth")
  '(token                 "Listdropspinner.winfo_vrootwidth")
  '(token                 "Listspinner.winfo_vrootwidth")
  '(token                 "Menu.winfo_vrootwidth")
  '(token                 "Menubutton.winfo_vrootwidth")
  '(token                 "Message.winfo_vrootwidth")
  '(token                 "Message_Window.winfo_vrootwidth")
  '(token                 "Misc.winfo_vrootwidth")
  '(token                 "Multicombobox.winfo_vrootwidth")
  '(token                 "Multicombobox_X.winfo_vrootwidth")
  '(token                 "Notebook.winfo_vrootwidth")
  '(token                 "Num_Spinner.winfo_vrootwidth")
  '(token                 "OptionMenu.winfo_vrootwidth")
  '(token                 "Progress_Gauge.winfo_vrootwidth")
  '(token                 "Progress_Gauge_T.winfo_vrootwidth")
  '(token                 "Radiobutton.winfo_vrootwidth")
  '(token                 "Scale.winfo_vrootwidth")
  '(token                 "Scrollbar.winfo_vrootwidth")
  '(token                 "Scrolled_Listbox.winfo_vrootwidth")
  '(token                 "Scrolled_Text.winfo_vrootwidth")
  '(token                 "Slide_Show.winfo_vrootwidth")
  '(token                 "Statuslabel.winfo_vrootwidth")
  '(token                 "Statuslabel.Label.winfo_vrootwidth")
  '(token                 "Statustext.winfo_vrootwidth")
  '(token                 "Statustext.Text.winfo_vrootwidth")
  '(token                 "Studbutton.winfo_vrootwidth")
  '(token                 "Tabbed_Notebook.winfo_vrootwidth")
  '(token                 "Text.winfo_vrootwidth")
  '(token                 "Tk.winfo_vrootwidth")
  '(token                 "Toplevel.winfo_vrootwidth")
  '(token                 "Tributton.winfo_vrootwidth")
  '(token                 "Up_Down_Button.winfo_vrootwidth")
  '(token                 "V_Panedwindow.winfo_vrootwidth")
  '(token                 "V_Panedwindow.H_Separator.winfo_vrootwidth")
  '(token                 "V_Scrollable.winfo_vrootwidth")
  '(token                 "V_Separator.winfo_vrootwidth")
  '(token                 "V_Strut.winfo_vrootwidth")
  '(token                 "Widget.winfo_vrootwidth")
  '(token                 "_C_Frame.winfo_vrootwidth")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_vrootwidth")
  '(token                 "_Panedwindow.winfo_vrootwidth")
  '(token                 "_Scrollable.winfo_vrootwidth")
  '(token                 "_Separator.winfo_vrootwidth")
  '(token                 "_Spinnerentry.winfo_vrootwidth")
  '(token                 "_Statusframe.winfo_vrootwidth")
  '(replacement           "winfo_vrootwidth ()")
;;; winfo_vrootwidth()
)

(lse-define-fill-in "winfo_vrootx()" 
  '(token)
  '(token                 "Balloon.winfo_vrootx")
  '(token                 "BaseWidget.winfo_vrootx")
  '(token                 "Button.winfo_vrootx")
  '(token                 "Buttonbox.winfo_vrootx")
  '(token                 "C_Entry.winfo_vrootx")
  '(token                 "C_Frame.winfo_vrootx")
  '(token                 "C_Listbox.winfo_vrootx")
  '(token                 "C_Menu.winfo_vrootx")
  '(token                 "C_Text.winfo_vrootx")
  '(token                 "Canvas.winfo_vrootx")
  '(token                 "Checkbutton.winfo_vrootx")
  '(token                 "Combo_Tuple.winfo_vrootx")
  '(token                 "Combo_Tuple_X.winfo_vrootx")
  '(token                 "Combobox.winfo_vrootx")
  '(token                 "Entry.winfo_vrootx")
  '(token                 "Entrybox.winfo_vrootx")
  '(token                 "Filename_Entry.winfo_vrootx")
  '(token                 "Frame.winfo_vrootx")
  '(token                 "H_Panedwindow.winfo_vrootx")
  '(token                 "H_Panedwindow.V_Separator.winfo_vrootx")
  '(token                 "H_Scrollable.winfo_vrootx")
  '(token                 "H_Separator.winfo_vrootx")
  '(token                 "H_Strut.winfo_vrootx")
  '(token                 "Label.winfo_vrootx")
  '(token                 "Listbox.winfo_vrootx")
  '(token                 "Listbox_Tuple.winfo_vrootx")
  '(token                 "Listdropentry.winfo_vrootx")
  '(token                 "Listdropspinner.winfo_vrootx")
  '(token                 "Listspinner.winfo_vrootx")
  '(token                 "Menu.winfo_vrootx")
  '(token                 "Menubutton.winfo_vrootx")
  '(token                 "Message.winfo_vrootx")
  '(token                 "Message_Window.winfo_vrootx")
  '(token                 "Misc.winfo_vrootx")
  '(token                 "Multicombobox.winfo_vrootx")
  '(token                 "Multicombobox_X.winfo_vrootx")
  '(token                 "Notebook.winfo_vrootx")
  '(token                 "Num_Spinner.winfo_vrootx")
  '(token                 "OptionMenu.winfo_vrootx")
  '(token                 "Progress_Gauge.winfo_vrootx")
  '(token                 "Progress_Gauge_T.winfo_vrootx")
  '(token                 "Radiobutton.winfo_vrootx")
  '(token                 "Scale.winfo_vrootx")
  '(token                 "Scrollbar.winfo_vrootx")
  '(token                 "Scrolled_Listbox.winfo_vrootx")
  '(token                 "Scrolled_Text.winfo_vrootx")
  '(token                 "Slide_Show.winfo_vrootx")
  '(token                 "Statuslabel.winfo_vrootx")
  '(token                 "Statuslabel.Label.winfo_vrootx")
  '(token                 "Statustext.winfo_vrootx")
  '(token                 "Statustext.Text.winfo_vrootx")
  '(token                 "Studbutton.winfo_vrootx")
  '(token                 "Tabbed_Notebook.winfo_vrootx")
  '(token                 "Text.winfo_vrootx")
  '(token                 "Tk.winfo_vrootx")
  '(token                 "Toplevel.winfo_vrootx")
  '(token                 "Tributton.winfo_vrootx")
  '(token                 "Up_Down_Button.winfo_vrootx")
  '(token                 "V_Panedwindow.winfo_vrootx")
  '(token                 "V_Panedwindow.H_Separator.winfo_vrootx")
  '(token                 "V_Scrollable.winfo_vrootx")
  '(token                 "V_Separator.winfo_vrootx")
  '(token                 "V_Strut.winfo_vrootx")
  '(token                 "Widget.winfo_vrootx")
  '(token                 "_C_Frame.winfo_vrootx")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_vrootx")
  '(token                 "_Panedwindow.winfo_vrootx")
  '(token                 "_Scrollable.winfo_vrootx")
  '(token                 "_Separator.winfo_vrootx")
  '(token                 "_Spinnerentry.winfo_vrootx")
  '(token                 "_Statusframe.winfo_vrootx")
  '(replacement           "winfo_vrootx ()")
;;; winfo_vrootx()
)

(lse-define-fill-in "winfo_vrooty()" 
  '(token)
  '(token                 "Balloon.winfo_vrooty")
  '(token                 "BaseWidget.winfo_vrooty")
  '(token                 "Button.winfo_vrooty")
  '(token                 "Buttonbox.winfo_vrooty")
  '(token                 "C_Entry.winfo_vrooty")
  '(token                 "C_Frame.winfo_vrooty")
  '(token                 "C_Listbox.winfo_vrooty")
  '(token                 "C_Menu.winfo_vrooty")
  '(token                 "C_Text.winfo_vrooty")
  '(token                 "Canvas.winfo_vrooty")
  '(token                 "Checkbutton.winfo_vrooty")
  '(token                 "Combo_Tuple.winfo_vrooty")
  '(token                 "Combo_Tuple_X.winfo_vrooty")
  '(token                 "Combobox.winfo_vrooty")
  '(token                 "Entry.winfo_vrooty")
  '(token                 "Entrybox.winfo_vrooty")
  '(token                 "Filename_Entry.winfo_vrooty")
  '(token                 "Frame.winfo_vrooty")
  '(token                 "H_Panedwindow.winfo_vrooty")
  '(token                 "H_Panedwindow.V_Separator.winfo_vrooty")
  '(token                 "H_Scrollable.winfo_vrooty")
  '(token                 "H_Separator.winfo_vrooty")
  '(token                 "H_Strut.winfo_vrooty")
  '(token                 "Label.winfo_vrooty")
  '(token                 "Listbox.winfo_vrooty")
  '(token                 "Listbox_Tuple.winfo_vrooty")
  '(token                 "Listdropentry.winfo_vrooty")
  '(token                 "Listdropspinner.winfo_vrooty")
  '(token                 "Listspinner.winfo_vrooty")
  '(token                 "Menu.winfo_vrooty")
  '(token                 "Menubutton.winfo_vrooty")
  '(token                 "Message.winfo_vrooty")
  '(token                 "Message_Window.winfo_vrooty")
  '(token                 "Misc.winfo_vrooty")
  '(token                 "Multicombobox.winfo_vrooty")
  '(token                 "Multicombobox_X.winfo_vrooty")
  '(token                 "Notebook.winfo_vrooty")
  '(token                 "Num_Spinner.winfo_vrooty")
  '(token                 "OptionMenu.winfo_vrooty")
  '(token                 "Progress_Gauge.winfo_vrooty")
  '(token                 "Progress_Gauge_T.winfo_vrooty")
  '(token                 "Radiobutton.winfo_vrooty")
  '(token                 "Scale.winfo_vrooty")
  '(token                 "Scrollbar.winfo_vrooty")
  '(token                 "Scrolled_Listbox.winfo_vrooty")
  '(token                 "Scrolled_Text.winfo_vrooty")
  '(token                 "Slide_Show.winfo_vrooty")
  '(token                 "Statuslabel.winfo_vrooty")
  '(token                 "Statuslabel.Label.winfo_vrooty")
  '(token                 "Statustext.winfo_vrooty")
  '(token                 "Statustext.Text.winfo_vrooty")
  '(token                 "Studbutton.winfo_vrooty")
  '(token                 "Tabbed_Notebook.winfo_vrooty")
  '(token                 "Text.winfo_vrooty")
  '(token                 "Tk.winfo_vrooty")
  '(token                 "Toplevel.winfo_vrooty")
  '(token                 "Tributton.winfo_vrooty")
  '(token                 "Up_Down_Button.winfo_vrooty")
  '(token                 "V_Panedwindow.winfo_vrooty")
  '(token                 "V_Panedwindow.H_Separator.winfo_vrooty")
  '(token                 "V_Scrollable.winfo_vrooty")
  '(token                 "V_Separator.winfo_vrooty")
  '(token                 "V_Strut.winfo_vrooty")
  '(token                 "Widget.winfo_vrooty")
  '(token                 "_C_Frame.winfo_vrooty")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_vrooty")
  '(token                 "_Panedwindow.winfo_vrooty")
  '(token                 "_Scrollable.winfo_vrooty")
  '(token                 "_Separator.winfo_vrooty")
  '(token                 "_Spinnerentry.winfo_vrooty")
  '(token                 "_Statusframe.winfo_vrooty")
  '(replacement           "winfo_vrooty ()")
;;; winfo_vrooty()
)

(lse-define-fill-in "winfo_width()" 
  '(token)
  '(token                 "Balloon.winfo_width")
  '(token                 "BaseWidget.winfo_width")
  '(token                 "Button.winfo_width")
  '(token                 "Buttonbox.winfo_width")
  '(token                 "C_Entry.winfo_width")
  '(token                 "C_Frame.winfo_width")
  '(token                 "C_Listbox.winfo_width")
  '(token                 "C_Menu.winfo_width")
  '(token                 "C_Text.winfo_width")
  '(token                 "Canvas.winfo_width")
  '(token                 "Checkbutton.winfo_width")
  '(token                 "Combo_Tuple.winfo_width")
  '(token                 "Combo_Tuple_X.winfo_width")
  '(token                 "Combobox.winfo_width")
  '(token                 "Entry.winfo_width")
  '(token                 "Entrybox.winfo_width")
  '(token                 "Filename_Entry.winfo_width")
  '(token                 "Frame.winfo_width")
  '(token                 "H_Panedwindow.winfo_width")
  '(token                 "H_Panedwindow.V_Separator.winfo_width")
  '(token                 "H_Scrollable.winfo_width")
  '(token                 "H_Separator.winfo_width")
  '(token                 "H_Strut.winfo_width")
  '(token                 "Label.winfo_width")
  '(token                 "Listbox.winfo_width")
  '(token                 "Listbox_Tuple.winfo_width")
  '(token                 "Listdropentry.winfo_width")
  '(token                 "Listdropspinner.winfo_width")
  '(token                 "Listspinner.winfo_width")
  '(token                 "Menu.winfo_width")
  '(token                 "Menubutton.winfo_width")
  '(token                 "Message.winfo_width")
  '(token                 "Message_Window.winfo_width")
  '(token                 "Misc.winfo_width")
  '(token                 "Multicombobox.winfo_width")
  '(token                 "Multicombobox_X.winfo_width")
  '(token                 "Notebook.winfo_width")
  '(token                 "Num_Spinner.winfo_width")
  '(token                 "OptionMenu.winfo_width")
  '(token                 "Progress_Gauge.winfo_width")
  '(token                 "Progress_Gauge_T.winfo_width")
  '(token                 "Radiobutton.winfo_width")
  '(token                 "Scale.winfo_width")
  '(token                 "Scrollbar.winfo_width")
  '(token                 "Scrolled_Listbox.winfo_width")
  '(token                 "Scrolled_Text.winfo_width")
  '(token                 "Slide_Show.winfo_width")
  '(token                 "Statuslabel.winfo_width")
  '(token                 "Statuslabel.Label.winfo_width")
  '(token                 "Statustext.winfo_width")
  '(token                 "Statustext.Text.winfo_width")
  '(token                 "Studbutton.winfo_width")
  '(token                 "Tabbed_Notebook.winfo_width")
  '(token                 "Text.winfo_width")
  '(token                 "Tk.winfo_width")
  '(token                 "Toplevel.winfo_width")
  '(token                 "Tributton.winfo_width")
  '(token                 "Up_Down_Button.winfo_width")
  '(token                 "V_Panedwindow.winfo_width")
  '(token                 "V_Panedwindow.H_Separator.winfo_width")
  '(token                 "V_Scrollable.winfo_width")
  '(token                 "V_Separator.winfo_width")
  '(token                 "V_Strut.winfo_width")
  '(token                 "Widget.winfo_width")
  '(token                 "_C_Frame.winfo_width")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_width")
  '(token                 "_Panedwindow.winfo_width")
  '(token                 "_Scrollable.winfo_width")
  '(token                 "_Separator.winfo_width")
  '(token                 "_Spinnerentry.winfo_width")
  '(token                 "_Statusframe.winfo_width")
  '(replacement           "winfo_width ()")
;;; winfo_width()
)

(lse-define-fill-in "winfo_x()" 
  '(token)
  '(token                 "Balloon.winfo_x")
  '(token                 "BaseWidget.winfo_x")
  '(token                 "Button.winfo_x")
  '(token                 "Buttonbox.winfo_x")
  '(token                 "C_Entry.winfo_x")
  '(token                 "C_Frame.winfo_x")
  '(token                 "C_Listbox.winfo_x")
  '(token                 "C_Menu.winfo_x")
  '(token                 "C_Text.winfo_x")
  '(token                 "Canvas.winfo_x")
  '(token                 "Checkbutton.winfo_x")
  '(token                 "Combo_Tuple.winfo_x")
  '(token                 "Combo_Tuple_X.winfo_x")
  '(token                 "Combobox.winfo_x")
  '(token                 "Entry.winfo_x")
  '(token                 "Entrybox.winfo_x")
  '(token                 "Filename_Entry.winfo_x")
  '(token                 "Frame.winfo_x")
  '(token                 "H_Panedwindow.winfo_x")
  '(token                 "H_Panedwindow.V_Separator.winfo_x")
  '(token                 "H_Scrollable.winfo_x")
  '(token                 "H_Separator.winfo_x")
  '(token                 "H_Strut.winfo_x")
  '(token                 "Label.winfo_x")
  '(token                 "Listbox.winfo_x")
  '(token                 "Listbox_Tuple.winfo_x")
  '(token                 "Listdropentry.winfo_x")
  '(token                 "Listdropspinner.winfo_x")
  '(token                 "Listspinner.winfo_x")
  '(token                 "Menu.winfo_x")
  '(token                 "Menubutton.winfo_x")
  '(token                 "Message.winfo_x")
  '(token                 "Message_Window.winfo_x")
  '(token                 "Misc.winfo_x")
  '(token                 "Multicombobox.winfo_x")
  '(token                 "Multicombobox_X.winfo_x")
  '(token                 "Notebook.winfo_x")
  '(token                 "Num_Spinner.winfo_x")
  '(token                 "OptionMenu.winfo_x")
  '(token                 "Progress_Gauge.winfo_x")
  '(token                 "Progress_Gauge_T.winfo_x")
  '(token                 "Radiobutton.winfo_x")
  '(token                 "Scale.winfo_x")
  '(token                 "Scrollbar.winfo_x")
  '(token                 "Scrolled_Listbox.winfo_x")
  '(token                 "Scrolled_Text.winfo_x")
  '(token                 "Slide_Show.winfo_x")
  '(token                 "Statuslabel.winfo_x")
  '(token                 "Statuslabel.Label.winfo_x")
  '(token                 "Statustext.winfo_x")
  '(token                 "Statustext.Text.winfo_x")
  '(token                 "Studbutton.winfo_x")
  '(token                 "Tabbed_Notebook.winfo_x")
  '(token                 "Text.winfo_x")
  '(token                 "Tk.winfo_x")
  '(token                 "Toplevel.winfo_x")
  '(token                 "Tributton.winfo_x")
  '(token                 "Up_Down_Button.winfo_x")
  '(token                 "V_Panedwindow.winfo_x")
  '(token                 "V_Panedwindow.H_Separator.winfo_x")
  '(token                 "V_Scrollable.winfo_x")
  '(token                 "V_Separator.winfo_x")
  '(token                 "V_Strut.winfo_x")
  '(token                 "Widget.winfo_x")
  '(token                 "_C_Frame.winfo_x")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_x")
  '(token                 "_Panedwindow.winfo_x")
  '(token                 "_Scrollable.winfo_x")
  '(token                 "_Separator.winfo_x")
  '(token                 "_Spinnerentry.winfo_x")
  '(token                 "_Statusframe.winfo_x")
  '(replacement           "winfo_x ()")
;;; winfo_x()
)

(lse-define-fill-in "winfo_y()" 
  '(token)
  '(token                 "Balloon.winfo_y")
  '(token                 "BaseWidget.winfo_y")
  '(token                 "Button.winfo_y")
  '(token                 "Buttonbox.winfo_y")
  '(token                 "C_Entry.winfo_y")
  '(token                 "C_Frame.winfo_y")
  '(token                 "C_Listbox.winfo_y")
  '(token                 "C_Menu.winfo_y")
  '(token                 "C_Text.winfo_y")
  '(token                 "Canvas.winfo_y")
  '(token                 "Checkbutton.winfo_y")
  '(token                 "Combo_Tuple.winfo_y")
  '(token                 "Combo_Tuple_X.winfo_y")
  '(token                 "Combobox.winfo_y")
  '(token                 "Entry.winfo_y")
  '(token                 "Entrybox.winfo_y")
  '(token                 "Filename_Entry.winfo_y")
  '(token                 "Frame.winfo_y")
  '(token                 "H_Panedwindow.winfo_y")
  '(token                 "H_Panedwindow.V_Separator.winfo_y")
  '(token                 "H_Scrollable.winfo_y")
  '(token                 "H_Separator.winfo_y")
  '(token                 "H_Strut.winfo_y")
  '(token                 "Label.winfo_y")
  '(token                 "Listbox.winfo_y")
  '(token                 "Listbox_Tuple.winfo_y")
  '(token                 "Listdropentry.winfo_y")
  '(token                 "Listdropspinner.winfo_y")
  '(token                 "Listspinner.winfo_y")
  '(token                 "Menu.winfo_y")
  '(token                 "Menubutton.winfo_y")
  '(token                 "Message.winfo_y")
  '(token                 "Message_Window.winfo_y")
  '(token                 "Misc.winfo_y")
  '(token                 "Multicombobox.winfo_y")
  '(token                 "Multicombobox_X.winfo_y")
  '(token                 "Notebook.winfo_y")
  '(token                 "Num_Spinner.winfo_y")
  '(token                 "OptionMenu.winfo_y")
  '(token                 "Progress_Gauge.winfo_y")
  '(token                 "Progress_Gauge_T.winfo_y")
  '(token                 "Radiobutton.winfo_y")
  '(token                 "Scale.winfo_y")
  '(token                 "Scrollbar.winfo_y")
  '(token                 "Scrolled_Listbox.winfo_y")
  '(token                 "Scrolled_Text.winfo_y")
  '(token                 "Slide_Show.winfo_y")
  '(token                 "Statuslabel.winfo_y")
  '(token                 "Statuslabel.Label.winfo_y")
  '(token                 "Statustext.winfo_y")
  '(token                 "Statustext.Text.winfo_y")
  '(token                 "Studbutton.winfo_y")
  '(token                 "Tabbed_Notebook.winfo_y")
  '(token                 "Text.winfo_y")
  '(token                 "Tk.winfo_y")
  '(token                 "Toplevel.winfo_y")
  '(token                 "Tributton.winfo_y")
  '(token                 "Up_Down_Button.winfo_y")
  '(token                 "V_Panedwindow.winfo_y")
  '(token                 "V_Panedwindow.H_Separator.winfo_y")
  '(token                 "V_Scrollable.winfo_y")
  '(token                 "V_Separator.winfo_y")
  '(token                 "V_Strut.winfo_y")
  '(token                 "Widget.winfo_y")
  '(token                 "_C_Frame.winfo_y")
  '(token                 "_Combobox.Scrolled_Listbox.winfo_y")
  '(token                 "_Panedwindow.winfo_y")
  '(token                 "_Scrollable.winfo_y")
  '(token                 "_Separator.winfo_y")
  '(token                 "_Spinnerentry.winfo_y")
  '(token                 "_Statusframe.winfo_y")
  '(replacement           "winfo_y ()")
;;; winfo_y()
)

(lse-define-fill-in "withdraw()" 
  '(token)
  '(token                 "Balloon.withdraw")
  '(token                 "Progress_Gauge_T.withdraw")
  '(token                 "Tk.withdraw")
  '(token                 "Toplevel.withdraw")
  '(token                 "Wm.withdraw")
  '(replacement           "withdraw ()")
;;; withdraw()
)

(lse-define-fill-in "PhotoImage.write:filename" 
  '(description           "Argument 1 of PhotoImage.write")
  '(leading               ",")
;;; PhotoImage.write:filename
)

(lse-define-fill-in "PhotoImage.write:format" 
  '(description           "Argument 2 of PhotoImage.write (default = None)")
  '(leading               ",")
;;; PhotoImage.write:format
)

(lse-define-fill-in "PhotoImage.write:from_coords" 
  '(description           "Argument 3 of PhotoImage.write (default = None)")
  '(leading               ",")
;;; PhotoImage.write:from_coords
)

(lse-define-fill-in "write(filename,format,from_coords)" 
  '(token)
  '(token                 "PhotoImage.write")
  '(replacement           "write («PhotoImage.write:filename», ««PhotoImage.write:format»», ««PhotoImage.write:from_coords»»)")
;;; write(filename,format,from_coords)
)

(lse-define-fill-in "C_Text.write:text" 
  '(description           "Argument 1 of C_Text.write")
  '(leading               ",")
;;; C_Text.write:text
)

(lse-define-fill-in "C_Text.write:tags" 
  '(description           "Argument 2 of C_Text.write")
  '(leading               ",")
  '(separator             ", ")
;;; C_Text.write:tags
)

(lse-define-fill-in "write(text,tags)" 
  '(token)
  '(token                 "C_Text.write")
  '(token                 "Message_Window.write")
  '(token                 "Scrolled_Text.write")
  '(replacement           "write («C_Text.write:text», ««C_Text.write:tags»»···)")
;;; write(text,tags)
)

(lse-define-fill-in "Canvas.xview:args" 
  '(description           "Argument 1 of Canvas.xview")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.xview:args
)

(lse-define-fill-in "xview(args)" 
  '(token)
  '(token                 "Canvas.xview")
  '(replacement           "xview (««Canvas.xview:args»»···)")
;;; xview(args)
)

(lse-define-fill-in "Entry.xview:index" 
  '(description           "Argument 1 of Entry.xview")
  '(leading               ",")
;;; Entry.xview:index
)

(lse-define-fill-in "xview(index)" 
  '(token)
  '(token                 "Entry.xview")
  '(replacement           "xview («Entry.xview:index»)")
;;; xview(index)
)

(lse-define-fill-in "Listbox.xview:what" 
  '(description           "Argument 1 of Listbox.xview")
  '(leading               ",")
  '(separator             ", ")
;;; Listbox.xview:what
)

(lse-define-fill-in "xview(what)" 
  '(token)
  '(token                 "Listbox.xview")
  '(token                 "Statustext.Text.xview")
  '(token                 "Text.xview")
  '(replacement           "xview (««Listbox.xview:what»»···)")
;;; xview(what)
)

(lse-define-fill-in "Entry.xview_moveto:fraction" 
  '(description           "Argument 1 of Entry.xview_moveto")
  '(leading               ",")
;;; Entry.xview_moveto:fraction
)

(lse-define-fill-in "xview_moveto(fraction)" 
  '(token)
  '(token                 "Entry.xview_moveto")
  '(replacement           "xview_moveto («Entry.xview_moveto:fraction»)")
;;; xview_moveto(fraction)
)

(lse-define-fill-in "Entry.xview_scroll:number" 
  '(description           "Argument 1 of Entry.xview_scroll")
  '(leading               ",")
;;; Entry.xview_scroll:number
)

(lse-define-fill-in "Entry.xview_scroll:what" 
  '(description           "Argument 2 of Entry.xview_scroll")
  '(leading               ",")
;;; Entry.xview_scroll:what
)

(lse-define-fill-in "xview_scroll(number,what)" 
  '(token)
  '(token                 "Entry.xview_scroll")
  '(replacement           "xview_scroll («Entry.xview_scroll:number», «Entry.xview_scroll:what»)")
;;; xview_scroll(number,what)
)

(lse-define-fill-in "Menu.yposition:index" 
  '(description           "Argument 1 of Menu.yposition")
  '(leading               ",")
;;; Menu.yposition:index
)

(lse-define-fill-in "yposition(index)" 
  '(token)
  '(token                 "C_Menu.yposition")
  '(token                 "Menu.yposition")
  '(replacement           "yposition («Menu.yposition:index»)")
;;; yposition(index)
)

(lse-define-fill-in "Canvas.yview:args" 
  '(description           "Argument 1 of Canvas.yview")
  '(leading               ",")
  '(separator             ", ")
;;; Canvas.yview:args
)

(lse-define-fill-in "yview(args)" 
  '(token)
  '(token                 "Canvas.yview")
  '(token                 "_V_Scrolled_Tuple.yview")
  '(replacement           "yview (««Canvas.yview:args»»···)")
;;; yview(args)
)

(lse-define-fill-in "Listbox.yview:what" 
  '(description           "Argument 1 of Listbox.yview")
  '(leading               ",")
  '(separator             ", ")
;;; Listbox.yview:what
)

(lse-define-fill-in "yview(what)" 
  '(token)
  '(token                 "Listbox.yview")
  '(token                 "Statustext.Text.yview")
  '(token                 "Text.yview")
  '(replacement           "yview (««Listbox.yview:what»»···)")
;;; yview(what)
)

(lse-define-fill-in "Statustext.Text.yview_pickplace:what" 
  '(description           "Argument 1 of Statustext.Text.yview_pickplace")
  '(leading               ",")
  '(separator             ", ")
;;; Statustext.Text.yview_pickplace:what
)

(lse-define-fill-in "yview_pickplace(what)" 
  '(token)
  '(token                 "Statustext.Text.yview_pickplace")
  '(token                 "Text.yview_pickplace")
  '(replacement           "yview_pickplace (««Statustext.Text.yview_pickplace:what»»···)")
;;; yview_pickplace(what)
)

(lse-define-fill-in "PhotoImage.zoom:x" 
  '(description           "Argument 1 of PhotoImage.zoom")
  '(leading               ",")
;;; PhotoImage.zoom:x
)

(lse-define-fill-in "PhotoImage.zoom:y" 
  '(description           "Argument 2 of PhotoImage.zoom (default = )")
  '(leading               ",")
;;; PhotoImage.zoom:y
)

(lse-define-fill-in "zoom(x,y)" 
  '(token)
  '(token                 "PhotoImage.zoom")
  '(replacement           "zoom («PhotoImage.zoom:x», ««PhotoImage.zoom:y»»)")
;;; zoom(x,y)
)

