;-*- coding: utf-8 -*-

;;;; Copyright (C) 1998-2016 Mag. Christian Tanzer. All rights reserved.
;;;; Glasauergasse 32, A--1130 Wien, Austria. tanzer.co.at

;;;; ****************************************************************************
;;;; This file is part of LS-Emacs, a package built on top of GNU Emacs.
;;;;
;;;; Like GNU Emacs, LS-Emacs is free software; you can redistribute it
;;;; and/or modify it under the terms of the GNU General Public License as
;;;; published by the Free Software Foundation; either version 2 of the
;;;; License, or (at your option) any later version.
;;;;
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;;
;;;; You should have received a copy of the GNU General Public License
;;;; along with this program; if not, write to the Free Software
;;;; Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
;;;; ****************************************************************************
;;;;
;;;;++
;;;; Name
;;;;    lse-language-python
;;;;
;;;; Purpose
;;;;    Define characteristics of LSE language python
;;;;
;;;; Revision Dates
;;;;     3-Jan-1998 (CT) Creation
;;;;     2-Mar-1998 (CT) lse-python-mode added
;;;;    13-Apr-1998 (CT) lse-python:goto-beginning-of-class added
;;;;     3-Aug-1998 (CT) Added `+' to python-mode's `comment-start' and
;;;;                     `comment-start-skip'
;;;;     4-Aug-1998 (CT) Patch `imenu-example--python-class-regexp' and
;;;;                     `imenu-example--python-method-regexp'
;;;;     8-Aug-1998 (CT) Patch removed
;;;;    31-Mar-1999 (CT) `lse-templates-python-lib' added
;;;;     7-Apr-1999 (CT) `lse-templates-python-re' and friends added
;;;;    24-Sep-1999 (CT) `lse-python:save-position' and friends added
;;;;    24-Sep-1999 (CT) `lse-python:goto-begin-of-block' added
;;;;     6-Jun-2000 (CT) `lse-python:goto-begin-of-block' changed to go to
;;;;                     `if' when on `else'
;;;;     8-Sep-2002 (CT) `lse-python:goto-next-statement` and
;;;;                     `lse-python:goto-prev-statement` added
;;;;     8-Sep-2002 (CT) `red gold` bindings added
;;;;    18-Nov-2002 (CT) `red` cursor bindings added
;;;;    18-Nov-2002 (CT) `lse-python:goto-next-statement-end` and
;;;;                     `lse-python:goto-prev-statement-end` added
;;;;    20-Nov-2002 (CT)  s/lse-python-mode/python-mode/ and call saved
;;;;                      `lse:python-mode:std-python-mode` from there
;;;;     4-Mar-2003 (CT) `lse-templates-python-TOM` and
;;;;                     `lse-templates-python-TTA` added
;;;;    17-Aug-2006 (CT) Disable local binding for `f1`
;;;;     4-Oct-2007 (CT) Use `lse-tpu:next-end-of-line` instead of
;;;;                     `lse-tpu:end-of-line`
;;;;     4-Oct-2007 (CT) `lse-python:update-patchlevel` added and bound to
;;;;                     `[red ?v]`
;;;;     4-Oct-2007 (CT) `extras` added to `lse-python:update-patchlevel`
;;;;     5-Oct-2007 (CT) `lse-python:update-patchlevel-many` and
;;;;                     `lse-python:update-patchlevel-one` added
;;;;    25-Oct-2007 (CT) `lse-python:update-patchlevel` changed to check
;;;;                     `verify-visited-file-modtime`
;;;;    30-Aug-2010 (CT) `lse-python:goto-near-top-pos` added
;;;;    10-Nov-2010 (CT) Use `mapc` instead of `mapcar` where appropriate
;;;;    18-Feb-2012 (CT) Factor `last-position` to `lse-tpu`
;;;;    19-Feb-2012 (CT) Use `local-set-asp` instead of `local-set-smk`
;;;;    24-Feb-2012 (CT) Redefine `py-imenu-class-regexp` and
;;;;                     `py-imenu-method-regexp` to support continuation lines
;;;;    24-Feb-2012 (CT) Rename `goto-beginning-of-class` to
;;;;                     `goto-nearest-class-head`...
;;;;    24-Feb-2012 (CT) Add `lse-python:goto-class-head` and friends
;;;;    24-Feb-2012 (CT) Revamp py-menu (to put in lse-python definitions)
;;;;     4-Jul-2012 (CT) Add and bind `lse-python:goto-next-var`,
;;;;                     `lse-python:goto-next-doctest`
;;;;     8-Apr-2013 (CT) Add `condition-case` to `lse-python:indent-line`
;;;;    12-Nov-2014 (CT) Adapt to `python-mode` 6.1.2
;;;;    12-Nov-2014 (CT) Use `lse-tpu:newline-and-indent:on`
;;;;    13-Nov-2014 (CT) Use `lse-keys/define`
;;;;    21-Jan-2015 (CT) Adapt to changes between python-mode 5.2 and 6.1
;;;;    15-Jul-2015 (CT) Factor `lse-python`; use `python`, not `python-mode`
;;;;    21-Jul-2015 (CT) Turn off `flyspell-mode` (messes up `mouse-2`)
;;;;    10-Aug-2015 (CT) Remove turn off of `flyspell-mode`: give it another try
;;;;     5-Oct-2016 (CT) Turn off `flyspell-mode` (messes up `mouse-2`)
;;;;                     * it just interferes to much will normal `mouse-2` usage
;;;;    ««revision-date»»···
;;;;--

(lse-language:define "python"
    '(
       (lse-language:initial-fill-in      "««python-root»»")
       (lse-language:tab-increment        4)
       (lse-comment:delim_char_set        "#")
       (lse-comment:head_delim            "#")
       (lse-comment:head_delim_pattern    "#+ *")
       (lse-tpu:ident-group-chars         "_")
     )
    '(
       lse-tpu:newline-and-indent:on
       lse-tpu:auto-fill-mode:on
     )
    '(
       "lse-templates-python"
       "lse-templates-python-MOM"
     )
    137
     67
;;; python
)

(require 'lse-tpu)
(require 'lse-python)
(require 'python)

(fset 'lse:python-mode:std-python-mode (symbol-function 'python-mode))

;;; 12-Nov-2014
(defvar lse-python-mode:local-key-to-unset
  (list
    [(:)]
    [(\#)]
    [(backspace)]
    [(control backspace)]
    [(control j)]
    [(control return)]
    [(delete)]
    [(esc) (tab)]
    [(f1)]
    [(meta i)]
    [(meta tab)]
    [(return)]
    [(super backspace)]
    [(super q)]
    [(tab)]
  )
  "Override this in your .emacs file, if you want a different set of
  keybindings defined by standard python-mode to be locally unset."
)

(defun python-mode ()
  (interactive)
  (lse:python-mode:std-python-mode)
  (when (fboundp 'flyspell-mode)
    ;; turn it off: redefines mouse-2 to correct allegedly misspelled word
    (flyspell-mode -1)
  )
  (setq comment-start      "#+ " )
  (setq comment-start-skip "#+ *")

  ;; unset locally defined keys listed by lse-python-mode:local-key-to-unset
  (mapc #'local-unset-key lse-python-mode:local-key-to-unset)
  (lse-keys/define #'local-set-asp
    '(
      ([red      ?a]     lse-python:goto-function-head)
      ([pink     ?a]     lse-python:goto-next-function-head)
      ([green    ?a]     lse-python:goto-function-tail)
      ([red      ?b]     lse-python:goto-begin-of-block)
      ([green    ?b]     lse-python:goto-end-of-block)
      ([red      ?c]     lse-python:goto-class-head)
      ([pink     ?c]     lse-python:goto-next-class-head)
      ([green    ?c]     lse-python:goto-class-tail)
      ([red      ?e]     lse-python:goto-function-tail)
      ([red      ?f]     lse-python:goto-end-of-block)
      ([red      ?g]     lse-python:goto-class-tail)
      ([red      ?r]     lse-python:goto-prev-statement)
      ([red      ?s]     lse-python:goto-next-statement)
      ([green    ?s]     lse-python:goto-prev-statement)
      ([red      ?t]     lse-python:goto-next-doctest)
      ([green    ?t]     lse-python:goto-prev-doctest)
      ([red      ?v]     lse-python:goto-next-var-g)
      ([green    ?v]     lse-python:goto-prev-var-g)
      ([red   right]     lse-python:goto-next-statement)
      ([red   ?\C-e]     lse-python:goto-next-statement-end)
      ([red    left]     lse-python:goto-prev-statement)
      ([red   ?\C-a]     lse-python:goto-prev-statement-end)
      ([red      up]     lse-python:goto-begin-of-block)
      ([red    down]     lse-python:goto-end-of-block)
      ([red  C-home]     lse-python:goto-near-top-pos)
    )
  )
  (imenu-add-to-menubar "Index")
  (easy-menu-remove-item python-mode-map '("Python") "Skeletons")
  (setq indent-line-function 'lse-python:indent-line)
  (lse-language:use "python")
; python-mode
)

;;;  4-Oct-2007
(defconst lse-python:patchlevel-pattern
  (concat
    "\\(patchlevel += +\\)"                      ; \\1 patchlevel head
    "\\([0-9]+\\)"                               ; \\2 patchlevel value
    "\\(.*\n?\\)"                                ; \\3 patchlevel tail
    "\\( *, date += \"\\)"                       ; \\3 date       head
    "\\( ?[0-9]+-[A-Z][a-z]+-[0-9]+ ?\\)"        ; \\3 date       value
    "\\(\"\\)"                                   ; \\3 date       tail
  )
)

;;;  4-Oct-2007
(defun lse-python:update-patchlevel ()
  "Update patchlevel/date of a Python Version file."
  (interactive)
  (save-mark-and-excursion
    (save-match-data
      (if (verify-visited-file-modtime (current-buffer))
          t
        (if (buffer-modified-p (current-buffer))
            (error "Buffer was modified but related file changed on disk")
          (lse-revert-buffer)
        )
      )
      (lse-tpu:move-to-beginning)
      (if (re-search-forward lse-python:patchlevel-pattern (buffer-size) t)
          (let* ((p_head  (match-string-no-properties 1))
                 (p_value (match-string-no-properties 2))
                 (p_tail  (match-string-no-properties 3))
                 (d_head  (match-string-no-properties 4))
                 (d_value (format "%11s " (lse-dd-mmm-yyyy)))
                 (d_tail  (match-string-no-properties 6))
                 (new_pv  (format "%d" (1+ (string-to-number p_value))))
                 (user    (concat "(" (lse-user-initials)  ")"))
                 (rv_tail "")
                 (extras  "")
                )
            (replace-match
              (concat p_head new_pv p_tail d_head d_value d_tail)
            )
            (if (re-search-backward
                  (concat user " \\( +\\)" "Patchlevel +increased to") 0 t
                )
                (setq extras (match-string-no-properties 1))
            )
            (lse-tpu:move-to-beginning)
            (if (re-search-forward
                  (concat "# +" d_value user " +"
                          "Patchlevel +increased to [0-9]+\\(.*\\)\n"
                  )
                  (buffer-size) t
                )
                (progn
                  (setq rv_tail (match-string-no-properties 1))
                  (replace-match "")
                )
            )
            (if (re-search-forward
                  "^#\\( +««revision-date»»···\\|--\\)"(buffer-size) t
                )
                (replace-match
                  (concat
                    "#    " d_value user extras
                      " Patchlevel     increased to " new_pv
                    "\n"
                    (match-string 0)
                  )
                )
            )
            (message "Patchlevel increased to %s" new_pv)
          )
        (message "No patchlevel/date code found.")
      )
    )
  )
; lse-python:update-patchlevel
)

;;;  5-Oct-2007
(defun lse-python:update-patchlevel-many (&rest arg)
  (mapc 'lse-python:update-patchlevel-one arg)
; lse-python:update-patchlevel-many
)

;;;  5-Oct-2007
(defun lse-python:update-patchlevel-one (name)
  (save-mark-and-excursion
    (if (get-buffer name)
        (progn
          (set-buffer name)
          (lse-python:update-patchlevel)
        )
      (message "No buffer named `%s` exists" name)
    )
  )
; lse-python:update-patchlevel-one
)

;;; Setup python menu for menu bar

;; remove Python menu defined by std-python-mode
; (define-key py-mode-map [menu-bar Python] nil)

;; define Python menu with bindings to lse-python functions
;;; 24-Feb-2012
(defvar lse-python:menu:class-spec
  ( list
    "-"
    ["Goto start of containing class"  lse-python:goto-class-head            t]
    ["Goto end of containing class"    lse-python:goto-class-tail            t]
    ["Goto start of next class"        lse-python:goto-next-class-head       t]
  )
  "Specification for class-specific Python menu"
)

;;; 24-Feb-2012
(defvar lse-python:menu:function-spec
  ( list
    "-"
    ["Goto start of containing def"    lse-python:goto-function-head         t]
    ["Goto end of containing def"      lse-python:goto-function-tail         t]
    ["Goto start of next def"          lse-python:goto-next-function-head    t]
  )
  "Specification for function-specific Python menu"
)

;;; 24-Feb-2012
(defvar lse-python:menu:block-spec
  ( list
    "-"
    ["Go up to start of block"           lse-python:goto-begin-of-block       t]
    ["Go to end of block"                lse-python:goto-end-of-block         t]
    ["Goto next statement"               lse-python:goto-next-statement       t]
    ["Goto end of next statement"        lse-python:goto-next-statement-end   t]
    ["Goto previous statement"           lse-python:goto-prev-statement       t]
    ["Goto end of previous statement"    lse-python:goto-prev-statement-end   t]
    ["Goto next global variable def"     lse-python:goto-next-var-g           t]
    ["Goto previous global variable def" lse-python:goto-prev-var-g           t]
    ["Goto next doctest"                 lse-python:goto-next-doctest         t]
    ["Goto previous doctest"             lse-python:goto-prev-doctest         t]
  )
  "Specification for block-specific Python menu"
)

(easy-menu-define python-menu python-mode-map "Python Mode menu"
  ( append
    ( list "Python"
      ["Goto position near the top" lse-python:goto-near-top-pos t]
      ["Indent current line"        lse-python:indent-line       t]
   )
   lse-python:menu:class-spec
   lse-python:menu:function-spec
   lse-python:menu:block-spec
   nil
  )
)

;;; __END__ lse-language-python.lse
